#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4500389823279432985) {
   out_4500389823279432985[0] = 0;
   out_4500389823279432985[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4500389823279432985[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4500389823279432985[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4500389823279432985[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4500389823279432985[5] = -sin(in_vec[1]);
   out_4500389823279432985[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4500389823279432985[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4500389823279432985[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4500389823279432985[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4500389823279432985[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4500389823279432985[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4500389823279432985[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4500389823279432985[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4500389823279432985[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4500389823279432985[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4500389823279432985[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4500389823279432985[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1913535744177293566) {
   out_1913535744177293566[0] = delta_x[0] + nom_x[0];
   out_1913535744177293566[1] = delta_x[1] + nom_x[1];
   out_1913535744177293566[2] = delta_x[2] + nom_x[2];
   out_1913535744177293566[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1913535744177293566[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1913535744177293566[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1913535744177293566[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1913535744177293566[7] = delta_x[6] + nom_x[7];
   out_1913535744177293566[8] = delta_x[7] + nom_x[8];
   out_1913535744177293566[9] = delta_x[8] + nom_x[9];
   out_1913535744177293566[10] = delta_x[9] + nom_x[10];
   out_1913535744177293566[11] = delta_x[10] + nom_x[11];
   out_1913535744177293566[12] = delta_x[11] + nom_x[12];
   out_1913535744177293566[13] = delta_x[12] + nom_x[13];
   out_1913535744177293566[14] = delta_x[13] + nom_x[14];
   out_1913535744177293566[15] = delta_x[14] + nom_x[15];
   out_1913535744177293566[16] = delta_x[15] + nom_x[16];
   out_1913535744177293566[17] = delta_x[16] + nom_x[17];
   out_1913535744177293566[18] = delta_x[17] + nom_x[18];
   out_1913535744177293566[19] = delta_x[18] + nom_x[19];
   out_1913535744177293566[20] = delta_x[19] + nom_x[20];
   out_1913535744177293566[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2851117358798162907) {
   out_2851117358798162907[0] = -nom_x[0] + true_x[0];
   out_2851117358798162907[1] = -nom_x[1] + true_x[1];
   out_2851117358798162907[2] = -nom_x[2] + true_x[2];
   out_2851117358798162907[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2851117358798162907[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2851117358798162907[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2851117358798162907[6] = -nom_x[7] + true_x[7];
   out_2851117358798162907[7] = -nom_x[8] + true_x[8];
   out_2851117358798162907[8] = -nom_x[9] + true_x[9];
   out_2851117358798162907[9] = -nom_x[10] + true_x[10];
   out_2851117358798162907[10] = -nom_x[11] + true_x[11];
   out_2851117358798162907[11] = -nom_x[12] + true_x[12];
   out_2851117358798162907[12] = -nom_x[13] + true_x[13];
   out_2851117358798162907[13] = -nom_x[14] + true_x[14];
   out_2851117358798162907[14] = -nom_x[15] + true_x[15];
   out_2851117358798162907[15] = -nom_x[16] + true_x[16];
   out_2851117358798162907[16] = -nom_x[17] + true_x[17];
   out_2851117358798162907[17] = -nom_x[18] + true_x[18];
   out_2851117358798162907[18] = -nom_x[19] + true_x[19];
   out_2851117358798162907[19] = -nom_x[20] + true_x[20];
   out_2851117358798162907[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2697157995522224710) {
   out_2697157995522224710[0] = 1.0;
   out_2697157995522224710[1] = 0;
   out_2697157995522224710[2] = 0;
   out_2697157995522224710[3] = 0;
   out_2697157995522224710[4] = 0;
   out_2697157995522224710[5] = 0;
   out_2697157995522224710[6] = 0;
   out_2697157995522224710[7] = 0;
   out_2697157995522224710[8] = 0;
   out_2697157995522224710[9] = 0;
   out_2697157995522224710[10] = 0;
   out_2697157995522224710[11] = 0;
   out_2697157995522224710[12] = 0;
   out_2697157995522224710[13] = 0;
   out_2697157995522224710[14] = 0;
   out_2697157995522224710[15] = 0;
   out_2697157995522224710[16] = 0;
   out_2697157995522224710[17] = 0;
   out_2697157995522224710[18] = 0;
   out_2697157995522224710[19] = 0;
   out_2697157995522224710[20] = 0;
   out_2697157995522224710[21] = 0;
   out_2697157995522224710[22] = 1.0;
   out_2697157995522224710[23] = 0;
   out_2697157995522224710[24] = 0;
   out_2697157995522224710[25] = 0;
   out_2697157995522224710[26] = 0;
   out_2697157995522224710[27] = 0;
   out_2697157995522224710[28] = 0;
   out_2697157995522224710[29] = 0;
   out_2697157995522224710[30] = 0;
   out_2697157995522224710[31] = 0;
   out_2697157995522224710[32] = 0;
   out_2697157995522224710[33] = 0;
   out_2697157995522224710[34] = 0;
   out_2697157995522224710[35] = 0;
   out_2697157995522224710[36] = 0;
   out_2697157995522224710[37] = 0;
   out_2697157995522224710[38] = 0;
   out_2697157995522224710[39] = 0;
   out_2697157995522224710[40] = 0;
   out_2697157995522224710[41] = 0;
   out_2697157995522224710[42] = 0;
   out_2697157995522224710[43] = 0;
   out_2697157995522224710[44] = 1.0;
   out_2697157995522224710[45] = 0;
   out_2697157995522224710[46] = 0;
   out_2697157995522224710[47] = 0;
   out_2697157995522224710[48] = 0;
   out_2697157995522224710[49] = 0;
   out_2697157995522224710[50] = 0;
   out_2697157995522224710[51] = 0;
   out_2697157995522224710[52] = 0;
   out_2697157995522224710[53] = 0;
   out_2697157995522224710[54] = 0;
   out_2697157995522224710[55] = 0;
   out_2697157995522224710[56] = 0;
   out_2697157995522224710[57] = 0;
   out_2697157995522224710[58] = 0;
   out_2697157995522224710[59] = 0;
   out_2697157995522224710[60] = 0;
   out_2697157995522224710[61] = 0;
   out_2697157995522224710[62] = 0;
   out_2697157995522224710[63] = 0;
   out_2697157995522224710[64] = 0;
   out_2697157995522224710[65] = 0;
   out_2697157995522224710[66] = -0.5*state[4];
   out_2697157995522224710[67] = -0.5*state[5];
   out_2697157995522224710[68] = -0.5*state[6];
   out_2697157995522224710[69] = 0;
   out_2697157995522224710[70] = 0;
   out_2697157995522224710[71] = 0;
   out_2697157995522224710[72] = 0;
   out_2697157995522224710[73] = 0;
   out_2697157995522224710[74] = 0;
   out_2697157995522224710[75] = 0;
   out_2697157995522224710[76] = 0;
   out_2697157995522224710[77] = 0;
   out_2697157995522224710[78] = 0;
   out_2697157995522224710[79] = 0;
   out_2697157995522224710[80] = 0;
   out_2697157995522224710[81] = 0;
   out_2697157995522224710[82] = 0;
   out_2697157995522224710[83] = 0;
   out_2697157995522224710[84] = 0;
   out_2697157995522224710[85] = 0;
   out_2697157995522224710[86] = 0;
   out_2697157995522224710[87] = 0.5*state[3];
   out_2697157995522224710[88] = 0.5*state[6];
   out_2697157995522224710[89] = -0.5*state[5];
   out_2697157995522224710[90] = 0;
   out_2697157995522224710[91] = 0;
   out_2697157995522224710[92] = 0;
   out_2697157995522224710[93] = 0;
   out_2697157995522224710[94] = 0;
   out_2697157995522224710[95] = 0;
   out_2697157995522224710[96] = 0;
   out_2697157995522224710[97] = 0;
   out_2697157995522224710[98] = 0;
   out_2697157995522224710[99] = 0;
   out_2697157995522224710[100] = 0;
   out_2697157995522224710[101] = 0;
   out_2697157995522224710[102] = 0;
   out_2697157995522224710[103] = 0;
   out_2697157995522224710[104] = 0;
   out_2697157995522224710[105] = 0;
   out_2697157995522224710[106] = 0;
   out_2697157995522224710[107] = 0;
   out_2697157995522224710[108] = -0.5*state[6];
   out_2697157995522224710[109] = 0.5*state[3];
   out_2697157995522224710[110] = 0.5*state[4];
   out_2697157995522224710[111] = 0;
   out_2697157995522224710[112] = 0;
   out_2697157995522224710[113] = 0;
   out_2697157995522224710[114] = 0;
   out_2697157995522224710[115] = 0;
   out_2697157995522224710[116] = 0;
   out_2697157995522224710[117] = 0;
   out_2697157995522224710[118] = 0;
   out_2697157995522224710[119] = 0;
   out_2697157995522224710[120] = 0;
   out_2697157995522224710[121] = 0;
   out_2697157995522224710[122] = 0;
   out_2697157995522224710[123] = 0;
   out_2697157995522224710[124] = 0;
   out_2697157995522224710[125] = 0;
   out_2697157995522224710[126] = 0;
   out_2697157995522224710[127] = 0;
   out_2697157995522224710[128] = 0;
   out_2697157995522224710[129] = 0.5*state[5];
   out_2697157995522224710[130] = -0.5*state[4];
   out_2697157995522224710[131] = 0.5*state[3];
   out_2697157995522224710[132] = 0;
   out_2697157995522224710[133] = 0;
   out_2697157995522224710[134] = 0;
   out_2697157995522224710[135] = 0;
   out_2697157995522224710[136] = 0;
   out_2697157995522224710[137] = 0;
   out_2697157995522224710[138] = 0;
   out_2697157995522224710[139] = 0;
   out_2697157995522224710[140] = 0;
   out_2697157995522224710[141] = 0;
   out_2697157995522224710[142] = 0;
   out_2697157995522224710[143] = 0;
   out_2697157995522224710[144] = 0;
   out_2697157995522224710[145] = 0;
   out_2697157995522224710[146] = 0;
   out_2697157995522224710[147] = 0;
   out_2697157995522224710[148] = 0;
   out_2697157995522224710[149] = 0;
   out_2697157995522224710[150] = 0;
   out_2697157995522224710[151] = 0;
   out_2697157995522224710[152] = 0;
   out_2697157995522224710[153] = 1.0;
   out_2697157995522224710[154] = 0;
   out_2697157995522224710[155] = 0;
   out_2697157995522224710[156] = 0;
   out_2697157995522224710[157] = 0;
   out_2697157995522224710[158] = 0;
   out_2697157995522224710[159] = 0;
   out_2697157995522224710[160] = 0;
   out_2697157995522224710[161] = 0;
   out_2697157995522224710[162] = 0;
   out_2697157995522224710[163] = 0;
   out_2697157995522224710[164] = 0;
   out_2697157995522224710[165] = 0;
   out_2697157995522224710[166] = 0;
   out_2697157995522224710[167] = 0;
   out_2697157995522224710[168] = 0;
   out_2697157995522224710[169] = 0;
   out_2697157995522224710[170] = 0;
   out_2697157995522224710[171] = 0;
   out_2697157995522224710[172] = 0;
   out_2697157995522224710[173] = 0;
   out_2697157995522224710[174] = 0;
   out_2697157995522224710[175] = 1.0;
   out_2697157995522224710[176] = 0;
   out_2697157995522224710[177] = 0;
   out_2697157995522224710[178] = 0;
   out_2697157995522224710[179] = 0;
   out_2697157995522224710[180] = 0;
   out_2697157995522224710[181] = 0;
   out_2697157995522224710[182] = 0;
   out_2697157995522224710[183] = 0;
   out_2697157995522224710[184] = 0;
   out_2697157995522224710[185] = 0;
   out_2697157995522224710[186] = 0;
   out_2697157995522224710[187] = 0;
   out_2697157995522224710[188] = 0;
   out_2697157995522224710[189] = 0;
   out_2697157995522224710[190] = 0;
   out_2697157995522224710[191] = 0;
   out_2697157995522224710[192] = 0;
   out_2697157995522224710[193] = 0;
   out_2697157995522224710[194] = 0;
   out_2697157995522224710[195] = 0;
   out_2697157995522224710[196] = 0;
   out_2697157995522224710[197] = 1.0;
   out_2697157995522224710[198] = 0;
   out_2697157995522224710[199] = 0;
   out_2697157995522224710[200] = 0;
   out_2697157995522224710[201] = 0;
   out_2697157995522224710[202] = 0;
   out_2697157995522224710[203] = 0;
   out_2697157995522224710[204] = 0;
   out_2697157995522224710[205] = 0;
   out_2697157995522224710[206] = 0;
   out_2697157995522224710[207] = 0;
   out_2697157995522224710[208] = 0;
   out_2697157995522224710[209] = 0;
   out_2697157995522224710[210] = 0;
   out_2697157995522224710[211] = 0;
   out_2697157995522224710[212] = 0;
   out_2697157995522224710[213] = 0;
   out_2697157995522224710[214] = 0;
   out_2697157995522224710[215] = 0;
   out_2697157995522224710[216] = 0;
   out_2697157995522224710[217] = 0;
   out_2697157995522224710[218] = 0;
   out_2697157995522224710[219] = 1.0;
   out_2697157995522224710[220] = 0;
   out_2697157995522224710[221] = 0;
   out_2697157995522224710[222] = 0;
   out_2697157995522224710[223] = 0;
   out_2697157995522224710[224] = 0;
   out_2697157995522224710[225] = 0;
   out_2697157995522224710[226] = 0;
   out_2697157995522224710[227] = 0;
   out_2697157995522224710[228] = 0;
   out_2697157995522224710[229] = 0;
   out_2697157995522224710[230] = 0;
   out_2697157995522224710[231] = 0;
   out_2697157995522224710[232] = 0;
   out_2697157995522224710[233] = 0;
   out_2697157995522224710[234] = 0;
   out_2697157995522224710[235] = 0;
   out_2697157995522224710[236] = 0;
   out_2697157995522224710[237] = 0;
   out_2697157995522224710[238] = 0;
   out_2697157995522224710[239] = 0;
   out_2697157995522224710[240] = 0;
   out_2697157995522224710[241] = 1.0;
   out_2697157995522224710[242] = 0;
   out_2697157995522224710[243] = 0;
   out_2697157995522224710[244] = 0;
   out_2697157995522224710[245] = 0;
   out_2697157995522224710[246] = 0;
   out_2697157995522224710[247] = 0;
   out_2697157995522224710[248] = 0;
   out_2697157995522224710[249] = 0;
   out_2697157995522224710[250] = 0;
   out_2697157995522224710[251] = 0;
   out_2697157995522224710[252] = 0;
   out_2697157995522224710[253] = 0;
   out_2697157995522224710[254] = 0;
   out_2697157995522224710[255] = 0;
   out_2697157995522224710[256] = 0;
   out_2697157995522224710[257] = 0;
   out_2697157995522224710[258] = 0;
   out_2697157995522224710[259] = 0;
   out_2697157995522224710[260] = 0;
   out_2697157995522224710[261] = 0;
   out_2697157995522224710[262] = 0;
   out_2697157995522224710[263] = 1.0;
   out_2697157995522224710[264] = 0;
   out_2697157995522224710[265] = 0;
   out_2697157995522224710[266] = 0;
   out_2697157995522224710[267] = 0;
   out_2697157995522224710[268] = 0;
   out_2697157995522224710[269] = 0;
   out_2697157995522224710[270] = 0;
   out_2697157995522224710[271] = 0;
   out_2697157995522224710[272] = 0;
   out_2697157995522224710[273] = 0;
   out_2697157995522224710[274] = 0;
   out_2697157995522224710[275] = 0;
   out_2697157995522224710[276] = 0;
   out_2697157995522224710[277] = 0;
   out_2697157995522224710[278] = 0;
   out_2697157995522224710[279] = 0;
   out_2697157995522224710[280] = 0;
   out_2697157995522224710[281] = 0;
   out_2697157995522224710[282] = 0;
   out_2697157995522224710[283] = 0;
   out_2697157995522224710[284] = 0;
   out_2697157995522224710[285] = 1.0;
   out_2697157995522224710[286] = 0;
   out_2697157995522224710[287] = 0;
   out_2697157995522224710[288] = 0;
   out_2697157995522224710[289] = 0;
   out_2697157995522224710[290] = 0;
   out_2697157995522224710[291] = 0;
   out_2697157995522224710[292] = 0;
   out_2697157995522224710[293] = 0;
   out_2697157995522224710[294] = 0;
   out_2697157995522224710[295] = 0;
   out_2697157995522224710[296] = 0;
   out_2697157995522224710[297] = 0;
   out_2697157995522224710[298] = 0;
   out_2697157995522224710[299] = 0;
   out_2697157995522224710[300] = 0;
   out_2697157995522224710[301] = 0;
   out_2697157995522224710[302] = 0;
   out_2697157995522224710[303] = 0;
   out_2697157995522224710[304] = 0;
   out_2697157995522224710[305] = 0;
   out_2697157995522224710[306] = 0;
   out_2697157995522224710[307] = 1.0;
   out_2697157995522224710[308] = 0;
   out_2697157995522224710[309] = 0;
   out_2697157995522224710[310] = 0;
   out_2697157995522224710[311] = 0;
   out_2697157995522224710[312] = 0;
   out_2697157995522224710[313] = 0;
   out_2697157995522224710[314] = 0;
   out_2697157995522224710[315] = 0;
   out_2697157995522224710[316] = 0;
   out_2697157995522224710[317] = 0;
   out_2697157995522224710[318] = 0;
   out_2697157995522224710[319] = 0;
   out_2697157995522224710[320] = 0;
   out_2697157995522224710[321] = 0;
   out_2697157995522224710[322] = 0;
   out_2697157995522224710[323] = 0;
   out_2697157995522224710[324] = 0;
   out_2697157995522224710[325] = 0;
   out_2697157995522224710[326] = 0;
   out_2697157995522224710[327] = 0;
   out_2697157995522224710[328] = 0;
   out_2697157995522224710[329] = 1.0;
   out_2697157995522224710[330] = 0;
   out_2697157995522224710[331] = 0;
   out_2697157995522224710[332] = 0;
   out_2697157995522224710[333] = 0;
   out_2697157995522224710[334] = 0;
   out_2697157995522224710[335] = 0;
   out_2697157995522224710[336] = 0;
   out_2697157995522224710[337] = 0;
   out_2697157995522224710[338] = 0;
   out_2697157995522224710[339] = 0;
   out_2697157995522224710[340] = 0;
   out_2697157995522224710[341] = 0;
   out_2697157995522224710[342] = 0;
   out_2697157995522224710[343] = 0;
   out_2697157995522224710[344] = 0;
   out_2697157995522224710[345] = 0;
   out_2697157995522224710[346] = 0;
   out_2697157995522224710[347] = 0;
   out_2697157995522224710[348] = 0;
   out_2697157995522224710[349] = 0;
   out_2697157995522224710[350] = 0;
   out_2697157995522224710[351] = 1.0;
   out_2697157995522224710[352] = 0;
   out_2697157995522224710[353] = 0;
   out_2697157995522224710[354] = 0;
   out_2697157995522224710[355] = 0;
   out_2697157995522224710[356] = 0;
   out_2697157995522224710[357] = 0;
   out_2697157995522224710[358] = 0;
   out_2697157995522224710[359] = 0;
   out_2697157995522224710[360] = 0;
   out_2697157995522224710[361] = 0;
   out_2697157995522224710[362] = 0;
   out_2697157995522224710[363] = 0;
   out_2697157995522224710[364] = 0;
   out_2697157995522224710[365] = 0;
   out_2697157995522224710[366] = 0;
   out_2697157995522224710[367] = 0;
   out_2697157995522224710[368] = 0;
   out_2697157995522224710[369] = 0;
   out_2697157995522224710[370] = 0;
   out_2697157995522224710[371] = 0;
   out_2697157995522224710[372] = 0;
   out_2697157995522224710[373] = 1.0;
   out_2697157995522224710[374] = 0;
   out_2697157995522224710[375] = 0;
   out_2697157995522224710[376] = 0;
   out_2697157995522224710[377] = 0;
   out_2697157995522224710[378] = 0;
   out_2697157995522224710[379] = 0;
   out_2697157995522224710[380] = 0;
   out_2697157995522224710[381] = 0;
   out_2697157995522224710[382] = 0;
   out_2697157995522224710[383] = 0;
   out_2697157995522224710[384] = 0;
   out_2697157995522224710[385] = 0;
   out_2697157995522224710[386] = 0;
   out_2697157995522224710[387] = 0;
   out_2697157995522224710[388] = 0;
   out_2697157995522224710[389] = 0;
   out_2697157995522224710[390] = 0;
   out_2697157995522224710[391] = 0;
   out_2697157995522224710[392] = 0;
   out_2697157995522224710[393] = 0;
   out_2697157995522224710[394] = 0;
   out_2697157995522224710[395] = 1.0;
   out_2697157995522224710[396] = 0;
   out_2697157995522224710[397] = 0;
   out_2697157995522224710[398] = 0;
   out_2697157995522224710[399] = 0;
   out_2697157995522224710[400] = 0;
   out_2697157995522224710[401] = 0;
   out_2697157995522224710[402] = 0;
   out_2697157995522224710[403] = 0;
   out_2697157995522224710[404] = 0;
   out_2697157995522224710[405] = 0;
   out_2697157995522224710[406] = 0;
   out_2697157995522224710[407] = 0;
   out_2697157995522224710[408] = 0;
   out_2697157995522224710[409] = 0;
   out_2697157995522224710[410] = 0;
   out_2697157995522224710[411] = 0;
   out_2697157995522224710[412] = 0;
   out_2697157995522224710[413] = 0;
   out_2697157995522224710[414] = 0;
   out_2697157995522224710[415] = 0;
   out_2697157995522224710[416] = 0;
   out_2697157995522224710[417] = 1.0;
   out_2697157995522224710[418] = 0;
   out_2697157995522224710[419] = 0;
   out_2697157995522224710[420] = 0;
   out_2697157995522224710[421] = 0;
   out_2697157995522224710[422] = 0;
   out_2697157995522224710[423] = 0;
   out_2697157995522224710[424] = 0;
   out_2697157995522224710[425] = 0;
   out_2697157995522224710[426] = 0;
   out_2697157995522224710[427] = 0;
   out_2697157995522224710[428] = 0;
   out_2697157995522224710[429] = 0;
   out_2697157995522224710[430] = 0;
   out_2697157995522224710[431] = 0;
   out_2697157995522224710[432] = 0;
   out_2697157995522224710[433] = 0;
   out_2697157995522224710[434] = 0;
   out_2697157995522224710[435] = 0;
   out_2697157995522224710[436] = 0;
   out_2697157995522224710[437] = 0;
   out_2697157995522224710[438] = 0;
   out_2697157995522224710[439] = 1.0;
   out_2697157995522224710[440] = 0;
   out_2697157995522224710[441] = 0;
   out_2697157995522224710[442] = 0;
   out_2697157995522224710[443] = 0;
   out_2697157995522224710[444] = 0;
   out_2697157995522224710[445] = 0;
   out_2697157995522224710[446] = 0;
   out_2697157995522224710[447] = 0;
   out_2697157995522224710[448] = 0;
   out_2697157995522224710[449] = 0;
   out_2697157995522224710[450] = 0;
   out_2697157995522224710[451] = 0;
   out_2697157995522224710[452] = 0;
   out_2697157995522224710[453] = 0;
   out_2697157995522224710[454] = 0;
   out_2697157995522224710[455] = 0;
   out_2697157995522224710[456] = 0;
   out_2697157995522224710[457] = 0;
   out_2697157995522224710[458] = 0;
   out_2697157995522224710[459] = 0;
   out_2697157995522224710[460] = 0;
   out_2697157995522224710[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_258969813900144001) {
   out_258969813900144001[0] = dt*state[7] + state[0];
   out_258969813900144001[1] = dt*state[8] + state[1];
   out_258969813900144001[2] = dt*state[9] + state[2];
   out_258969813900144001[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_258969813900144001[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_258969813900144001[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_258969813900144001[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_258969813900144001[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_258969813900144001[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_258969813900144001[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_258969813900144001[10] = state[10];
   out_258969813900144001[11] = state[11];
   out_258969813900144001[12] = state[12];
   out_258969813900144001[13] = state[13];
   out_258969813900144001[14] = state[14];
   out_258969813900144001[15] = state[15];
   out_258969813900144001[16] = state[16];
   out_258969813900144001[17] = state[17];
   out_258969813900144001[18] = state[18];
   out_258969813900144001[19] = state[19];
   out_258969813900144001[20] = state[20];
   out_258969813900144001[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3982048512447115253) {
   out_3982048512447115253[0] = 1;
   out_3982048512447115253[1] = 0;
   out_3982048512447115253[2] = 0;
   out_3982048512447115253[3] = 0;
   out_3982048512447115253[4] = 0;
   out_3982048512447115253[5] = 0;
   out_3982048512447115253[6] = dt;
   out_3982048512447115253[7] = 0;
   out_3982048512447115253[8] = 0;
   out_3982048512447115253[9] = 0;
   out_3982048512447115253[10] = 0;
   out_3982048512447115253[11] = 0;
   out_3982048512447115253[12] = 0;
   out_3982048512447115253[13] = 0;
   out_3982048512447115253[14] = 0;
   out_3982048512447115253[15] = 0;
   out_3982048512447115253[16] = 0;
   out_3982048512447115253[17] = 0;
   out_3982048512447115253[18] = 0;
   out_3982048512447115253[19] = 0;
   out_3982048512447115253[20] = 0;
   out_3982048512447115253[21] = 0;
   out_3982048512447115253[22] = 1;
   out_3982048512447115253[23] = 0;
   out_3982048512447115253[24] = 0;
   out_3982048512447115253[25] = 0;
   out_3982048512447115253[26] = 0;
   out_3982048512447115253[27] = 0;
   out_3982048512447115253[28] = dt;
   out_3982048512447115253[29] = 0;
   out_3982048512447115253[30] = 0;
   out_3982048512447115253[31] = 0;
   out_3982048512447115253[32] = 0;
   out_3982048512447115253[33] = 0;
   out_3982048512447115253[34] = 0;
   out_3982048512447115253[35] = 0;
   out_3982048512447115253[36] = 0;
   out_3982048512447115253[37] = 0;
   out_3982048512447115253[38] = 0;
   out_3982048512447115253[39] = 0;
   out_3982048512447115253[40] = 0;
   out_3982048512447115253[41] = 0;
   out_3982048512447115253[42] = 0;
   out_3982048512447115253[43] = 0;
   out_3982048512447115253[44] = 1;
   out_3982048512447115253[45] = 0;
   out_3982048512447115253[46] = 0;
   out_3982048512447115253[47] = 0;
   out_3982048512447115253[48] = 0;
   out_3982048512447115253[49] = 0;
   out_3982048512447115253[50] = dt;
   out_3982048512447115253[51] = 0;
   out_3982048512447115253[52] = 0;
   out_3982048512447115253[53] = 0;
   out_3982048512447115253[54] = 0;
   out_3982048512447115253[55] = 0;
   out_3982048512447115253[56] = 0;
   out_3982048512447115253[57] = 0;
   out_3982048512447115253[58] = 0;
   out_3982048512447115253[59] = 0;
   out_3982048512447115253[60] = 0;
   out_3982048512447115253[61] = 0;
   out_3982048512447115253[62] = 0;
   out_3982048512447115253[63] = 0;
   out_3982048512447115253[64] = 0;
   out_3982048512447115253[65] = 0;
   out_3982048512447115253[66] = 1;
   out_3982048512447115253[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3982048512447115253[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3982048512447115253[69] = 0;
   out_3982048512447115253[70] = 0;
   out_3982048512447115253[71] = 0;
   out_3982048512447115253[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3982048512447115253[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3982048512447115253[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3982048512447115253[75] = 0;
   out_3982048512447115253[76] = 0;
   out_3982048512447115253[77] = 0;
   out_3982048512447115253[78] = 0;
   out_3982048512447115253[79] = 0;
   out_3982048512447115253[80] = 0;
   out_3982048512447115253[81] = 0;
   out_3982048512447115253[82] = 0;
   out_3982048512447115253[83] = 0;
   out_3982048512447115253[84] = 0;
   out_3982048512447115253[85] = 0;
   out_3982048512447115253[86] = 0;
   out_3982048512447115253[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3982048512447115253[88] = 1;
   out_3982048512447115253[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3982048512447115253[90] = 0;
   out_3982048512447115253[91] = 0;
   out_3982048512447115253[92] = 0;
   out_3982048512447115253[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3982048512447115253[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3982048512447115253[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3982048512447115253[96] = 0;
   out_3982048512447115253[97] = 0;
   out_3982048512447115253[98] = 0;
   out_3982048512447115253[99] = 0;
   out_3982048512447115253[100] = 0;
   out_3982048512447115253[101] = 0;
   out_3982048512447115253[102] = 0;
   out_3982048512447115253[103] = 0;
   out_3982048512447115253[104] = 0;
   out_3982048512447115253[105] = 0;
   out_3982048512447115253[106] = 0;
   out_3982048512447115253[107] = 0;
   out_3982048512447115253[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3982048512447115253[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3982048512447115253[110] = 1;
   out_3982048512447115253[111] = 0;
   out_3982048512447115253[112] = 0;
   out_3982048512447115253[113] = 0;
   out_3982048512447115253[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3982048512447115253[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3982048512447115253[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3982048512447115253[117] = 0;
   out_3982048512447115253[118] = 0;
   out_3982048512447115253[119] = 0;
   out_3982048512447115253[120] = 0;
   out_3982048512447115253[121] = 0;
   out_3982048512447115253[122] = 0;
   out_3982048512447115253[123] = 0;
   out_3982048512447115253[124] = 0;
   out_3982048512447115253[125] = 0;
   out_3982048512447115253[126] = 0;
   out_3982048512447115253[127] = 0;
   out_3982048512447115253[128] = 0;
   out_3982048512447115253[129] = 0;
   out_3982048512447115253[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3982048512447115253[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3982048512447115253[132] = 1;
   out_3982048512447115253[133] = 0;
   out_3982048512447115253[134] = 0;
   out_3982048512447115253[135] = 0;
   out_3982048512447115253[136] = 0;
   out_3982048512447115253[137] = 0;
   out_3982048512447115253[138] = 0;
   out_3982048512447115253[139] = 0;
   out_3982048512447115253[140] = 0;
   out_3982048512447115253[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3982048512447115253[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3982048512447115253[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3982048512447115253[144] = 0;
   out_3982048512447115253[145] = 0;
   out_3982048512447115253[146] = 0;
   out_3982048512447115253[147] = 0;
   out_3982048512447115253[148] = 0;
   out_3982048512447115253[149] = 0;
   out_3982048512447115253[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3982048512447115253[151] = 0;
   out_3982048512447115253[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3982048512447115253[153] = 0;
   out_3982048512447115253[154] = 1;
   out_3982048512447115253[155] = 0;
   out_3982048512447115253[156] = 0;
   out_3982048512447115253[157] = 0;
   out_3982048512447115253[158] = 0;
   out_3982048512447115253[159] = 0;
   out_3982048512447115253[160] = 0;
   out_3982048512447115253[161] = 0;
   out_3982048512447115253[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3982048512447115253[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3982048512447115253[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3982048512447115253[165] = 0;
   out_3982048512447115253[166] = 0;
   out_3982048512447115253[167] = 0;
   out_3982048512447115253[168] = 0;
   out_3982048512447115253[169] = 0;
   out_3982048512447115253[170] = 0;
   out_3982048512447115253[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3982048512447115253[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3982048512447115253[173] = 0;
   out_3982048512447115253[174] = 0;
   out_3982048512447115253[175] = 0;
   out_3982048512447115253[176] = 1;
   out_3982048512447115253[177] = 0;
   out_3982048512447115253[178] = 0;
   out_3982048512447115253[179] = 0;
   out_3982048512447115253[180] = 0;
   out_3982048512447115253[181] = 0;
   out_3982048512447115253[182] = 0;
   out_3982048512447115253[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3982048512447115253[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3982048512447115253[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3982048512447115253[186] = 0;
   out_3982048512447115253[187] = 0;
   out_3982048512447115253[188] = 0;
   out_3982048512447115253[189] = 0;
   out_3982048512447115253[190] = 0;
   out_3982048512447115253[191] = 0;
   out_3982048512447115253[192] = 0;
   out_3982048512447115253[193] = 0;
   out_3982048512447115253[194] = 0;
   out_3982048512447115253[195] = 0;
   out_3982048512447115253[196] = 0;
   out_3982048512447115253[197] = 0;
   out_3982048512447115253[198] = 1;
   out_3982048512447115253[199] = 0;
   out_3982048512447115253[200] = 0;
   out_3982048512447115253[201] = 0;
   out_3982048512447115253[202] = 0;
   out_3982048512447115253[203] = 0;
   out_3982048512447115253[204] = 0;
   out_3982048512447115253[205] = 0;
   out_3982048512447115253[206] = 0;
   out_3982048512447115253[207] = 0;
   out_3982048512447115253[208] = 0;
   out_3982048512447115253[209] = 0;
   out_3982048512447115253[210] = 0;
   out_3982048512447115253[211] = 0;
   out_3982048512447115253[212] = 0;
   out_3982048512447115253[213] = 0;
   out_3982048512447115253[214] = 0;
   out_3982048512447115253[215] = 0;
   out_3982048512447115253[216] = 0;
   out_3982048512447115253[217] = 0;
   out_3982048512447115253[218] = 0;
   out_3982048512447115253[219] = 0;
   out_3982048512447115253[220] = 1;
   out_3982048512447115253[221] = 0;
   out_3982048512447115253[222] = 0;
   out_3982048512447115253[223] = 0;
   out_3982048512447115253[224] = 0;
   out_3982048512447115253[225] = 0;
   out_3982048512447115253[226] = 0;
   out_3982048512447115253[227] = 0;
   out_3982048512447115253[228] = 0;
   out_3982048512447115253[229] = 0;
   out_3982048512447115253[230] = 0;
   out_3982048512447115253[231] = 0;
   out_3982048512447115253[232] = 0;
   out_3982048512447115253[233] = 0;
   out_3982048512447115253[234] = 0;
   out_3982048512447115253[235] = 0;
   out_3982048512447115253[236] = 0;
   out_3982048512447115253[237] = 0;
   out_3982048512447115253[238] = 0;
   out_3982048512447115253[239] = 0;
   out_3982048512447115253[240] = 0;
   out_3982048512447115253[241] = 0;
   out_3982048512447115253[242] = 1;
   out_3982048512447115253[243] = 0;
   out_3982048512447115253[244] = 0;
   out_3982048512447115253[245] = 0;
   out_3982048512447115253[246] = 0;
   out_3982048512447115253[247] = 0;
   out_3982048512447115253[248] = 0;
   out_3982048512447115253[249] = 0;
   out_3982048512447115253[250] = 0;
   out_3982048512447115253[251] = 0;
   out_3982048512447115253[252] = 0;
   out_3982048512447115253[253] = 0;
   out_3982048512447115253[254] = 0;
   out_3982048512447115253[255] = 0;
   out_3982048512447115253[256] = 0;
   out_3982048512447115253[257] = 0;
   out_3982048512447115253[258] = 0;
   out_3982048512447115253[259] = 0;
   out_3982048512447115253[260] = 0;
   out_3982048512447115253[261] = 0;
   out_3982048512447115253[262] = 0;
   out_3982048512447115253[263] = 0;
   out_3982048512447115253[264] = 1;
   out_3982048512447115253[265] = 0;
   out_3982048512447115253[266] = 0;
   out_3982048512447115253[267] = 0;
   out_3982048512447115253[268] = 0;
   out_3982048512447115253[269] = 0;
   out_3982048512447115253[270] = 0;
   out_3982048512447115253[271] = 0;
   out_3982048512447115253[272] = 0;
   out_3982048512447115253[273] = 0;
   out_3982048512447115253[274] = 0;
   out_3982048512447115253[275] = 0;
   out_3982048512447115253[276] = 0;
   out_3982048512447115253[277] = 0;
   out_3982048512447115253[278] = 0;
   out_3982048512447115253[279] = 0;
   out_3982048512447115253[280] = 0;
   out_3982048512447115253[281] = 0;
   out_3982048512447115253[282] = 0;
   out_3982048512447115253[283] = 0;
   out_3982048512447115253[284] = 0;
   out_3982048512447115253[285] = 0;
   out_3982048512447115253[286] = 1;
   out_3982048512447115253[287] = 0;
   out_3982048512447115253[288] = 0;
   out_3982048512447115253[289] = 0;
   out_3982048512447115253[290] = 0;
   out_3982048512447115253[291] = 0;
   out_3982048512447115253[292] = 0;
   out_3982048512447115253[293] = 0;
   out_3982048512447115253[294] = 0;
   out_3982048512447115253[295] = 0;
   out_3982048512447115253[296] = 0;
   out_3982048512447115253[297] = 0;
   out_3982048512447115253[298] = 0;
   out_3982048512447115253[299] = 0;
   out_3982048512447115253[300] = 0;
   out_3982048512447115253[301] = 0;
   out_3982048512447115253[302] = 0;
   out_3982048512447115253[303] = 0;
   out_3982048512447115253[304] = 0;
   out_3982048512447115253[305] = 0;
   out_3982048512447115253[306] = 0;
   out_3982048512447115253[307] = 0;
   out_3982048512447115253[308] = 1;
   out_3982048512447115253[309] = 0;
   out_3982048512447115253[310] = 0;
   out_3982048512447115253[311] = 0;
   out_3982048512447115253[312] = 0;
   out_3982048512447115253[313] = 0;
   out_3982048512447115253[314] = 0;
   out_3982048512447115253[315] = 0;
   out_3982048512447115253[316] = 0;
   out_3982048512447115253[317] = 0;
   out_3982048512447115253[318] = 0;
   out_3982048512447115253[319] = 0;
   out_3982048512447115253[320] = 0;
   out_3982048512447115253[321] = 0;
   out_3982048512447115253[322] = 0;
   out_3982048512447115253[323] = 0;
   out_3982048512447115253[324] = 0;
   out_3982048512447115253[325] = 0;
   out_3982048512447115253[326] = 0;
   out_3982048512447115253[327] = 0;
   out_3982048512447115253[328] = 0;
   out_3982048512447115253[329] = 0;
   out_3982048512447115253[330] = 1;
   out_3982048512447115253[331] = 0;
   out_3982048512447115253[332] = 0;
   out_3982048512447115253[333] = 0;
   out_3982048512447115253[334] = 0;
   out_3982048512447115253[335] = 0;
   out_3982048512447115253[336] = 0;
   out_3982048512447115253[337] = 0;
   out_3982048512447115253[338] = 0;
   out_3982048512447115253[339] = 0;
   out_3982048512447115253[340] = 0;
   out_3982048512447115253[341] = 0;
   out_3982048512447115253[342] = 0;
   out_3982048512447115253[343] = 0;
   out_3982048512447115253[344] = 0;
   out_3982048512447115253[345] = 0;
   out_3982048512447115253[346] = 0;
   out_3982048512447115253[347] = 0;
   out_3982048512447115253[348] = 0;
   out_3982048512447115253[349] = 0;
   out_3982048512447115253[350] = 0;
   out_3982048512447115253[351] = 0;
   out_3982048512447115253[352] = 1;
   out_3982048512447115253[353] = 0;
   out_3982048512447115253[354] = 0;
   out_3982048512447115253[355] = 0;
   out_3982048512447115253[356] = 0;
   out_3982048512447115253[357] = 0;
   out_3982048512447115253[358] = 0;
   out_3982048512447115253[359] = 0;
   out_3982048512447115253[360] = 0;
   out_3982048512447115253[361] = 0;
   out_3982048512447115253[362] = 0;
   out_3982048512447115253[363] = 0;
   out_3982048512447115253[364] = 0;
   out_3982048512447115253[365] = 0;
   out_3982048512447115253[366] = 0;
   out_3982048512447115253[367] = 0;
   out_3982048512447115253[368] = 0;
   out_3982048512447115253[369] = 0;
   out_3982048512447115253[370] = 0;
   out_3982048512447115253[371] = 0;
   out_3982048512447115253[372] = 0;
   out_3982048512447115253[373] = 0;
   out_3982048512447115253[374] = 1;
   out_3982048512447115253[375] = 0;
   out_3982048512447115253[376] = 0;
   out_3982048512447115253[377] = 0;
   out_3982048512447115253[378] = 0;
   out_3982048512447115253[379] = 0;
   out_3982048512447115253[380] = 0;
   out_3982048512447115253[381] = 0;
   out_3982048512447115253[382] = 0;
   out_3982048512447115253[383] = 0;
   out_3982048512447115253[384] = 0;
   out_3982048512447115253[385] = 0;
   out_3982048512447115253[386] = 0;
   out_3982048512447115253[387] = 0;
   out_3982048512447115253[388] = 0;
   out_3982048512447115253[389] = 0;
   out_3982048512447115253[390] = 0;
   out_3982048512447115253[391] = 0;
   out_3982048512447115253[392] = 0;
   out_3982048512447115253[393] = 0;
   out_3982048512447115253[394] = 0;
   out_3982048512447115253[395] = 0;
   out_3982048512447115253[396] = 1;
   out_3982048512447115253[397] = 0;
   out_3982048512447115253[398] = 0;
   out_3982048512447115253[399] = 0;
   out_3982048512447115253[400] = 0;
   out_3982048512447115253[401] = 0;
   out_3982048512447115253[402] = 0;
   out_3982048512447115253[403] = 0;
   out_3982048512447115253[404] = 0;
   out_3982048512447115253[405] = 0;
   out_3982048512447115253[406] = 0;
   out_3982048512447115253[407] = 0;
   out_3982048512447115253[408] = 0;
   out_3982048512447115253[409] = 0;
   out_3982048512447115253[410] = 0;
   out_3982048512447115253[411] = 0;
   out_3982048512447115253[412] = 0;
   out_3982048512447115253[413] = 0;
   out_3982048512447115253[414] = 0;
   out_3982048512447115253[415] = 0;
   out_3982048512447115253[416] = 0;
   out_3982048512447115253[417] = 0;
   out_3982048512447115253[418] = 1;
   out_3982048512447115253[419] = 0;
   out_3982048512447115253[420] = 0;
   out_3982048512447115253[421] = 0;
   out_3982048512447115253[422] = 0;
   out_3982048512447115253[423] = 0;
   out_3982048512447115253[424] = 0;
   out_3982048512447115253[425] = 0;
   out_3982048512447115253[426] = 0;
   out_3982048512447115253[427] = 0;
   out_3982048512447115253[428] = 0;
   out_3982048512447115253[429] = 0;
   out_3982048512447115253[430] = 0;
   out_3982048512447115253[431] = 0;
   out_3982048512447115253[432] = 0;
   out_3982048512447115253[433] = 0;
   out_3982048512447115253[434] = 0;
   out_3982048512447115253[435] = 0;
   out_3982048512447115253[436] = 0;
   out_3982048512447115253[437] = 0;
   out_3982048512447115253[438] = 0;
   out_3982048512447115253[439] = 0;
   out_3982048512447115253[440] = 1;
}
void h_4(double *state, double *unused, double *out_3062002944620705961) {
   out_3062002944620705961[0] = state[10] + state[13];
   out_3062002944620705961[1] = state[11] + state[14];
   out_3062002944620705961[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3011098296458653357) {
   out_3011098296458653357[0] = 0;
   out_3011098296458653357[1] = 0;
   out_3011098296458653357[2] = 0;
   out_3011098296458653357[3] = 0;
   out_3011098296458653357[4] = 0;
   out_3011098296458653357[5] = 0;
   out_3011098296458653357[6] = 0;
   out_3011098296458653357[7] = 0;
   out_3011098296458653357[8] = 0;
   out_3011098296458653357[9] = 0;
   out_3011098296458653357[10] = 1;
   out_3011098296458653357[11] = 0;
   out_3011098296458653357[12] = 0;
   out_3011098296458653357[13] = 1;
   out_3011098296458653357[14] = 0;
   out_3011098296458653357[15] = 0;
   out_3011098296458653357[16] = 0;
   out_3011098296458653357[17] = 0;
   out_3011098296458653357[18] = 0;
   out_3011098296458653357[19] = 0;
   out_3011098296458653357[20] = 0;
   out_3011098296458653357[21] = 0;
   out_3011098296458653357[22] = 0;
   out_3011098296458653357[23] = 0;
   out_3011098296458653357[24] = 0;
   out_3011098296458653357[25] = 0;
   out_3011098296458653357[26] = 0;
   out_3011098296458653357[27] = 0;
   out_3011098296458653357[28] = 0;
   out_3011098296458653357[29] = 0;
   out_3011098296458653357[30] = 0;
   out_3011098296458653357[31] = 0;
   out_3011098296458653357[32] = 0;
   out_3011098296458653357[33] = 1;
   out_3011098296458653357[34] = 0;
   out_3011098296458653357[35] = 0;
   out_3011098296458653357[36] = 1;
   out_3011098296458653357[37] = 0;
   out_3011098296458653357[38] = 0;
   out_3011098296458653357[39] = 0;
   out_3011098296458653357[40] = 0;
   out_3011098296458653357[41] = 0;
   out_3011098296458653357[42] = 0;
   out_3011098296458653357[43] = 0;
   out_3011098296458653357[44] = 0;
   out_3011098296458653357[45] = 0;
   out_3011098296458653357[46] = 0;
   out_3011098296458653357[47] = 0;
   out_3011098296458653357[48] = 0;
   out_3011098296458653357[49] = 0;
   out_3011098296458653357[50] = 0;
   out_3011098296458653357[51] = 0;
   out_3011098296458653357[52] = 0;
   out_3011098296458653357[53] = 0;
   out_3011098296458653357[54] = 0;
   out_3011098296458653357[55] = 0;
   out_3011098296458653357[56] = 1;
   out_3011098296458653357[57] = 0;
   out_3011098296458653357[58] = 0;
   out_3011098296458653357[59] = 1;
   out_3011098296458653357[60] = 0;
   out_3011098296458653357[61] = 0;
   out_3011098296458653357[62] = 0;
   out_3011098296458653357[63] = 0;
   out_3011098296458653357[64] = 0;
   out_3011098296458653357[65] = 0;
}
void h_9(double *state, double *unused, double *out_5633073678966500073) {
   out_5633073678966500073[0] = state[10];
   out_5633073678966500073[1] = state[11];
   out_5633073678966500073[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3252287943088244002) {
   out_3252287943088244002[0] = 0;
   out_3252287943088244002[1] = 0;
   out_3252287943088244002[2] = 0;
   out_3252287943088244002[3] = 0;
   out_3252287943088244002[4] = 0;
   out_3252287943088244002[5] = 0;
   out_3252287943088244002[6] = 0;
   out_3252287943088244002[7] = 0;
   out_3252287943088244002[8] = 0;
   out_3252287943088244002[9] = 0;
   out_3252287943088244002[10] = 1;
   out_3252287943088244002[11] = 0;
   out_3252287943088244002[12] = 0;
   out_3252287943088244002[13] = 0;
   out_3252287943088244002[14] = 0;
   out_3252287943088244002[15] = 0;
   out_3252287943088244002[16] = 0;
   out_3252287943088244002[17] = 0;
   out_3252287943088244002[18] = 0;
   out_3252287943088244002[19] = 0;
   out_3252287943088244002[20] = 0;
   out_3252287943088244002[21] = 0;
   out_3252287943088244002[22] = 0;
   out_3252287943088244002[23] = 0;
   out_3252287943088244002[24] = 0;
   out_3252287943088244002[25] = 0;
   out_3252287943088244002[26] = 0;
   out_3252287943088244002[27] = 0;
   out_3252287943088244002[28] = 0;
   out_3252287943088244002[29] = 0;
   out_3252287943088244002[30] = 0;
   out_3252287943088244002[31] = 0;
   out_3252287943088244002[32] = 0;
   out_3252287943088244002[33] = 1;
   out_3252287943088244002[34] = 0;
   out_3252287943088244002[35] = 0;
   out_3252287943088244002[36] = 0;
   out_3252287943088244002[37] = 0;
   out_3252287943088244002[38] = 0;
   out_3252287943088244002[39] = 0;
   out_3252287943088244002[40] = 0;
   out_3252287943088244002[41] = 0;
   out_3252287943088244002[42] = 0;
   out_3252287943088244002[43] = 0;
   out_3252287943088244002[44] = 0;
   out_3252287943088244002[45] = 0;
   out_3252287943088244002[46] = 0;
   out_3252287943088244002[47] = 0;
   out_3252287943088244002[48] = 0;
   out_3252287943088244002[49] = 0;
   out_3252287943088244002[50] = 0;
   out_3252287943088244002[51] = 0;
   out_3252287943088244002[52] = 0;
   out_3252287943088244002[53] = 0;
   out_3252287943088244002[54] = 0;
   out_3252287943088244002[55] = 0;
   out_3252287943088244002[56] = 1;
   out_3252287943088244002[57] = 0;
   out_3252287943088244002[58] = 0;
   out_3252287943088244002[59] = 0;
   out_3252287943088244002[60] = 0;
   out_3252287943088244002[61] = 0;
   out_3252287943088244002[62] = 0;
   out_3252287943088244002[63] = 0;
   out_3252287943088244002[64] = 0;
   out_3252287943088244002[65] = 0;
}
void h_10(double *state, double *unused, double *out_4956664653644560279) {
   out_4956664653644560279[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4956664653644560279[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4956664653644560279[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4513091182693755627) {
   out_4513091182693755627[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4513091182693755627[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4513091182693755627[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4513091182693755627[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4513091182693755627[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4513091182693755627[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4513091182693755627[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4513091182693755627[7] = 0;
   out_4513091182693755627[8] = 0;
   out_4513091182693755627[9] = 0;
   out_4513091182693755627[10] = 0;
   out_4513091182693755627[11] = 0;
   out_4513091182693755627[12] = 0;
   out_4513091182693755627[13] = 0;
   out_4513091182693755627[14] = 0;
   out_4513091182693755627[15] = 0;
   out_4513091182693755627[16] = 1;
   out_4513091182693755627[17] = 0;
   out_4513091182693755627[18] = 0;
   out_4513091182693755627[19] = 1;
   out_4513091182693755627[20] = 0;
   out_4513091182693755627[21] = 0;
   out_4513091182693755627[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4513091182693755627[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4513091182693755627[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4513091182693755627[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4513091182693755627[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4513091182693755627[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4513091182693755627[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4513091182693755627[29] = 0;
   out_4513091182693755627[30] = 0;
   out_4513091182693755627[31] = 0;
   out_4513091182693755627[32] = 0;
   out_4513091182693755627[33] = 0;
   out_4513091182693755627[34] = 0;
   out_4513091182693755627[35] = 0;
   out_4513091182693755627[36] = 0;
   out_4513091182693755627[37] = 0;
   out_4513091182693755627[38] = 0;
   out_4513091182693755627[39] = 1;
   out_4513091182693755627[40] = 0;
   out_4513091182693755627[41] = 0;
   out_4513091182693755627[42] = 1;
   out_4513091182693755627[43] = 0;
   out_4513091182693755627[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4513091182693755627[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4513091182693755627[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4513091182693755627[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4513091182693755627[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4513091182693755627[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4513091182693755627[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4513091182693755627[51] = 0;
   out_4513091182693755627[52] = 0;
   out_4513091182693755627[53] = 0;
   out_4513091182693755627[54] = 0;
   out_4513091182693755627[55] = 0;
   out_4513091182693755627[56] = 0;
   out_4513091182693755627[57] = 0;
   out_4513091182693755627[58] = 0;
   out_4513091182693755627[59] = 0;
   out_4513091182693755627[60] = 0;
   out_4513091182693755627[61] = 0;
   out_4513091182693755627[62] = 1;
   out_4513091182693755627[63] = 0;
   out_4513091182693755627[64] = 0;
   out_4513091182693755627[65] = 1;
}
void h_12(double *state, double *unused, double *out_5780595779529914179) {
   out_5780595779529914179[0] = state[0];
   out_5780595779529914179[1] = state[1];
   out_5780595779529914179[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3632197321506247024) {
   out_3632197321506247024[0] = 1;
   out_3632197321506247024[1] = 0;
   out_3632197321506247024[2] = 0;
   out_3632197321506247024[3] = 0;
   out_3632197321506247024[4] = 0;
   out_3632197321506247024[5] = 0;
   out_3632197321506247024[6] = 0;
   out_3632197321506247024[7] = 0;
   out_3632197321506247024[8] = 0;
   out_3632197321506247024[9] = 0;
   out_3632197321506247024[10] = 0;
   out_3632197321506247024[11] = 0;
   out_3632197321506247024[12] = 0;
   out_3632197321506247024[13] = 0;
   out_3632197321506247024[14] = 0;
   out_3632197321506247024[15] = 0;
   out_3632197321506247024[16] = 0;
   out_3632197321506247024[17] = 0;
   out_3632197321506247024[18] = 0;
   out_3632197321506247024[19] = 0;
   out_3632197321506247024[20] = 0;
   out_3632197321506247024[21] = 0;
   out_3632197321506247024[22] = 0;
   out_3632197321506247024[23] = 1;
   out_3632197321506247024[24] = 0;
   out_3632197321506247024[25] = 0;
   out_3632197321506247024[26] = 0;
   out_3632197321506247024[27] = 0;
   out_3632197321506247024[28] = 0;
   out_3632197321506247024[29] = 0;
   out_3632197321506247024[30] = 0;
   out_3632197321506247024[31] = 0;
   out_3632197321506247024[32] = 0;
   out_3632197321506247024[33] = 0;
   out_3632197321506247024[34] = 0;
   out_3632197321506247024[35] = 0;
   out_3632197321506247024[36] = 0;
   out_3632197321506247024[37] = 0;
   out_3632197321506247024[38] = 0;
   out_3632197321506247024[39] = 0;
   out_3632197321506247024[40] = 0;
   out_3632197321506247024[41] = 0;
   out_3632197321506247024[42] = 0;
   out_3632197321506247024[43] = 0;
   out_3632197321506247024[44] = 0;
   out_3632197321506247024[45] = 0;
   out_3632197321506247024[46] = 1;
   out_3632197321506247024[47] = 0;
   out_3632197321506247024[48] = 0;
   out_3632197321506247024[49] = 0;
   out_3632197321506247024[50] = 0;
   out_3632197321506247024[51] = 0;
   out_3632197321506247024[52] = 0;
   out_3632197321506247024[53] = 0;
   out_3632197321506247024[54] = 0;
   out_3632197321506247024[55] = 0;
   out_3632197321506247024[56] = 0;
   out_3632197321506247024[57] = 0;
   out_3632197321506247024[58] = 0;
   out_3632197321506247024[59] = 0;
   out_3632197321506247024[60] = 0;
   out_3632197321506247024[61] = 0;
   out_3632197321506247024[62] = 0;
   out_3632197321506247024[63] = 0;
   out_3632197321506247024[64] = 0;
   out_3632197321506247024[65] = 0;
}
void h_35(double *state, double *unused, double *out_190113666816480701) {
   out_190113666816480701[0] = state[7];
   out_190113666816480701[1] = state[8];
   out_190113666816480701[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6377760353831260733) {
   out_6377760353831260733[0] = 0;
   out_6377760353831260733[1] = 0;
   out_6377760353831260733[2] = 0;
   out_6377760353831260733[3] = 0;
   out_6377760353831260733[4] = 0;
   out_6377760353831260733[5] = 0;
   out_6377760353831260733[6] = 0;
   out_6377760353831260733[7] = 1;
   out_6377760353831260733[8] = 0;
   out_6377760353831260733[9] = 0;
   out_6377760353831260733[10] = 0;
   out_6377760353831260733[11] = 0;
   out_6377760353831260733[12] = 0;
   out_6377760353831260733[13] = 0;
   out_6377760353831260733[14] = 0;
   out_6377760353831260733[15] = 0;
   out_6377760353831260733[16] = 0;
   out_6377760353831260733[17] = 0;
   out_6377760353831260733[18] = 0;
   out_6377760353831260733[19] = 0;
   out_6377760353831260733[20] = 0;
   out_6377760353831260733[21] = 0;
   out_6377760353831260733[22] = 0;
   out_6377760353831260733[23] = 0;
   out_6377760353831260733[24] = 0;
   out_6377760353831260733[25] = 0;
   out_6377760353831260733[26] = 0;
   out_6377760353831260733[27] = 0;
   out_6377760353831260733[28] = 0;
   out_6377760353831260733[29] = 0;
   out_6377760353831260733[30] = 1;
   out_6377760353831260733[31] = 0;
   out_6377760353831260733[32] = 0;
   out_6377760353831260733[33] = 0;
   out_6377760353831260733[34] = 0;
   out_6377760353831260733[35] = 0;
   out_6377760353831260733[36] = 0;
   out_6377760353831260733[37] = 0;
   out_6377760353831260733[38] = 0;
   out_6377760353831260733[39] = 0;
   out_6377760353831260733[40] = 0;
   out_6377760353831260733[41] = 0;
   out_6377760353831260733[42] = 0;
   out_6377760353831260733[43] = 0;
   out_6377760353831260733[44] = 0;
   out_6377760353831260733[45] = 0;
   out_6377760353831260733[46] = 0;
   out_6377760353831260733[47] = 0;
   out_6377760353831260733[48] = 0;
   out_6377760353831260733[49] = 0;
   out_6377760353831260733[50] = 0;
   out_6377760353831260733[51] = 0;
   out_6377760353831260733[52] = 0;
   out_6377760353831260733[53] = 1;
   out_6377760353831260733[54] = 0;
   out_6377760353831260733[55] = 0;
   out_6377760353831260733[56] = 0;
   out_6377760353831260733[57] = 0;
   out_6377760353831260733[58] = 0;
   out_6377760353831260733[59] = 0;
   out_6377760353831260733[60] = 0;
   out_6377760353831260733[61] = 0;
   out_6377760353831260733[62] = 0;
   out_6377760353831260733[63] = 0;
   out_6377760353831260733[64] = 0;
   out_6377760353831260733[65] = 0;
}
void h_32(double *state, double *unused, double *out_1962437249848893520) {
   out_1962437249848893520[0] = state[3];
   out_1962437249848893520[1] = state[4];
   out_1962437249848893520[2] = state[5];
   out_1962437249848893520[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6267679347670678325) {
   out_6267679347670678325[0] = 0;
   out_6267679347670678325[1] = 0;
   out_6267679347670678325[2] = 0;
   out_6267679347670678325[3] = 1;
   out_6267679347670678325[4] = 0;
   out_6267679347670678325[5] = 0;
   out_6267679347670678325[6] = 0;
   out_6267679347670678325[7] = 0;
   out_6267679347670678325[8] = 0;
   out_6267679347670678325[9] = 0;
   out_6267679347670678325[10] = 0;
   out_6267679347670678325[11] = 0;
   out_6267679347670678325[12] = 0;
   out_6267679347670678325[13] = 0;
   out_6267679347670678325[14] = 0;
   out_6267679347670678325[15] = 0;
   out_6267679347670678325[16] = 0;
   out_6267679347670678325[17] = 0;
   out_6267679347670678325[18] = 0;
   out_6267679347670678325[19] = 0;
   out_6267679347670678325[20] = 0;
   out_6267679347670678325[21] = 0;
   out_6267679347670678325[22] = 0;
   out_6267679347670678325[23] = 0;
   out_6267679347670678325[24] = 0;
   out_6267679347670678325[25] = 0;
   out_6267679347670678325[26] = 1;
   out_6267679347670678325[27] = 0;
   out_6267679347670678325[28] = 0;
   out_6267679347670678325[29] = 0;
   out_6267679347670678325[30] = 0;
   out_6267679347670678325[31] = 0;
   out_6267679347670678325[32] = 0;
   out_6267679347670678325[33] = 0;
   out_6267679347670678325[34] = 0;
   out_6267679347670678325[35] = 0;
   out_6267679347670678325[36] = 0;
   out_6267679347670678325[37] = 0;
   out_6267679347670678325[38] = 0;
   out_6267679347670678325[39] = 0;
   out_6267679347670678325[40] = 0;
   out_6267679347670678325[41] = 0;
   out_6267679347670678325[42] = 0;
   out_6267679347670678325[43] = 0;
   out_6267679347670678325[44] = 0;
   out_6267679347670678325[45] = 0;
   out_6267679347670678325[46] = 0;
   out_6267679347670678325[47] = 0;
   out_6267679347670678325[48] = 0;
   out_6267679347670678325[49] = 1;
   out_6267679347670678325[50] = 0;
   out_6267679347670678325[51] = 0;
   out_6267679347670678325[52] = 0;
   out_6267679347670678325[53] = 0;
   out_6267679347670678325[54] = 0;
   out_6267679347670678325[55] = 0;
   out_6267679347670678325[56] = 0;
   out_6267679347670678325[57] = 0;
   out_6267679347670678325[58] = 0;
   out_6267679347670678325[59] = 0;
   out_6267679347670678325[60] = 0;
   out_6267679347670678325[61] = 0;
   out_6267679347670678325[62] = 0;
   out_6267679347670678325[63] = 0;
   out_6267679347670678325[64] = 0;
   out_6267679347670678325[65] = 0;
   out_6267679347670678325[66] = 0;
   out_6267679347670678325[67] = 0;
   out_6267679347670678325[68] = 0;
   out_6267679347670678325[69] = 0;
   out_6267679347670678325[70] = 0;
   out_6267679347670678325[71] = 0;
   out_6267679347670678325[72] = 1;
   out_6267679347670678325[73] = 0;
   out_6267679347670678325[74] = 0;
   out_6267679347670678325[75] = 0;
   out_6267679347670678325[76] = 0;
   out_6267679347670678325[77] = 0;
   out_6267679347670678325[78] = 0;
   out_6267679347670678325[79] = 0;
   out_6267679347670678325[80] = 0;
   out_6267679347670678325[81] = 0;
   out_6267679347670678325[82] = 0;
   out_6267679347670678325[83] = 0;
   out_6267679347670678325[84] = 0;
   out_6267679347670678325[85] = 0;
   out_6267679347670678325[86] = 0;
   out_6267679347670678325[87] = 0;
}
void h_13(double *state, double *unused, double *out_1422098576590259012) {
   out_1422098576590259012[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1422098576590259012[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1422098576590259012[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_979728642438066826) {
   out_979728642438066826[0] = 0;
   out_979728642438066826[1] = 0;
   out_979728642438066826[2] = 0;
   out_979728642438066826[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_979728642438066826[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_979728642438066826[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_979728642438066826[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_979728642438066826[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_979728642438066826[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_979728642438066826[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_979728642438066826[10] = 0;
   out_979728642438066826[11] = 0;
   out_979728642438066826[12] = 0;
   out_979728642438066826[13] = 0;
   out_979728642438066826[14] = 0;
   out_979728642438066826[15] = 0;
   out_979728642438066826[16] = 0;
   out_979728642438066826[17] = 0;
   out_979728642438066826[18] = 0;
   out_979728642438066826[19] = 0;
   out_979728642438066826[20] = 0;
   out_979728642438066826[21] = 0;
   out_979728642438066826[22] = 0;
   out_979728642438066826[23] = 0;
   out_979728642438066826[24] = 0;
   out_979728642438066826[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_979728642438066826[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_979728642438066826[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_979728642438066826[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_979728642438066826[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_979728642438066826[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_979728642438066826[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_979728642438066826[32] = 0;
   out_979728642438066826[33] = 0;
   out_979728642438066826[34] = 0;
   out_979728642438066826[35] = 0;
   out_979728642438066826[36] = 0;
   out_979728642438066826[37] = 0;
   out_979728642438066826[38] = 0;
   out_979728642438066826[39] = 0;
   out_979728642438066826[40] = 0;
   out_979728642438066826[41] = 0;
   out_979728642438066826[42] = 0;
   out_979728642438066826[43] = 0;
   out_979728642438066826[44] = 0;
   out_979728642438066826[45] = 0;
   out_979728642438066826[46] = 0;
   out_979728642438066826[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_979728642438066826[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_979728642438066826[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_979728642438066826[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_979728642438066826[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_979728642438066826[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_979728642438066826[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_979728642438066826[54] = 0;
   out_979728642438066826[55] = 0;
   out_979728642438066826[56] = 0;
   out_979728642438066826[57] = 0;
   out_979728642438066826[58] = 0;
   out_979728642438066826[59] = 0;
   out_979728642438066826[60] = 0;
   out_979728642438066826[61] = 0;
   out_979728642438066826[62] = 0;
   out_979728642438066826[63] = 0;
   out_979728642438066826[64] = 0;
   out_979728642438066826[65] = 0;
}
void h_14(double *state, double *unused, double *out_5633073678966500073) {
   out_5633073678966500073[0] = state[10];
   out_5633073678966500073[1] = state[11];
   out_5633073678966500073[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3252287943088244002) {
   out_3252287943088244002[0] = 0;
   out_3252287943088244002[1] = 0;
   out_3252287943088244002[2] = 0;
   out_3252287943088244002[3] = 0;
   out_3252287943088244002[4] = 0;
   out_3252287943088244002[5] = 0;
   out_3252287943088244002[6] = 0;
   out_3252287943088244002[7] = 0;
   out_3252287943088244002[8] = 0;
   out_3252287943088244002[9] = 0;
   out_3252287943088244002[10] = 1;
   out_3252287943088244002[11] = 0;
   out_3252287943088244002[12] = 0;
   out_3252287943088244002[13] = 0;
   out_3252287943088244002[14] = 0;
   out_3252287943088244002[15] = 0;
   out_3252287943088244002[16] = 0;
   out_3252287943088244002[17] = 0;
   out_3252287943088244002[18] = 0;
   out_3252287943088244002[19] = 0;
   out_3252287943088244002[20] = 0;
   out_3252287943088244002[21] = 0;
   out_3252287943088244002[22] = 0;
   out_3252287943088244002[23] = 0;
   out_3252287943088244002[24] = 0;
   out_3252287943088244002[25] = 0;
   out_3252287943088244002[26] = 0;
   out_3252287943088244002[27] = 0;
   out_3252287943088244002[28] = 0;
   out_3252287943088244002[29] = 0;
   out_3252287943088244002[30] = 0;
   out_3252287943088244002[31] = 0;
   out_3252287943088244002[32] = 0;
   out_3252287943088244002[33] = 1;
   out_3252287943088244002[34] = 0;
   out_3252287943088244002[35] = 0;
   out_3252287943088244002[36] = 0;
   out_3252287943088244002[37] = 0;
   out_3252287943088244002[38] = 0;
   out_3252287943088244002[39] = 0;
   out_3252287943088244002[40] = 0;
   out_3252287943088244002[41] = 0;
   out_3252287943088244002[42] = 0;
   out_3252287943088244002[43] = 0;
   out_3252287943088244002[44] = 0;
   out_3252287943088244002[45] = 0;
   out_3252287943088244002[46] = 0;
   out_3252287943088244002[47] = 0;
   out_3252287943088244002[48] = 0;
   out_3252287943088244002[49] = 0;
   out_3252287943088244002[50] = 0;
   out_3252287943088244002[51] = 0;
   out_3252287943088244002[52] = 0;
   out_3252287943088244002[53] = 0;
   out_3252287943088244002[54] = 0;
   out_3252287943088244002[55] = 0;
   out_3252287943088244002[56] = 1;
   out_3252287943088244002[57] = 0;
   out_3252287943088244002[58] = 0;
   out_3252287943088244002[59] = 0;
   out_3252287943088244002[60] = 0;
   out_3252287943088244002[61] = 0;
   out_3252287943088244002[62] = 0;
   out_3252287943088244002[63] = 0;
   out_3252287943088244002[64] = 0;
   out_3252287943088244002[65] = 0;
}
void h_33(double *state, double *unused, double *out_4297372334290366217) {
   out_4297372334290366217[0] = state[16];
   out_4297372334290366217[1] = state[17];
   out_4297372334290366217[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8918426715239433279) {
   out_8918426715239433279[0] = 0;
   out_8918426715239433279[1] = 0;
   out_8918426715239433279[2] = 0;
   out_8918426715239433279[3] = 0;
   out_8918426715239433279[4] = 0;
   out_8918426715239433279[5] = 0;
   out_8918426715239433279[6] = 0;
   out_8918426715239433279[7] = 0;
   out_8918426715239433279[8] = 0;
   out_8918426715239433279[9] = 0;
   out_8918426715239433279[10] = 0;
   out_8918426715239433279[11] = 0;
   out_8918426715239433279[12] = 0;
   out_8918426715239433279[13] = 0;
   out_8918426715239433279[14] = 0;
   out_8918426715239433279[15] = 0;
   out_8918426715239433279[16] = 1;
   out_8918426715239433279[17] = 0;
   out_8918426715239433279[18] = 0;
   out_8918426715239433279[19] = 0;
   out_8918426715239433279[20] = 0;
   out_8918426715239433279[21] = 0;
   out_8918426715239433279[22] = 0;
   out_8918426715239433279[23] = 0;
   out_8918426715239433279[24] = 0;
   out_8918426715239433279[25] = 0;
   out_8918426715239433279[26] = 0;
   out_8918426715239433279[27] = 0;
   out_8918426715239433279[28] = 0;
   out_8918426715239433279[29] = 0;
   out_8918426715239433279[30] = 0;
   out_8918426715239433279[31] = 0;
   out_8918426715239433279[32] = 0;
   out_8918426715239433279[33] = 0;
   out_8918426715239433279[34] = 0;
   out_8918426715239433279[35] = 0;
   out_8918426715239433279[36] = 0;
   out_8918426715239433279[37] = 0;
   out_8918426715239433279[38] = 0;
   out_8918426715239433279[39] = 1;
   out_8918426715239433279[40] = 0;
   out_8918426715239433279[41] = 0;
   out_8918426715239433279[42] = 0;
   out_8918426715239433279[43] = 0;
   out_8918426715239433279[44] = 0;
   out_8918426715239433279[45] = 0;
   out_8918426715239433279[46] = 0;
   out_8918426715239433279[47] = 0;
   out_8918426715239433279[48] = 0;
   out_8918426715239433279[49] = 0;
   out_8918426715239433279[50] = 0;
   out_8918426715239433279[51] = 0;
   out_8918426715239433279[52] = 0;
   out_8918426715239433279[53] = 0;
   out_8918426715239433279[54] = 0;
   out_8918426715239433279[55] = 0;
   out_8918426715239433279[56] = 0;
   out_8918426715239433279[57] = 0;
   out_8918426715239433279[58] = 0;
   out_8918426715239433279[59] = 0;
   out_8918426715239433279[60] = 0;
   out_8918426715239433279[61] = 0;
   out_8918426715239433279[62] = 1;
   out_8918426715239433279[63] = 0;
   out_8918426715239433279[64] = 0;
   out_8918426715239433279[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4500389823279432985) {
  H(in_vec, out_4500389823279432985);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1913535744177293566) {
  err_fun(nom_x, delta_x, out_1913535744177293566);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2851117358798162907) {
  inv_err_fun(nom_x, true_x, out_2851117358798162907);
}
void live_H_mod_fun(double *state, double *out_2697157995522224710) {
  H_mod_fun(state, out_2697157995522224710);
}
void live_f_fun(double *state, double dt, double *out_258969813900144001) {
  f_fun(state,  dt, out_258969813900144001);
}
void live_F_fun(double *state, double dt, double *out_3982048512447115253) {
  F_fun(state,  dt, out_3982048512447115253);
}
void live_h_4(double *state, double *unused, double *out_3062002944620705961) {
  h_4(state, unused, out_3062002944620705961);
}
void live_H_4(double *state, double *unused, double *out_3011098296458653357) {
  H_4(state, unused, out_3011098296458653357);
}
void live_h_9(double *state, double *unused, double *out_5633073678966500073) {
  h_9(state, unused, out_5633073678966500073);
}
void live_H_9(double *state, double *unused, double *out_3252287943088244002) {
  H_9(state, unused, out_3252287943088244002);
}
void live_h_10(double *state, double *unused, double *out_4956664653644560279) {
  h_10(state, unused, out_4956664653644560279);
}
void live_H_10(double *state, double *unused, double *out_4513091182693755627) {
  H_10(state, unused, out_4513091182693755627);
}
void live_h_12(double *state, double *unused, double *out_5780595779529914179) {
  h_12(state, unused, out_5780595779529914179);
}
void live_H_12(double *state, double *unused, double *out_3632197321506247024) {
  H_12(state, unused, out_3632197321506247024);
}
void live_h_35(double *state, double *unused, double *out_190113666816480701) {
  h_35(state, unused, out_190113666816480701);
}
void live_H_35(double *state, double *unused, double *out_6377760353831260733) {
  H_35(state, unused, out_6377760353831260733);
}
void live_h_32(double *state, double *unused, double *out_1962437249848893520) {
  h_32(state, unused, out_1962437249848893520);
}
void live_H_32(double *state, double *unused, double *out_6267679347670678325) {
  H_32(state, unused, out_6267679347670678325);
}
void live_h_13(double *state, double *unused, double *out_1422098576590259012) {
  h_13(state, unused, out_1422098576590259012);
}
void live_H_13(double *state, double *unused, double *out_979728642438066826) {
  H_13(state, unused, out_979728642438066826);
}
void live_h_14(double *state, double *unused, double *out_5633073678966500073) {
  h_14(state, unused, out_5633073678966500073);
}
void live_H_14(double *state, double *unused, double *out_3252287943088244002) {
  H_14(state, unused, out_3252287943088244002);
}
void live_h_33(double *state, double *unused, double *out_4297372334290366217) {
  h_33(state, unused, out_4297372334290366217);
}
void live_H_33(double *state, double *unused, double *out_8918426715239433279) {
  H_33(state, unused, out_8918426715239433279);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
