#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1004438546149370339) {
   out_1004438546149370339[0] = 0;
   out_1004438546149370339[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1004438546149370339[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1004438546149370339[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1004438546149370339[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1004438546149370339[5] = -sin(in_vec[1]);
   out_1004438546149370339[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1004438546149370339[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1004438546149370339[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1004438546149370339[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1004438546149370339[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1004438546149370339[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1004438546149370339[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1004438546149370339[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1004438546149370339[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1004438546149370339[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1004438546149370339[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1004438546149370339[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8969152691296427567) {
   out_8969152691296427567[0] = delta_x[0] + nom_x[0];
   out_8969152691296427567[1] = delta_x[1] + nom_x[1];
   out_8969152691296427567[2] = delta_x[2] + nom_x[2];
   out_8969152691296427567[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8969152691296427567[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8969152691296427567[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8969152691296427567[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8969152691296427567[7] = delta_x[6] + nom_x[7];
   out_8969152691296427567[8] = delta_x[7] + nom_x[8];
   out_8969152691296427567[9] = delta_x[8] + nom_x[9];
   out_8969152691296427567[10] = delta_x[9] + nom_x[10];
   out_8969152691296427567[11] = delta_x[10] + nom_x[11];
   out_8969152691296427567[12] = delta_x[11] + nom_x[12];
   out_8969152691296427567[13] = delta_x[12] + nom_x[13];
   out_8969152691296427567[14] = delta_x[13] + nom_x[14];
   out_8969152691296427567[15] = delta_x[14] + nom_x[15];
   out_8969152691296427567[16] = delta_x[15] + nom_x[16];
   out_8969152691296427567[17] = delta_x[16] + nom_x[17];
   out_8969152691296427567[18] = delta_x[17] + nom_x[18];
   out_8969152691296427567[19] = delta_x[18] + nom_x[19];
   out_8969152691296427567[20] = delta_x[19] + nom_x[20];
   out_8969152691296427567[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3659399576229617090) {
   out_3659399576229617090[0] = -nom_x[0] + true_x[0];
   out_3659399576229617090[1] = -nom_x[1] + true_x[1];
   out_3659399576229617090[2] = -nom_x[2] + true_x[2];
   out_3659399576229617090[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3659399576229617090[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3659399576229617090[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3659399576229617090[6] = -nom_x[7] + true_x[7];
   out_3659399576229617090[7] = -nom_x[8] + true_x[8];
   out_3659399576229617090[8] = -nom_x[9] + true_x[9];
   out_3659399576229617090[9] = -nom_x[10] + true_x[10];
   out_3659399576229617090[10] = -nom_x[11] + true_x[11];
   out_3659399576229617090[11] = -nom_x[12] + true_x[12];
   out_3659399576229617090[12] = -nom_x[13] + true_x[13];
   out_3659399576229617090[13] = -nom_x[14] + true_x[14];
   out_3659399576229617090[14] = -nom_x[15] + true_x[15];
   out_3659399576229617090[15] = -nom_x[16] + true_x[16];
   out_3659399576229617090[16] = -nom_x[17] + true_x[17];
   out_3659399576229617090[17] = -nom_x[18] + true_x[18];
   out_3659399576229617090[18] = -nom_x[19] + true_x[19];
   out_3659399576229617090[19] = -nom_x[20] + true_x[20];
   out_3659399576229617090[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2949472263592139464) {
   out_2949472263592139464[0] = 1.0;
   out_2949472263592139464[1] = 0;
   out_2949472263592139464[2] = 0;
   out_2949472263592139464[3] = 0;
   out_2949472263592139464[4] = 0;
   out_2949472263592139464[5] = 0;
   out_2949472263592139464[6] = 0;
   out_2949472263592139464[7] = 0;
   out_2949472263592139464[8] = 0;
   out_2949472263592139464[9] = 0;
   out_2949472263592139464[10] = 0;
   out_2949472263592139464[11] = 0;
   out_2949472263592139464[12] = 0;
   out_2949472263592139464[13] = 0;
   out_2949472263592139464[14] = 0;
   out_2949472263592139464[15] = 0;
   out_2949472263592139464[16] = 0;
   out_2949472263592139464[17] = 0;
   out_2949472263592139464[18] = 0;
   out_2949472263592139464[19] = 0;
   out_2949472263592139464[20] = 0;
   out_2949472263592139464[21] = 0;
   out_2949472263592139464[22] = 1.0;
   out_2949472263592139464[23] = 0;
   out_2949472263592139464[24] = 0;
   out_2949472263592139464[25] = 0;
   out_2949472263592139464[26] = 0;
   out_2949472263592139464[27] = 0;
   out_2949472263592139464[28] = 0;
   out_2949472263592139464[29] = 0;
   out_2949472263592139464[30] = 0;
   out_2949472263592139464[31] = 0;
   out_2949472263592139464[32] = 0;
   out_2949472263592139464[33] = 0;
   out_2949472263592139464[34] = 0;
   out_2949472263592139464[35] = 0;
   out_2949472263592139464[36] = 0;
   out_2949472263592139464[37] = 0;
   out_2949472263592139464[38] = 0;
   out_2949472263592139464[39] = 0;
   out_2949472263592139464[40] = 0;
   out_2949472263592139464[41] = 0;
   out_2949472263592139464[42] = 0;
   out_2949472263592139464[43] = 0;
   out_2949472263592139464[44] = 1.0;
   out_2949472263592139464[45] = 0;
   out_2949472263592139464[46] = 0;
   out_2949472263592139464[47] = 0;
   out_2949472263592139464[48] = 0;
   out_2949472263592139464[49] = 0;
   out_2949472263592139464[50] = 0;
   out_2949472263592139464[51] = 0;
   out_2949472263592139464[52] = 0;
   out_2949472263592139464[53] = 0;
   out_2949472263592139464[54] = 0;
   out_2949472263592139464[55] = 0;
   out_2949472263592139464[56] = 0;
   out_2949472263592139464[57] = 0;
   out_2949472263592139464[58] = 0;
   out_2949472263592139464[59] = 0;
   out_2949472263592139464[60] = 0;
   out_2949472263592139464[61] = 0;
   out_2949472263592139464[62] = 0;
   out_2949472263592139464[63] = 0;
   out_2949472263592139464[64] = 0;
   out_2949472263592139464[65] = 0;
   out_2949472263592139464[66] = -0.5*state[4];
   out_2949472263592139464[67] = -0.5*state[5];
   out_2949472263592139464[68] = -0.5*state[6];
   out_2949472263592139464[69] = 0;
   out_2949472263592139464[70] = 0;
   out_2949472263592139464[71] = 0;
   out_2949472263592139464[72] = 0;
   out_2949472263592139464[73] = 0;
   out_2949472263592139464[74] = 0;
   out_2949472263592139464[75] = 0;
   out_2949472263592139464[76] = 0;
   out_2949472263592139464[77] = 0;
   out_2949472263592139464[78] = 0;
   out_2949472263592139464[79] = 0;
   out_2949472263592139464[80] = 0;
   out_2949472263592139464[81] = 0;
   out_2949472263592139464[82] = 0;
   out_2949472263592139464[83] = 0;
   out_2949472263592139464[84] = 0;
   out_2949472263592139464[85] = 0;
   out_2949472263592139464[86] = 0;
   out_2949472263592139464[87] = 0.5*state[3];
   out_2949472263592139464[88] = 0.5*state[6];
   out_2949472263592139464[89] = -0.5*state[5];
   out_2949472263592139464[90] = 0;
   out_2949472263592139464[91] = 0;
   out_2949472263592139464[92] = 0;
   out_2949472263592139464[93] = 0;
   out_2949472263592139464[94] = 0;
   out_2949472263592139464[95] = 0;
   out_2949472263592139464[96] = 0;
   out_2949472263592139464[97] = 0;
   out_2949472263592139464[98] = 0;
   out_2949472263592139464[99] = 0;
   out_2949472263592139464[100] = 0;
   out_2949472263592139464[101] = 0;
   out_2949472263592139464[102] = 0;
   out_2949472263592139464[103] = 0;
   out_2949472263592139464[104] = 0;
   out_2949472263592139464[105] = 0;
   out_2949472263592139464[106] = 0;
   out_2949472263592139464[107] = 0;
   out_2949472263592139464[108] = -0.5*state[6];
   out_2949472263592139464[109] = 0.5*state[3];
   out_2949472263592139464[110] = 0.5*state[4];
   out_2949472263592139464[111] = 0;
   out_2949472263592139464[112] = 0;
   out_2949472263592139464[113] = 0;
   out_2949472263592139464[114] = 0;
   out_2949472263592139464[115] = 0;
   out_2949472263592139464[116] = 0;
   out_2949472263592139464[117] = 0;
   out_2949472263592139464[118] = 0;
   out_2949472263592139464[119] = 0;
   out_2949472263592139464[120] = 0;
   out_2949472263592139464[121] = 0;
   out_2949472263592139464[122] = 0;
   out_2949472263592139464[123] = 0;
   out_2949472263592139464[124] = 0;
   out_2949472263592139464[125] = 0;
   out_2949472263592139464[126] = 0;
   out_2949472263592139464[127] = 0;
   out_2949472263592139464[128] = 0;
   out_2949472263592139464[129] = 0.5*state[5];
   out_2949472263592139464[130] = -0.5*state[4];
   out_2949472263592139464[131] = 0.5*state[3];
   out_2949472263592139464[132] = 0;
   out_2949472263592139464[133] = 0;
   out_2949472263592139464[134] = 0;
   out_2949472263592139464[135] = 0;
   out_2949472263592139464[136] = 0;
   out_2949472263592139464[137] = 0;
   out_2949472263592139464[138] = 0;
   out_2949472263592139464[139] = 0;
   out_2949472263592139464[140] = 0;
   out_2949472263592139464[141] = 0;
   out_2949472263592139464[142] = 0;
   out_2949472263592139464[143] = 0;
   out_2949472263592139464[144] = 0;
   out_2949472263592139464[145] = 0;
   out_2949472263592139464[146] = 0;
   out_2949472263592139464[147] = 0;
   out_2949472263592139464[148] = 0;
   out_2949472263592139464[149] = 0;
   out_2949472263592139464[150] = 0;
   out_2949472263592139464[151] = 0;
   out_2949472263592139464[152] = 0;
   out_2949472263592139464[153] = 1.0;
   out_2949472263592139464[154] = 0;
   out_2949472263592139464[155] = 0;
   out_2949472263592139464[156] = 0;
   out_2949472263592139464[157] = 0;
   out_2949472263592139464[158] = 0;
   out_2949472263592139464[159] = 0;
   out_2949472263592139464[160] = 0;
   out_2949472263592139464[161] = 0;
   out_2949472263592139464[162] = 0;
   out_2949472263592139464[163] = 0;
   out_2949472263592139464[164] = 0;
   out_2949472263592139464[165] = 0;
   out_2949472263592139464[166] = 0;
   out_2949472263592139464[167] = 0;
   out_2949472263592139464[168] = 0;
   out_2949472263592139464[169] = 0;
   out_2949472263592139464[170] = 0;
   out_2949472263592139464[171] = 0;
   out_2949472263592139464[172] = 0;
   out_2949472263592139464[173] = 0;
   out_2949472263592139464[174] = 0;
   out_2949472263592139464[175] = 1.0;
   out_2949472263592139464[176] = 0;
   out_2949472263592139464[177] = 0;
   out_2949472263592139464[178] = 0;
   out_2949472263592139464[179] = 0;
   out_2949472263592139464[180] = 0;
   out_2949472263592139464[181] = 0;
   out_2949472263592139464[182] = 0;
   out_2949472263592139464[183] = 0;
   out_2949472263592139464[184] = 0;
   out_2949472263592139464[185] = 0;
   out_2949472263592139464[186] = 0;
   out_2949472263592139464[187] = 0;
   out_2949472263592139464[188] = 0;
   out_2949472263592139464[189] = 0;
   out_2949472263592139464[190] = 0;
   out_2949472263592139464[191] = 0;
   out_2949472263592139464[192] = 0;
   out_2949472263592139464[193] = 0;
   out_2949472263592139464[194] = 0;
   out_2949472263592139464[195] = 0;
   out_2949472263592139464[196] = 0;
   out_2949472263592139464[197] = 1.0;
   out_2949472263592139464[198] = 0;
   out_2949472263592139464[199] = 0;
   out_2949472263592139464[200] = 0;
   out_2949472263592139464[201] = 0;
   out_2949472263592139464[202] = 0;
   out_2949472263592139464[203] = 0;
   out_2949472263592139464[204] = 0;
   out_2949472263592139464[205] = 0;
   out_2949472263592139464[206] = 0;
   out_2949472263592139464[207] = 0;
   out_2949472263592139464[208] = 0;
   out_2949472263592139464[209] = 0;
   out_2949472263592139464[210] = 0;
   out_2949472263592139464[211] = 0;
   out_2949472263592139464[212] = 0;
   out_2949472263592139464[213] = 0;
   out_2949472263592139464[214] = 0;
   out_2949472263592139464[215] = 0;
   out_2949472263592139464[216] = 0;
   out_2949472263592139464[217] = 0;
   out_2949472263592139464[218] = 0;
   out_2949472263592139464[219] = 1.0;
   out_2949472263592139464[220] = 0;
   out_2949472263592139464[221] = 0;
   out_2949472263592139464[222] = 0;
   out_2949472263592139464[223] = 0;
   out_2949472263592139464[224] = 0;
   out_2949472263592139464[225] = 0;
   out_2949472263592139464[226] = 0;
   out_2949472263592139464[227] = 0;
   out_2949472263592139464[228] = 0;
   out_2949472263592139464[229] = 0;
   out_2949472263592139464[230] = 0;
   out_2949472263592139464[231] = 0;
   out_2949472263592139464[232] = 0;
   out_2949472263592139464[233] = 0;
   out_2949472263592139464[234] = 0;
   out_2949472263592139464[235] = 0;
   out_2949472263592139464[236] = 0;
   out_2949472263592139464[237] = 0;
   out_2949472263592139464[238] = 0;
   out_2949472263592139464[239] = 0;
   out_2949472263592139464[240] = 0;
   out_2949472263592139464[241] = 1.0;
   out_2949472263592139464[242] = 0;
   out_2949472263592139464[243] = 0;
   out_2949472263592139464[244] = 0;
   out_2949472263592139464[245] = 0;
   out_2949472263592139464[246] = 0;
   out_2949472263592139464[247] = 0;
   out_2949472263592139464[248] = 0;
   out_2949472263592139464[249] = 0;
   out_2949472263592139464[250] = 0;
   out_2949472263592139464[251] = 0;
   out_2949472263592139464[252] = 0;
   out_2949472263592139464[253] = 0;
   out_2949472263592139464[254] = 0;
   out_2949472263592139464[255] = 0;
   out_2949472263592139464[256] = 0;
   out_2949472263592139464[257] = 0;
   out_2949472263592139464[258] = 0;
   out_2949472263592139464[259] = 0;
   out_2949472263592139464[260] = 0;
   out_2949472263592139464[261] = 0;
   out_2949472263592139464[262] = 0;
   out_2949472263592139464[263] = 1.0;
   out_2949472263592139464[264] = 0;
   out_2949472263592139464[265] = 0;
   out_2949472263592139464[266] = 0;
   out_2949472263592139464[267] = 0;
   out_2949472263592139464[268] = 0;
   out_2949472263592139464[269] = 0;
   out_2949472263592139464[270] = 0;
   out_2949472263592139464[271] = 0;
   out_2949472263592139464[272] = 0;
   out_2949472263592139464[273] = 0;
   out_2949472263592139464[274] = 0;
   out_2949472263592139464[275] = 0;
   out_2949472263592139464[276] = 0;
   out_2949472263592139464[277] = 0;
   out_2949472263592139464[278] = 0;
   out_2949472263592139464[279] = 0;
   out_2949472263592139464[280] = 0;
   out_2949472263592139464[281] = 0;
   out_2949472263592139464[282] = 0;
   out_2949472263592139464[283] = 0;
   out_2949472263592139464[284] = 0;
   out_2949472263592139464[285] = 1.0;
   out_2949472263592139464[286] = 0;
   out_2949472263592139464[287] = 0;
   out_2949472263592139464[288] = 0;
   out_2949472263592139464[289] = 0;
   out_2949472263592139464[290] = 0;
   out_2949472263592139464[291] = 0;
   out_2949472263592139464[292] = 0;
   out_2949472263592139464[293] = 0;
   out_2949472263592139464[294] = 0;
   out_2949472263592139464[295] = 0;
   out_2949472263592139464[296] = 0;
   out_2949472263592139464[297] = 0;
   out_2949472263592139464[298] = 0;
   out_2949472263592139464[299] = 0;
   out_2949472263592139464[300] = 0;
   out_2949472263592139464[301] = 0;
   out_2949472263592139464[302] = 0;
   out_2949472263592139464[303] = 0;
   out_2949472263592139464[304] = 0;
   out_2949472263592139464[305] = 0;
   out_2949472263592139464[306] = 0;
   out_2949472263592139464[307] = 1.0;
   out_2949472263592139464[308] = 0;
   out_2949472263592139464[309] = 0;
   out_2949472263592139464[310] = 0;
   out_2949472263592139464[311] = 0;
   out_2949472263592139464[312] = 0;
   out_2949472263592139464[313] = 0;
   out_2949472263592139464[314] = 0;
   out_2949472263592139464[315] = 0;
   out_2949472263592139464[316] = 0;
   out_2949472263592139464[317] = 0;
   out_2949472263592139464[318] = 0;
   out_2949472263592139464[319] = 0;
   out_2949472263592139464[320] = 0;
   out_2949472263592139464[321] = 0;
   out_2949472263592139464[322] = 0;
   out_2949472263592139464[323] = 0;
   out_2949472263592139464[324] = 0;
   out_2949472263592139464[325] = 0;
   out_2949472263592139464[326] = 0;
   out_2949472263592139464[327] = 0;
   out_2949472263592139464[328] = 0;
   out_2949472263592139464[329] = 1.0;
   out_2949472263592139464[330] = 0;
   out_2949472263592139464[331] = 0;
   out_2949472263592139464[332] = 0;
   out_2949472263592139464[333] = 0;
   out_2949472263592139464[334] = 0;
   out_2949472263592139464[335] = 0;
   out_2949472263592139464[336] = 0;
   out_2949472263592139464[337] = 0;
   out_2949472263592139464[338] = 0;
   out_2949472263592139464[339] = 0;
   out_2949472263592139464[340] = 0;
   out_2949472263592139464[341] = 0;
   out_2949472263592139464[342] = 0;
   out_2949472263592139464[343] = 0;
   out_2949472263592139464[344] = 0;
   out_2949472263592139464[345] = 0;
   out_2949472263592139464[346] = 0;
   out_2949472263592139464[347] = 0;
   out_2949472263592139464[348] = 0;
   out_2949472263592139464[349] = 0;
   out_2949472263592139464[350] = 0;
   out_2949472263592139464[351] = 1.0;
   out_2949472263592139464[352] = 0;
   out_2949472263592139464[353] = 0;
   out_2949472263592139464[354] = 0;
   out_2949472263592139464[355] = 0;
   out_2949472263592139464[356] = 0;
   out_2949472263592139464[357] = 0;
   out_2949472263592139464[358] = 0;
   out_2949472263592139464[359] = 0;
   out_2949472263592139464[360] = 0;
   out_2949472263592139464[361] = 0;
   out_2949472263592139464[362] = 0;
   out_2949472263592139464[363] = 0;
   out_2949472263592139464[364] = 0;
   out_2949472263592139464[365] = 0;
   out_2949472263592139464[366] = 0;
   out_2949472263592139464[367] = 0;
   out_2949472263592139464[368] = 0;
   out_2949472263592139464[369] = 0;
   out_2949472263592139464[370] = 0;
   out_2949472263592139464[371] = 0;
   out_2949472263592139464[372] = 0;
   out_2949472263592139464[373] = 1.0;
   out_2949472263592139464[374] = 0;
   out_2949472263592139464[375] = 0;
   out_2949472263592139464[376] = 0;
   out_2949472263592139464[377] = 0;
   out_2949472263592139464[378] = 0;
   out_2949472263592139464[379] = 0;
   out_2949472263592139464[380] = 0;
   out_2949472263592139464[381] = 0;
   out_2949472263592139464[382] = 0;
   out_2949472263592139464[383] = 0;
   out_2949472263592139464[384] = 0;
   out_2949472263592139464[385] = 0;
   out_2949472263592139464[386] = 0;
   out_2949472263592139464[387] = 0;
   out_2949472263592139464[388] = 0;
   out_2949472263592139464[389] = 0;
   out_2949472263592139464[390] = 0;
   out_2949472263592139464[391] = 0;
   out_2949472263592139464[392] = 0;
   out_2949472263592139464[393] = 0;
   out_2949472263592139464[394] = 0;
   out_2949472263592139464[395] = 1.0;
   out_2949472263592139464[396] = 0;
   out_2949472263592139464[397] = 0;
   out_2949472263592139464[398] = 0;
   out_2949472263592139464[399] = 0;
   out_2949472263592139464[400] = 0;
   out_2949472263592139464[401] = 0;
   out_2949472263592139464[402] = 0;
   out_2949472263592139464[403] = 0;
   out_2949472263592139464[404] = 0;
   out_2949472263592139464[405] = 0;
   out_2949472263592139464[406] = 0;
   out_2949472263592139464[407] = 0;
   out_2949472263592139464[408] = 0;
   out_2949472263592139464[409] = 0;
   out_2949472263592139464[410] = 0;
   out_2949472263592139464[411] = 0;
   out_2949472263592139464[412] = 0;
   out_2949472263592139464[413] = 0;
   out_2949472263592139464[414] = 0;
   out_2949472263592139464[415] = 0;
   out_2949472263592139464[416] = 0;
   out_2949472263592139464[417] = 1.0;
   out_2949472263592139464[418] = 0;
   out_2949472263592139464[419] = 0;
   out_2949472263592139464[420] = 0;
   out_2949472263592139464[421] = 0;
   out_2949472263592139464[422] = 0;
   out_2949472263592139464[423] = 0;
   out_2949472263592139464[424] = 0;
   out_2949472263592139464[425] = 0;
   out_2949472263592139464[426] = 0;
   out_2949472263592139464[427] = 0;
   out_2949472263592139464[428] = 0;
   out_2949472263592139464[429] = 0;
   out_2949472263592139464[430] = 0;
   out_2949472263592139464[431] = 0;
   out_2949472263592139464[432] = 0;
   out_2949472263592139464[433] = 0;
   out_2949472263592139464[434] = 0;
   out_2949472263592139464[435] = 0;
   out_2949472263592139464[436] = 0;
   out_2949472263592139464[437] = 0;
   out_2949472263592139464[438] = 0;
   out_2949472263592139464[439] = 1.0;
   out_2949472263592139464[440] = 0;
   out_2949472263592139464[441] = 0;
   out_2949472263592139464[442] = 0;
   out_2949472263592139464[443] = 0;
   out_2949472263592139464[444] = 0;
   out_2949472263592139464[445] = 0;
   out_2949472263592139464[446] = 0;
   out_2949472263592139464[447] = 0;
   out_2949472263592139464[448] = 0;
   out_2949472263592139464[449] = 0;
   out_2949472263592139464[450] = 0;
   out_2949472263592139464[451] = 0;
   out_2949472263592139464[452] = 0;
   out_2949472263592139464[453] = 0;
   out_2949472263592139464[454] = 0;
   out_2949472263592139464[455] = 0;
   out_2949472263592139464[456] = 0;
   out_2949472263592139464[457] = 0;
   out_2949472263592139464[458] = 0;
   out_2949472263592139464[459] = 0;
   out_2949472263592139464[460] = 0;
   out_2949472263592139464[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1878871363542729359) {
   out_1878871363542729359[0] = dt*state[7] + state[0];
   out_1878871363542729359[1] = dt*state[8] + state[1];
   out_1878871363542729359[2] = dt*state[9] + state[2];
   out_1878871363542729359[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1878871363542729359[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1878871363542729359[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1878871363542729359[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1878871363542729359[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1878871363542729359[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1878871363542729359[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1878871363542729359[10] = state[10];
   out_1878871363542729359[11] = state[11];
   out_1878871363542729359[12] = state[12];
   out_1878871363542729359[13] = state[13];
   out_1878871363542729359[14] = state[14];
   out_1878871363542729359[15] = state[15];
   out_1878871363542729359[16] = state[16];
   out_1878871363542729359[17] = state[17];
   out_1878871363542729359[18] = state[18];
   out_1878871363542729359[19] = state[19];
   out_1878871363542729359[20] = state[20];
   out_1878871363542729359[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6484486210560443063) {
   out_6484486210560443063[0] = 1;
   out_6484486210560443063[1] = 0;
   out_6484486210560443063[2] = 0;
   out_6484486210560443063[3] = 0;
   out_6484486210560443063[4] = 0;
   out_6484486210560443063[5] = 0;
   out_6484486210560443063[6] = dt;
   out_6484486210560443063[7] = 0;
   out_6484486210560443063[8] = 0;
   out_6484486210560443063[9] = 0;
   out_6484486210560443063[10] = 0;
   out_6484486210560443063[11] = 0;
   out_6484486210560443063[12] = 0;
   out_6484486210560443063[13] = 0;
   out_6484486210560443063[14] = 0;
   out_6484486210560443063[15] = 0;
   out_6484486210560443063[16] = 0;
   out_6484486210560443063[17] = 0;
   out_6484486210560443063[18] = 0;
   out_6484486210560443063[19] = 0;
   out_6484486210560443063[20] = 0;
   out_6484486210560443063[21] = 0;
   out_6484486210560443063[22] = 1;
   out_6484486210560443063[23] = 0;
   out_6484486210560443063[24] = 0;
   out_6484486210560443063[25] = 0;
   out_6484486210560443063[26] = 0;
   out_6484486210560443063[27] = 0;
   out_6484486210560443063[28] = dt;
   out_6484486210560443063[29] = 0;
   out_6484486210560443063[30] = 0;
   out_6484486210560443063[31] = 0;
   out_6484486210560443063[32] = 0;
   out_6484486210560443063[33] = 0;
   out_6484486210560443063[34] = 0;
   out_6484486210560443063[35] = 0;
   out_6484486210560443063[36] = 0;
   out_6484486210560443063[37] = 0;
   out_6484486210560443063[38] = 0;
   out_6484486210560443063[39] = 0;
   out_6484486210560443063[40] = 0;
   out_6484486210560443063[41] = 0;
   out_6484486210560443063[42] = 0;
   out_6484486210560443063[43] = 0;
   out_6484486210560443063[44] = 1;
   out_6484486210560443063[45] = 0;
   out_6484486210560443063[46] = 0;
   out_6484486210560443063[47] = 0;
   out_6484486210560443063[48] = 0;
   out_6484486210560443063[49] = 0;
   out_6484486210560443063[50] = dt;
   out_6484486210560443063[51] = 0;
   out_6484486210560443063[52] = 0;
   out_6484486210560443063[53] = 0;
   out_6484486210560443063[54] = 0;
   out_6484486210560443063[55] = 0;
   out_6484486210560443063[56] = 0;
   out_6484486210560443063[57] = 0;
   out_6484486210560443063[58] = 0;
   out_6484486210560443063[59] = 0;
   out_6484486210560443063[60] = 0;
   out_6484486210560443063[61] = 0;
   out_6484486210560443063[62] = 0;
   out_6484486210560443063[63] = 0;
   out_6484486210560443063[64] = 0;
   out_6484486210560443063[65] = 0;
   out_6484486210560443063[66] = 1;
   out_6484486210560443063[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6484486210560443063[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6484486210560443063[69] = 0;
   out_6484486210560443063[70] = 0;
   out_6484486210560443063[71] = 0;
   out_6484486210560443063[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6484486210560443063[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6484486210560443063[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6484486210560443063[75] = 0;
   out_6484486210560443063[76] = 0;
   out_6484486210560443063[77] = 0;
   out_6484486210560443063[78] = 0;
   out_6484486210560443063[79] = 0;
   out_6484486210560443063[80] = 0;
   out_6484486210560443063[81] = 0;
   out_6484486210560443063[82] = 0;
   out_6484486210560443063[83] = 0;
   out_6484486210560443063[84] = 0;
   out_6484486210560443063[85] = 0;
   out_6484486210560443063[86] = 0;
   out_6484486210560443063[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6484486210560443063[88] = 1;
   out_6484486210560443063[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6484486210560443063[90] = 0;
   out_6484486210560443063[91] = 0;
   out_6484486210560443063[92] = 0;
   out_6484486210560443063[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6484486210560443063[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6484486210560443063[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6484486210560443063[96] = 0;
   out_6484486210560443063[97] = 0;
   out_6484486210560443063[98] = 0;
   out_6484486210560443063[99] = 0;
   out_6484486210560443063[100] = 0;
   out_6484486210560443063[101] = 0;
   out_6484486210560443063[102] = 0;
   out_6484486210560443063[103] = 0;
   out_6484486210560443063[104] = 0;
   out_6484486210560443063[105] = 0;
   out_6484486210560443063[106] = 0;
   out_6484486210560443063[107] = 0;
   out_6484486210560443063[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6484486210560443063[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6484486210560443063[110] = 1;
   out_6484486210560443063[111] = 0;
   out_6484486210560443063[112] = 0;
   out_6484486210560443063[113] = 0;
   out_6484486210560443063[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6484486210560443063[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6484486210560443063[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6484486210560443063[117] = 0;
   out_6484486210560443063[118] = 0;
   out_6484486210560443063[119] = 0;
   out_6484486210560443063[120] = 0;
   out_6484486210560443063[121] = 0;
   out_6484486210560443063[122] = 0;
   out_6484486210560443063[123] = 0;
   out_6484486210560443063[124] = 0;
   out_6484486210560443063[125] = 0;
   out_6484486210560443063[126] = 0;
   out_6484486210560443063[127] = 0;
   out_6484486210560443063[128] = 0;
   out_6484486210560443063[129] = 0;
   out_6484486210560443063[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6484486210560443063[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6484486210560443063[132] = 1;
   out_6484486210560443063[133] = 0;
   out_6484486210560443063[134] = 0;
   out_6484486210560443063[135] = 0;
   out_6484486210560443063[136] = 0;
   out_6484486210560443063[137] = 0;
   out_6484486210560443063[138] = 0;
   out_6484486210560443063[139] = 0;
   out_6484486210560443063[140] = 0;
   out_6484486210560443063[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6484486210560443063[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6484486210560443063[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6484486210560443063[144] = 0;
   out_6484486210560443063[145] = 0;
   out_6484486210560443063[146] = 0;
   out_6484486210560443063[147] = 0;
   out_6484486210560443063[148] = 0;
   out_6484486210560443063[149] = 0;
   out_6484486210560443063[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6484486210560443063[151] = 0;
   out_6484486210560443063[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6484486210560443063[153] = 0;
   out_6484486210560443063[154] = 1;
   out_6484486210560443063[155] = 0;
   out_6484486210560443063[156] = 0;
   out_6484486210560443063[157] = 0;
   out_6484486210560443063[158] = 0;
   out_6484486210560443063[159] = 0;
   out_6484486210560443063[160] = 0;
   out_6484486210560443063[161] = 0;
   out_6484486210560443063[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6484486210560443063[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6484486210560443063[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6484486210560443063[165] = 0;
   out_6484486210560443063[166] = 0;
   out_6484486210560443063[167] = 0;
   out_6484486210560443063[168] = 0;
   out_6484486210560443063[169] = 0;
   out_6484486210560443063[170] = 0;
   out_6484486210560443063[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6484486210560443063[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6484486210560443063[173] = 0;
   out_6484486210560443063[174] = 0;
   out_6484486210560443063[175] = 0;
   out_6484486210560443063[176] = 1;
   out_6484486210560443063[177] = 0;
   out_6484486210560443063[178] = 0;
   out_6484486210560443063[179] = 0;
   out_6484486210560443063[180] = 0;
   out_6484486210560443063[181] = 0;
   out_6484486210560443063[182] = 0;
   out_6484486210560443063[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6484486210560443063[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6484486210560443063[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6484486210560443063[186] = 0;
   out_6484486210560443063[187] = 0;
   out_6484486210560443063[188] = 0;
   out_6484486210560443063[189] = 0;
   out_6484486210560443063[190] = 0;
   out_6484486210560443063[191] = 0;
   out_6484486210560443063[192] = 0;
   out_6484486210560443063[193] = 0;
   out_6484486210560443063[194] = 0;
   out_6484486210560443063[195] = 0;
   out_6484486210560443063[196] = 0;
   out_6484486210560443063[197] = 0;
   out_6484486210560443063[198] = 1;
   out_6484486210560443063[199] = 0;
   out_6484486210560443063[200] = 0;
   out_6484486210560443063[201] = 0;
   out_6484486210560443063[202] = 0;
   out_6484486210560443063[203] = 0;
   out_6484486210560443063[204] = 0;
   out_6484486210560443063[205] = 0;
   out_6484486210560443063[206] = 0;
   out_6484486210560443063[207] = 0;
   out_6484486210560443063[208] = 0;
   out_6484486210560443063[209] = 0;
   out_6484486210560443063[210] = 0;
   out_6484486210560443063[211] = 0;
   out_6484486210560443063[212] = 0;
   out_6484486210560443063[213] = 0;
   out_6484486210560443063[214] = 0;
   out_6484486210560443063[215] = 0;
   out_6484486210560443063[216] = 0;
   out_6484486210560443063[217] = 0;
   out_6484486210560443063[218] = 0;
   out_6484486210560443063[219] = 0;
   out_6484486210560443063[220] = 1;
   out_6484486210560443063[221] = 0;
   out_6484486210560443063[222] = 0;
   out_6484486210560443063[223] = 0;
   out_6484486210560443063[224] = 0;
   out_6484486210560443063[225] = 0;
   out_6484486210560443063[226] = 0;
   out_6484486210560443063[227] = 0;
   out_6484486210560443063[228] = 0;
   out_6484486210560443063[229] = 0;
   out_6484486210560443063[230] = 0;
   out_6484486210560443063[231] = 0;
   out_6484486210560443063[232] = 0;
   out_6484486210560443063[233] = 0;
   out_6484486210560443063[234] = 0;
   out_6484486210560443063[235] = 0;
   out_6484486210560443063[236] = 0;
   out_6484486210560443063[237] = 0;
   out_6484486210560443063[238] = 0;
   out_6484486210560443063[239] = 0;
   out_6484486210560443063[240] = 0;
   out_6484486210560443063[241] = 0;
   out_6484486210560443063[242] = 1;
   out_6484486210560443063[243] = 0;
   out_6484486210560443063[244] = 0;
   out_6484486210560443063[245] = 0;
   out_6484486210560443063[246] = 0;
   out_6484486210560443063[247] = 0;
   out_6484486210560443063[248] = 0;
   out_6484486210560443063[249] = 0;
   out_6484486210560443063[250] = 0;
   out_6484486210560443063[251] = 0;
   out_6484486210560443063[252] = 0;
   out_6484486210560443063[253] = 0;
   out_6484486210560443063[254] = 0;
   out_6484486210560443063[255] = 0;
   out_6484486210560443063[256] = 0;
   out_6484486210560443063[257] = 0;
   out_6484486210560443063[258] = 0;
   out_6484486210560443063[259] = 0;
   out_6484486210560443063[260] = 0;
   out_6484486210560443063[261] = 0;
   out_6484486210560443063[262] = 0;
   out_6484486210560443063[263] = 0;
   out_6484486210560443063[264] = 1;
   out_6484486210560443063[265] = 0;
   out_6484486210560443063[266] = 0;
   out_6484486210560443063[267] = 0;
   out_6484486210560443063[268] = 0;
   out_6484486210560443063[269] = 0;
   out_6484486210560443063[270] = 0;
   out_6484486210560443063[271] = 0;
   out_6484486210560443063[272] = 0;
   out_6484486210560443063[273] = 0;
   out_6484486210560443063[274] = 0;
   out_6484486210560443063[275] = 0;
   out_6484486210560443063[276] = 0;
   out_6484486210560443063[277] = 0;
   out_6484486210560443063[278] = 0;
   out_6484486210560443063[279] = 0;
   out_6484486210560443063[280] = 0;
   out_6484486210560443063[281] = 0;
   out_6484486210560443063[282] = 0;
   out_6484486210560443063[283] = 0;
   out_6484486210560443063[284] = 0;
   out_6484486210560443063[285] = 0;
   out_6484486210560443063[286] = 1;
   out_6484486210560443063[287] = 0;
   out_6484486210560443063[288] = 0;
   out_6484486210560443063[289] = 0;
   out_6484486210560443063[290] = 0;
   out_6484486210560443063[291] = 0;
   out_6484486210560443063[292] = 0;
   out_6484486210560443063[293] = 0;
   out_6484486210560443063[294] = 0;
   out_6484486210560443063[295] = 0;
   out_6484486210560443063[296] = 0;
   out_6484486210560443063[297] = 0;
   out_6484486210560443063[298] = 0;
   out_6484486210560443063[299] = 0;
   out_6484486210560443063[300] = 0;
   out_6484486210560443063[301] = 0;
   out_6484486210560443063[302] = 0;
   out_6484486210560443063[303] = 0;
   out_6484486210560443063[304] = 0;
   out_6484486210560443063[305] = 0;
   out_6484486210560443063[306] = 0;
   out_6484486210560443063[307] = 0;
   out_6484486210560443063[308] = 1;
   out_6484486210560443063[309] = 0;
   out_6484486210560443063[310] = 0;
   out_6484486210560443063[311] = 0;
   out_6484486210560443063[312] = 0;
   out_6484486210560443063[313] = 0;
   out_6484486210560443063[314] = 0;
   out_6484486210560443063[315] = 0;
   out_6484486210560443063[316] = 0;
   out_6484486210560443063[317] = 0;
   out_6484486210560443063[318] = 0;
   out_6484486210560443063[319] = 0;
   out_6484486210560443063[320] = 0;
   out_6484486210560443063[321] = 0;
   out_6484486210560443063[322] = 0;
   out_6484486210560443063[323] = 0;
   out_6484486210560443063[324] = 0;
   out_6484486210560443063[325] = 0;
   out_6484486210560443063[326] = 0;
   out_6484486210560443063[327] = 0;
   out_6484486210560443063[328] = 0;
   out_6484486210560443063[329] = 0;
   out_6484486210560443063[330] = 1;
   out_6484486210560443063[331] = 0;
   out_6484486210560443063[332] = 0;
   out_6484486210560443063[333] = 0;
   out_6484486210560443063[334] = 0;
   out_6484486210560443063[335] = 0;
   out_6484486210560443063[336] = 0;
   out_6484486210560443063[337] = 0;
   out_6484486210560443063[338] = 0;
   out_6484486210560443063[339] = 0;
   out_6484486210560443063[340] = 0;
   out_6484486210560443063[341] = 0;
   out_6484486210560443063[342] = 0;
   out_6484486210560443063[343] = 0;
   out_6484486210560443063[344] = 0;
   out_6484486210560443063[345] = 0;
   out_6484486210560443063[346] = 0;
   out_6484486210560443063[347] = 0;
   out_6484486210560443063[348] = 0;
   out_6484486210560443063[349] = 0;
   out_6484486210560443063[350] = 0;
   out_6484486210560443063[351] = 0;
   out_6484486210560443063[352] = 1;
   out_6484486210560443063[353] = 0;
   out_6484486210560443063[354] = 0;
   out_6484486210560443063[355] = 0;
   out_6484486210560443063[356] = 0;
   out_6484486210560443063[357] = 0;
   out_6484486210560443063[358] = 0;
   out_6484486210560443063[359] = 0;
   out_6484486210560443063[360] = 0;
   out_6484486210560443063[361] = 0;
   out_6484486210560443063[362] = 0;
   out_6484486210560443063[363] = 0;
   out_6484486210560443063[364] = 0;
   out_6484486210560443063[365] = 0;
   out_6484486210560443063[366] = 0;
   out_6484486210560443063[367] = 0;
   out_6484486210560443063[368] = 0;
   out_6484486210560443063[369] = 0;
   out_6484486210560443063[370] = 0;
   out_6484486210560443063[371] = 0;
   out_6484486210560443063[372] = 0;
   out_6484486210560443063[373] = 0;
   out_6484486210560443063[374] = 1;
   out_6484486210560443063[375] = 0;
   out_6484486210560443063[376] = 0;
   out_6484486210560443063[377] = 0;
   out_6484486210560443063[378] = 0;
   out_6484486210560443063[379] = 0;
   out_6484486210560443063[380] = 0;
   out_6484486210560443063[381] = 0;
   out_6484486210560443063[382] = 0;
   out_6484486210560443063[383] = 0;
   out_6484486210560443063[384] = 0;
   out_6484486210560443063[385] = 0;
   out_6484486210560443063[386] = 0;
   out_6484486210560443063[387] = 0;
   out_6484486210560443063[388] = 0;
   out_6484486210560443063[389] = 0;
   out_6484486210560443063[390] = 0;
   out_6484486210560443063[391] = 0;
   out_6484486210560443063[392] = 0;
   out_6484486210560443063[393] = 0;
   out_6484486210560443063[394] = 0;
   out_6484486210560443063[395] = 0;
   out_6484486210560443063[396] = 1;
   out_6484486210560443063[397] = 0;
   out_6484486210560443063[398] = 0;
   out_6484486210560443063[399] = 0;
   out_6484486210560443063[400] = 0;
   out_6484486210560443063[401] = 0;
   out_6484486210560443063[402] = 0;
   out_6484486210560443063[403] = 0;
   out_6484486210560443063[404] = 0;
   out_6484486210560443063[405] = 0;
   out_6484486210560443063[406] = 0;
   out_6484486210560443063[407] = 0;
   out_6484486210560443063[408] = 0;
   out_6484486210560443063[409] = 0;
   out_6484486210560443063[410] = 0;
   out_6484486210560443063[411] = 0;
   out_6484486210560443063[412] = 0;
   out_6484486210560443063[413] = 0;
   out_6484486210560443063[414] = 0;
   out_6484486210560443063[415] = 0;
   out_6484486210560443063[416] = 0;
   out_6484486210560443063[417] = 0;
   out_6484486210560443063[418] = 1;
   out_6484486210560443063[419] = 0;
   out_6484486210560443063[420] = 0;
   out_6484486210560443063[421] = 0;
   out_6484486210560443063[422] = 0;
   out_6484486210560443063[423] = 0;
   out_6484486210560443063[424] = 0;
   out_6484486210560443063[425] = 0;
   out_6484486210560443063[426] = 0;
   out_6484486210560443063[427] = 0;
   out_6484486210560443063[428] = 0;
   out_6484486210560443063[429] = 0;
   out_6484486210560443063[430] = 0;
   out_6484486210560443063[431] = 0;
   out_6484486210560443063[432] = 0;
   out_6484486210560443063[433] = 0;
   out_6484486210560443063[434] = 0;
   out_6484486210560443063[435] = 0;
   out_6484486210560443063[436] = 0;
   out_6484486210560443063[437] = 0;
   out_6484486210560443063[438] = 0;
   out_6484486210560443063[439] = 0;
   out_6484486210560443063[440] = 1;
}
void h_4(double *state, double *unused, double *out_8951149540069868237) {
   out_8951149540069868237[0] = state[10] + state[13];
   out_8951149540069868237[1] = state[11] + state[14];
   out_8951149540069868237[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7341580059135160500) {
   out_7341580059135160500[0] = 0;
   out_7341580059135160500[1] = 0;
   out_7341580059135160500[2] = 0;
   out_7341580059135160500[3] = 0;
   out_7341580059135160500[4] = 0;
   out_7341580059135160500[5] = 0;
   out_7341580059135160500[6] = 0;
   out_7341580059135160500[7] = 0;
   out_7341580059135160500[8] = 0;
   out_7341580059135160500[9] = 0;
   out_7341580059135160500[10] = 1;
   out_7341580059135160500[11] = 0;
   out_7341580059135160500[12] = 0;
   out_7341580059135160500[13] = 1;
   out_7341580059135160500[14] = 0;
   out_7341580059135160500[15] = 0;
   out_7341580059135160500[16] = 0;
   out_7341580059135160500[17] = 0;
   out_7341580059135160500[18] = 0;
   out_7341580059135160500[19] = 0;
   out_7341580059135160500[20] = 0;
   out_7341580059135160500[21] = 0;
   out_7341580059135160500[22] = 0;
   out_7341580059135160500[23] = 0;
   out_7341580059135160500[24] = 0;
   out_7341580059135160500[25] = 0;
   out_7341580059135160500[26] = 0;
   out_7341580059135160500[27] = 0;
   out_7341580059135160500[28] = 0;
   out_7341580059135160500[29] = 0;
   out_7341580059135160500[30] = 0;
   out_7341580059135160500[31] = 0;
   out_7341580059135160500[32] = 0;
   out_7341580059135160500[33] = 1;
   out_7341580059135160500[34] = 0;
   out_7341580059135160500[35] = 0;
   out_7341580059135160500[36] = 1;
   out_7341580059135160500[37] = 0;
   out_7341580059135160500[38] = 0;
   out_7341580059135160500[39] = 0;
   out_7341580059135160500[40] = 0;
   out_7341580059135160500[41] = 0;
   out_7341580059135160500[42] = 0;
   out_7341580059135160500[43] = 0;
   out_7341580059135160500[44] = 0;
   out_7341580059135160500[45] = 0;
   out_7341580059135160500[46] = 0;
   out_7341580059135160500[47] = 0;
   out_7341580059135160500[48] = 0;
   out_7341580059135160500[49] = 0;
   out_7341580059135160500[50] = 0;
   out_7341580059135160500[51] = 0;
   out_7341580059135160500[52] = 0;
   out_7341580059135160500[53] = 0;
   out_7341580059135160500[54] = 0;
   out_7341580059135160500[55] = 0;
   out_7341580059135160500[56] = 1;
   out_7341580059135160500[57] = 0;
   out_7341580059135160500[58] = 0;
   out_7341580059135160500[59] = 1;
   out_7341580059135160500[60] = 0;
   out_7341580059135160500[61] = 0;
   out_7341580059135160500[62] = 0;
   out_7341580059135160500[63] = 0;
   out_7341580059135160500[64] = 0;
   out_7341580059135160500[65] = 0;
}
void h_9(double *state, double *unused, double *out_2591271411914187821) {
   out_2591271411914187821[0] = state[10];
   out_2591271411914187821[1] = state[11];
   out_2591271411914187821[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3817945079309943646) {
   out_3817945079309943646[0] = 0;
   out_3817945079309943646[1] = 0;
   out_3817945079309943646[2] = 0;
   out_3817945079309943646[3] = 0;
   out_3817945079309943646[4] = 0;
   out_3817945079309943646[5] = 0;
   out_3817945079309943646[6] = 0;
   out_3817945079309943646[7] = 0;
   out_3817945079309943646[8] = 0;
   out_3817945079309943646[9] = 0;
   out_3817945079309943646[10] = 1;
   out_3817945079309943646[11] = 0;
   out_3817945079309943646[12] = 0;
   out_3817945079309943646[13] = 0;
   out_3817945079309943646[14] = 0;
   out_3817945079309943646[15] = 0;
   out_3817945079309943646[16] = 0;
   out_3817945079309943646[17] = 0;
   out_3817945079309943646[18] = 0;
   out_3817945079309943646[19] = 0;
   out_3817945079309943646[20] = 0;
   out_3817945079309943646[21] = 0;
   out_3817945079309943646[22] = 0;
   out_3817945079309943646[23] = 0;
   out_3817945079309943646[24] = 0;
   out_3817945079309943646[25] = 0;
   out_3817945079309943646[26] = 0;
   out_3817945079309943646[27] = 0;
   out_3817945079309943646[28] = 0;
   out_3817945079309943646[29] = 0;
   out_3817945079309943646[30] = 0;
   out_3817945079309943646[31] = 0;
   out_3817945079309943646[32] = 0;
   out_3817945079309943646[33] = 1;
   out_3817945079309943646[34] = 0;
   out_3817945079309943646[35] = 0;
   out_3817945079309943646[36] = 0;
   out_3817945079309943646[37] = 0;
   out_3817945079309943646[38] = 0;
   out_3817945079309943646[39] = 0;
   out_3817945079309943646[40] = 0;
   out_3817945079309943646[41] = 0;
   out_3817945079309943646[42] = 0;
   out_3817945079309943646[43] = 0;
   out_3817945079309943646[44] = 0;
   out_3817945079309943646[45] = 0;
   out_3817945079309943646[46] = 0;
   out_3817945079309943646[47] = 0;
   out_3817945079309943646[48] = 0;
   out_3817945079309943646[49] = 0;
   out_3817945079309943646[50] = 0;
   out_3817945079309943646[51] = 0;
   out_3817945079309943646[52] = 0;
   out_3817945079309943646[53] = 0;
   out_3817945079309943646[54] = 0;
   out_3817945079309943646[55] = 0;
   out_3817945079309943646[56] = 1;
   out_3817945079309943646[57] = 0;
   out_3817945079309943646[58] = 0;
   out_3817945079309943646[59] = 0;
   out_3817945079309943646[60] = 0;
   out_3817945079309943646[61] = 0;
   out_3817945079309943646[62] = 0;
   out_3817945079309943646[63] = 0;
   out_3817945079309943646[64] = 0;
   out_3817945079309943646[65] = 0;
}
void h_10(double *state, double *unused, double *out_7505501518899847905) {
   out_7505501518899847905[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7505501518899847905[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7505501518899847905[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1027820157764279124) {
   out_1027820157764279124[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1027820157764279124[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1027820157764279124[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1027820157764279124[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1027820157764279124[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1027820157764279124[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1027820157764279124[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1027820157764279124[7] = 0;
   out_1027820157764279124[8] = 0;
   out_1027820157764279124[9] = 0;
   out_1027820157764279124[10] = 0;
   out_1027820157764279124[11] = 0;
   out_1027820157764279124[12] = 0;
   out_1027820157764279124[13] = 0;
   out_1027820157764279124[14] = 0;
   out_1027820157764279124[15] = 0;
   out_1027820157764279124[16] = 1;
   out_1027820157764279124[17] = 0;
   out_1027820157764279124[18] = 0;
   out_1027820157764279124[19] = 1;
   out_1027820157764279124[20] = 0;
   out_1027820157764279124[21] = 0;
   out_1027820157764279124[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1027820157764279124[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1027820157764279124[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1027820157764279124[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1027820157764279124[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1027820157764279124[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1027820157764279124[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1027820157764279124[29] = 0;
   out_1027820157764279124[30] = 0;
   out_1027820157764279124[31] = 0;
   out_1027820157764279124[32] = 0;
   out_1027820157764279124[33] = 0;
   out_1027820157764279124[34] = 0;
   out_1027820157764279124[35] = 0;
   out_1027820157764279124[36] = 0;
   out_1027820157764279124[37] = 0;
   out_1027820157764279124[38] = 0;
   out_1027820157764279124[39] = 1;
   out_1027820157764279124[40] = 0;
   out_1027820157764279124[41] = 0;
   out_1027820157764279124[42] = 1;
   out_1027820157764279124[43] = 0;
   out_1027820157764279124[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1027820157764279124[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1027820157764279124[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1027820157764279124[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1027820157764279124[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1027820157764279124[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1027820157764279124[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1027820157764279124[51] = 0;
   out_1027820157764279124[52] = 0;
   out_1027820157764279124[53] = 0;
   out_1027820157764279124[54] = 0;
   out_1027820157764279124[55] = 0;
   out_1027820157764279124[56] = 0;
   out_1027820157764279124[57] = 0;
   out_1027820157764279124[58] = 0;
   out_1027820157764279124[59] = 0;
   out_1027820157764279124[60] = 0;
   out_1027820157764279124[61] = 0;
   out_1027820157764279124[62] = 1;
   out_1027820157764279124[63] = 0;
   out_1027820157764279124[64] = 0;
   out_1027820157764279124[65] = 1;
}
void h_12(double *state, double *unused, double *out_2509465980707663534) {
   out_2509465980707663534[0] = state[0];
   out_2509465980707663534[1] = state[1];
   out_2509465980707663534[2] = state[2];
}
void H_12(double *state, double *unused, double *out_960321682092427504) {
   out_960321682092427504[0] = 1;
   out_960321682092427504[1] = 0;
   out_960321682092427504[2] = 0;
   out_960321682092427504[3] = 0;
   out_960321682092427504[4] = 0;
   out_960321682092427504[5] = 0;
   out_960321682092427504[6] = 0;
   out_960321682092427504[7] = 0;
   out_960321682092427504[8] = 0;
   out_960321682092427504[9] = 0;
   out_960321682092427504[10] = 0;
   out_960321682092427504[11] = 0;
   out_960321682092427504[12] = 0;
   out_960321682092427504[13] = 0;
   out_960321682092427504[14] = 0;
   out_960321682092427504[15] = 0;
   out_960321682092427504[16] = 0;
   out_960321682092427504[17] = 0;
   out_960321682092427504[18] = 0;
   out_960321682092427504[19] = 0;
   out_960321682092427504[20] = 0;
   out_960321682092427504[21] = 0;
   out_960321682092427504[22] = 0;
   out_960321682092427504[23] = 1;
   out_960321682092427504[24] = 0;
   out_960321682092427504[25] = 0;
   out_960321682092427504[26] = 0;
   out_960321682092427504[27] = 0;
   out_960321682092427504[28] = 0;
   out_960321682092427504[29] = 0;
   out_960321682092427504[30] = 0;
   out_960321682092427504[31] = 0;
   out_960321682092427504[32] = 0;
   out_960321682092427504[33] = 0;
   out_960321682092427504[34] = 0;
   out_960321682092427504[35] = 0;
   out_960321682092427504[36] = 0;
   out_960321682092427504[37] = 0;
   out_960321682092427504[38] = 0;
   out_960321682092427504[39] = 0;
   out_960321682092427504[40] = 0;
   out_960321682092427504[41] = 0;
   out_960321682092427504[42] = 0;
   out_960321682092427504[43] = 0;
   out_960321682092427504[44] = 0;
   out_960321682092427504[45] = 0;
   out_960321682092427504[46] = 1;
   out_960321682092427504[47] = 0;
   out_960321682092427504[48] = 0;
   out_960321682092427504[49] = 0;
   out_960321682092427504[50] = 0;
   out_960321682092427504[51] = 0;
   out_960321682092427504[52] = 0;
   out_960321682092427504[53] = 0;
   out_960321682092427504[54] = 0;
   out_960321682092427504[55] = 0;
   out_960321682092427504[56] = 0;
   out_960321682092427504[57] = 0;
   out_960321682092427504[58] = 0;
   out_960321682092427504[59] = 0;
   out_960321682092427504[60] = 0;
   out_960321682092427504[61] = 0;
   out_960321682092427504[62] = 0;
   out_960321682092427504[63] = 0;
   out_960321682092427504[64] = 0;
   out_960321682092427504[65] = 0;
}
void h_35(double *state, double *unused, double *out_5209909461446594374) {
   out_5209909461446594374[0] = state[7];
   out_5209909461446594374[1] = state[8];
   out_5209909461446594374[2] = state[9];
}
void H_35(double *state, double *unused, double *out_692472668566926915) {
   out_692472668566926915[0] = 0;
   out_692472668566926915[1] = 0;
   out_692472668566926915[2] = 0;
   out_692472668566926915[3] = 0;
   out_692472668566926915[4] = 0;
   out_692472668566926915[5] = 0;
   out_692472668566926915[6] = 0;
   out_692472668566926915[7] = 1;
   out_692472668566926915[8] = 0;
   out_692472668566926915[9] = 0;
   out_692472668566926915[10] = 0;
   out_692472668566926915[11] = 0;
   out_692472668566926915[12] = 0;
   out_692472668566926915[13] = 0;
   out_692472668566926915[14] = 0;
   out_692472668566926915[15] = 0;
   out_692472668566926915[16] = 0;
   out_692472668566926915[17] = 0;
   out_692472668566926915[18] = 0;
   out_692472668566926915[19] = 0;
   out_692472668566926915[20] = 0;
   out_692472668566926915[21] = 0;
   out_692472668566926915[22] = 0;
   out_692472668566926915[23] = 0;
   out_692472668566926915[24] = 0;
   out_692472668566926915[25] = 0;
   out_692472668566926915[26] = 0;
   out_692472668566926915[27] = 0;
   out_692472668566926915[28] = 0;
   out_692472668566926915[29] = 0;
   out_692472668566926915[30] = 1;
   out_692472668566926915[31] = 0;
   out_692472668566926915[32] = 0;
   out_692472668566926915[33] = 0;
   out_692472668566926915[34] = 0;
   out_692472668566926915[35] = 0;
   out_692472668566926915[36] = 0;
   out_692472668566926915[37] = 0;
   out_692472668566926915[38] = 0;
   out_692472668566926915[39] = 0;
   out_692472668566926915[40] = 0;
   out_692472668566926915[41] = 0;
   out_692472668566926915[42] = 0;
   out_692472668566926915[43] = 0;
   out_692472668566926915[44] = 0;
   out_692472668566926915[45] = 0;
   out_692472668566926915[46] = 0;
   out_692472668566926915[47] = 0;
   out_692472668566926915[48] = 0;
   out_692472668566926915[49] = 0;
   out_692472668566926915[50] = 0;
   out_692472668566926915[51] = 0;
   out_692472668566926915[52] = 0;
   out_692472668566926915[53] = 1;
   out_692472668566926915[54] = 0;
   out_692472668566926915[55] = 0;
   out_692472668566926915[56] = 0;
   out_692472668566926915[57] = 0;
   out_692472668566926915[58] = 0;
   out_692472668566926915[59] = 0;
   out_692472668566926915[60] = 0;
   out_692472668566926915[61] = 0;
   out_692472668566926915[62] = 0;
   out_692472668566926915[63] = 0;
   out_692472668566926915[64] = 0;
   out_692472668566926915[65] = 0;
}
void h_32(double *state, double *unused, double *out_2608196464487643323) {
   out_2608196464487643323[0] = state[3];
   out_2608196464487643323[1] = state[4];
   out_2608196464487643323[2] = state[5];
   out_2608196464487643323[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6489542878835858806) {
   out_6489542878835858806[0] = 0;
   out_6489542878835858806[1] = 0;
   out_6489542878835858806[2] = 0;
   out_6489542878835858806[3] = 1;
   out_6489542878835858806[4] = 0;
   out_6489542878835858806[5] = 0;
   out_6489542878835858806[6] = 0;
   out_6489542878835858806[7] = 0;
   out_6489542878835858806[8] = 0;
   out_6489542878835858806[9] = 0;
   out_6489542878835858806[10] = 0;
   out_6489542878835858806[11] = 0;
   out_6489542878835858806[12] = 0;
   out_6489542878835858806[13] = 0;
   out_6489542878835858806[14] = 0;
   out_6489542878835858806[15] = 0;
   out_6489542878835858806[16] = 0;
   out_6489542878835858806[17] = 0;
   out_6489542878835858806[18] = 0;
   out_6489542878835858806[19] = 0;
   out_6489542878835858806[20] = 0;
   out_6489542878835858806[21] = 0;
   out_6489542878835858806[22] = 0;
   out_6489542878835858806[23] = 0;
   out_6489542878835858806[24] = 0;
   out_6489542878835858806[25] = 0;
   out_6489542878835858806[26] = 1;
   out_6489542878835858806[27] = 0;
   out_6489542878835858806[28] = 0;
   out_6489542878835858806[29] = 0;
   out_6489542878835858806[30] = 0;
   out_6489542878835858806[31] = 0;
   out_6489542878835858806[32] = 0;
   out_6489542878835858806[33] = 0;
   out_6489542878835858806[34] = 0;
   out_6489542878835858806[35] = 0;
   out_6489542878835858806[36] = 0;
   out_6489542878835858806[37] = 0;
   out_6489542878835858806[38] = 0;
   out_6489542878835858806[39] = 0;
   out_6489542878835858806[40] = 0;
   out_6489542878835858806[41] = 0;
   out_6489542878835858806[42] = 0;
   out_6489542878835858806[43] = 0;
   out_6489542878835858806[44] = 0;
   out_6489542878835858806[45] = 0;
   out_6489542878835858806[46] = 0;
   out_6489542878835858806[47] = 0;
   out_6489542878835858806[48] = 0;
   out_6489542878835858806[49] = 1;
   out_6489542878835858806[50] = 0;
   out_6489542878835858806[51] = 0;
   out_6489542878835858806[52] = 0;
   out_6489542878835858806[53] = 0;
   out_6489542878835858806[54] = 0;
   out_6489542878835858806[55] = 0;
   out_6489542878835858806[56] = 0;
   out_6489542878835858806[57] = 0;
   out_6489542878835858806[58] = 0;
   out_6489542878835858806[59] = 0;
   out_6489542878835858806[60] = 0;
   out_6489542878835858806[61] = 0;
   out_6489542878835858806[62] = 0;
   out_6489542878835858806[63] = 0;
   out_6489542878835858806[64] = 0;
   out_6489542878835858806[65] = 0;
   out_6489542878835858806[66] = 0;
   out_6489542878835858806[67] = 0;
   out_6489542878835858806[68] = 0;
   out_6489542878835858806[69] = 0;
   out_6489542878835858806[70] = 0;
   out_6489542878835858806[71] = 0;
   out_6489542878835858806[72] = 1;
   out_6489542878835858806[73] = 0;
   out_6489542878835858806[74] = 0;
   out_6489542878835858806[75] = 0;
   out_6489542878835858806[76] = 0;
   out_6489542878835858806[77] = 0;
   out_6489542878835858806[78] = 0;
   out_6489542878835858806[79] = 0;
   out_6489542878835858806[80] = 0;
   out_6489542878835858806[81] = 0;
   out_6489542878835858806[82] = 0;
   out_6489542878835858806[83] = 0;
   out_6489542878835858806[84] = 0;
   out_6489542878835858806[85] = 0;
   out_6489542878835858806[86] = 0;
   out_6489542878835858806[87] = 0;
}
void h_13(double *state, double *unused, double *out_6693706027089483150) {
   out_6693706027089483150[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6693706027089483150[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6693706027089483150[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4381346917234443660) {
   out_4381346917234443660[0] = 0;
   out_4381346917234443660[1] = 0;
   out_4381346917234443660[2] = 0;
   out_4381346917234443660[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4381346917234443660[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4381346917234443660[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4381346917234443660[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4381346917234443660[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4381346917234443660[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4381346917234443660[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4381346917234443660[10] = 0;
   out_4381346917234443660[11] = 0;
   out_4381346917234443660[12] = 0;
   out_4381346917234443660[13] = 0;
   out_4381346917234443660[14] = 0;
   out_4381346917234443660[15] = 0;
   out_4381346917234443660[16] = 0;
   out_4381346917234443660[17] = 0;
   out_4381346917234443660[18] = 0;
   out_4381346917234443660[19] = 0;
   out_4381346917234443660[20] = 0;
   out_4381346917234443660[21] = 0;
   out_4381346917234443660[22] = 0;
   out_4381346917234443660[23] = 0;
   out_4381346917234443660[24] = 0;
   out_4381346917234443660[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4381346917234443660[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4381346917234443660[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4381346917234443660[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4381346917234443660[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4381346917234443660[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4381346917234443660[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4381346917234443660[32] = 0;
   out_4381346917234443660[33] = 0;
   out_4381346917234443660[34] = 0;
   out_4381346917234443660[35] = 0;
   out_4381346917234443660[36] = 0;
   out_4381346917234443660[37] = 0;
   out_4381346917234443660[38] = 0;
   out_4381346917234443660[39] = 0;
   out_4381346917234443660[40] = 0;
   out_4381346917234443660[41] = 0;
   out_4381346917234443660[42] = 0;
   out_4381346917234443660[43] = 0;
   out_4381346917234443660[44] = 0;
   out_4381346917234443660[45] = 0;
   out_4381346917234443660[46] = 0;
   out_4381346917234443660[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4381346917234443660[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4381346917234443660[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4381346917234443660[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4381346917234443660[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4381346917234443660[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4381346917234443660[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4381346917234443660[54] = 0;
   out_4381346917234443660[55] = 0;
   out_4381346917234443660[56] = 0;
   out_4381346917234443660[57] = 0;
   out_4381346917234443660[58] = 0;
   out_4381346917234443660[59] = 0;
   out_4381346917234443660[60] = 0;
   out_4381346917234443660[61] = 0;
   out_4381346917234443660[62] = 0;
   out_4381346917234443660[63] = 0;
   out_4381346917234443660[64] = 0;
   out_4381346917234443660[65] = 0;
}
void h_14(double *state, double *unused, double *out_2591271411914187821) {
   out_2591271411914187821[0] = state[10];
   out_2591271411914187821[1] = state[11];
   out_2591271411914187821[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3817945079309943646) {
   out_3817945079309943646[0] = 0;
   out_3817945079309943646[1] = 0;
   out_3817945079309943646[2] = 0;
   out_3817945079309943646[3] = 0;
   out_3817945079309943646[4] = 0;
   out_3817945079309943646[5] = 0;
   out_3817945079309943646[6] = 0;
   out_3817945079309943646[7] = 0;
   out_3817945079309943646[8] = 0;
   out_3817945079309943646[9] = 0;
   out_3817945079309943646[10] = 1;
   out_3817945079309943646[11] = 0;
   out_3817945079309943646[12] = 0;
   out_3817945079309943646[13] = 0;
   out_3817945079309943646[14] = 0;
   out_3817945079309943646[15] = 0;
   out_3817945079309943646[16] = 0;
   out_3817945079309943646[17] = 0;
   out_3817945079309943646[18] = 0;
   out_3817945079309943646[19] = 0;
   out_3817945079309943646[20] = 0;
   out_3817945079309943646[21] = 0;
   out_3817945079309943646[22] = 0;
   out_3817945079309943646[23] = 0;
   out_3817945079309943646[24] = 0;
   out_3817945079309943646[25] = 0;
   out_3817945079309943646[26] = 0;
   out_3817945079309943646[27] = 0;
   out_3817945079309943646[28] = 0;
   out_3817945079309943646[29] = 0;
   out_3817945079309943646[30] = 0;
   out_3817945079309943646[31] = 0;
   out_3817945079309943646[32] = 0;
   out_3817945079309943646[33] = 1;
   out_3817945079309943646[34] = 0;
   out_3817945079309943646[35] = 0;
   out_3817945079309943646[36] = 0;
   out_3817945079309943646[37] = 0;
   out_3817945079309943646[38] = 0;
   out_3817945079309943646[39] = 0;
   out_3817945079309943646[40] = 0;
   out_3817945079309943646[41] = 0;
   out_3817945079309943646[42] = 0;
   out_3817945079309943646[43] = 0;
   out_3817945079309943646[44] = 0;
   out_3817945079309943646[45] = 0;
   out_3817945079309943646[46] = 0;
   out_3817945079309943646[47] = 0;
   out_3817945079309943646[48] = 0;
   out_3817945079309943646[49] = 0;
   out_3817945079309943646[50] = 0;
   out_3817945079309943646[51] = 0;
   out_3817945079309943646[52] = 0;
   out_3817945079309943646[53] = 0;
   out_3817945079309943646[54] = 0;
   out_3817945079309943646[55] = 0;
   out_3817945079309943646[56] = 1;
   out_3817945079309943646[57] = 0;
   out_3817945079309943646[58] = 0;
   out_3817945079309943646[59] = 0;
   out_3817945079309943646[60] = 0;
   out_3817945079309943646[61] = 0;
   out_3817945079309943646[62] = 0;
   out_3817945079309943646[63] = 0;
   out_3817945079309943646[64] = 0;
   out_3817945079309943646[65] = 0;
}
void h_33(double *state, double *unused, double *out_747017267034963486) {
   out_747017267034963486[0] = state[16];
   out_747017267034963486[1] = state[17];
   out_747017267034963486[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2458084336071930689) {
   out_2458084336071930689[0] = 0;
   out_2458084336071930689[1] = 0;
   out_2458084336071930689[2] = 0;
   out_2458084336071930689[3] = 0;
   out_2458084336071930689[4] = 0;
   out_2458084336071930689[5] = 0;
   out_2458084336071930689[6] = 0;
   out_2458084336071930689[7] = 0;
   out_2458084336071930689[8] = 0;
   out_2458084336071930689[9] = 0;
   out_2458084336071930689[10] = 0;
   out_2458084336071930689[11] = 0;
   out_2458084336071930689[12] = 0;
   out_2458084336071930689[13] = 0;
   out_2458084336071930689[14] = 0;
   out_2458084336071930689[15] = 0;
   out_2458084336071930689[16] = 1;
   out_2458084336071930689[17] = 0;
   out_2458084336071930689[18] = 0;
   out_2458084336071930689[19] = 0;
   out_2458084336071930689[20] = 0;
   out_2458084336071930689[21] = 0;
   out_2458084336071930689[22] = 0;
   out_2458084336071930689[23] = 0;
   out_2458084336071930689[24] = 0;
   out_2458084336071930689[25] = 0;
   out_2458084336071930689[26] = 0;
   out_2458084336071930689[27] = 0;
   out_2458084336071930689[28] = 0;
   out_2458084336071930689[29] = 0;
   out_2458084336071930689[30] = 0;
   out_2458084336071930689[31] = 0;
   out_2458084336071930689[32] = 0;
   out_2458084336071930689[33] = 0;
   out_2458084336071930689[34] = 0;
   out_2458084336071930689[35] = 0;
   out_2458084336071930689[36] = 0;
   out_2458084336071930689[37] = 0;
   out_2458084336071930689[38] = 0;
   out_2458084336071930689[39] = 1;
   out_2458084336071930689[40] = 0;
   out_2458084336071930689[41] = 0;
   out_2458084336071930689[42] = 0;
   out_2458084336071930689[43] = 0;
   out_2458084336071930689[44] = 0;
   out_2458084336071930689[45] = 0;
   out_2458084336071930689[46] = 0;
   out_2458084336071930689[47] = 0;
   out_2458084336071930689[48] = 0;
   out_2458084336071930689[49] = 0;
   out_2458084336071930689[50] = 0;
   out_2458084336071930689[51] = 0;
   out_2458084336071930689[52] = 0;
   out_2458084336071930689[53] = 0;
   out_2458084336071930689[54] = 0;
   out_2458084336071930689[55] = 0;
   out_2458084336071930689[56] = 0;
   out_2458084336071930689[57] = 0;
   out_2458084336071930689[58] = 0;
   out_2458084336071930689[59] = 0;
   out_2458084336071930689[60] = 0;
   out_2458084336071930689[61] = 0;
   out_2458084336071930689[62] = 1;
   out_2458084336071930689[63] = 0;
   out_2458084336071930689[64] = 0;
   out_2458084336071930689[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1004438546149370339) {
  H(in_vec, out_1004438546149370339);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8969152691296427567) {
  err_fun(nom_x, delta_x, out_8969152691296427567);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3659399576229617090) {
  inv_err_fun(nom_x, true_x, out_3659399576229617090);
}
void live_H_mod_fun(double *state, double *out_2949472263592139464) {
  H_mod_fun(state, out_2949472263592139464);
}
void live_f_fun(double *state, double dt, double *out_1878871363542729359) {
  f_fun(state,  dt, out_1878871363542729359);
}
void live_F_fun(double *state, double dt, double *out_6484486210560443063) {
  F_fun(state,  dt, out_6484486210560443063);
}
void live_h_4(double *state, double *unused, double *out_8951149540069868237) {
  h_4(state, unused, out_8951149540069868237);
}
void live_H_4(double *state, double *unused, double *out_7341580059135160500) {
  H_4(state, unused, out_7341580059135160500);
}
void live_h_9(double *state, double *unused, double *out_2591271411914187821) {
  h_9(state, unused, out_2591271411914187821);
}
void live_H_9(double *state, double *unused, double *out_3817945079309943646) {
  H_9(state, unused, out_3817945079309943646);
}
void live_h_10(double *state, double *unused, double *out_7505501518899847905) {
  h_10(state, unused, out_7505501518899847905);
}
void live_H_10(double *state, double *unused, double *out_1027820157764279124) {
  H_10(state, unused, out_1027820157764279124);
}
void live_h_12(double *state, double *unused, double *out_2509465980707663534) {
  h_12(state, unused, out_2509465980707663534);
}
void live_H_12(double *state, double *unused, double *out_960321682092427504) {
  H_12(state, unused, out_960321682092427504);
}
void live_h_35(double *state, double *unused, double *out_5209909461446594374) {
  h_35(state, unused, out_5209909461446594374);
}
void live_H_35(double *state, double *unused, double *out_692472668566926915) {
  H_35(state, unused, out_692472668566926915);
}
void live_h_32(double *state, double *unused, double *out_2608196464487643323) {
  h_32(state, unused, out_2608196464487643323);
}
void live_H_32(double *state, double *unused, double *out_6489542878835858806) {
  H_32(state, unused, out_6489542878835858806);
}
void live_h_13(double *state, double *unused, double *out_6693706027089483150) {
  h_13(state, unused, out_6693706027089483150);
}
void live_H_13(double *state, double *unused, double *out_4381346917234443660) {
  H_13(state, unused, out_4381346917234443660);
}
void live_h_14(double *state, double *unused, double *out_2591271411914187821) {
  h_14(state, unused, out_2591271411914187821);
}
void live_H_14(double *state, double *unused, double *out_3817945079309943646) {
  H_14(state, unused, out_3817945079309943646);
}
void live_h_33(double *state, double *unused, double *out_747017267034963486) {
  h_33(state, unused, out_747017267034963486);
}
void live_H_33(double *state, double *unused, double *out_2458084336071930689) {
  H_33(state, unused, out_2458084336071930689);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
