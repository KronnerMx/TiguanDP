#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2822599319381688270) {
   out_2822599319381688270[0] = 0;
   out_2822599319381688270[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2822599319381688270[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2822599319381688270[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2822599319381688270[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2822599319381688270[5] = -sin(in_vec[1]);
   out_2822599319381688270[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2822599319381688270[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2822599319381688270[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2822599319381688270[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2822599319381688270[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2822599319381688270[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2822599319381688270[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2822599319381688270[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2822599319381688270[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2822599319381688270[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2822599319381688270[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2822599319381688270[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7961072857689096202) {
   out_7961072857689096202[0] = delta_x[0] + nom_x[0];
   out_7961072857689096202[1] = delta_x[1] + nom_x[1];
   out_7961072857689096202[2] = delta_x[2] + nom_x[2];
   out_7961072857689096202[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7961072857689096202[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7961072857689096202[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7961072857689096202[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7961072857689096202[7] = delta_x[6] + nom_x[7];
   out_7961072857689096202[8] = delta_x[7] + nom_x[8];
   out_7961072857689096202[9] = delta_x[8] + nom_x[9];
   out_7961072857689096202[10] = delta_x[9] + nom_x[10];
   out_7961072857689096202[11] = delta_x[10] + nom_x[11];
   out_7961072857689096202[12] = delta_x[11] + nom_x[12];
   out_7961072857689096202[13] = delta_x[12] + nom_x[13];
   out_7961072857689096202[14] = delta_x[13] + nom_x[14];
   out_7961072857689096202[15] = delta_x[14] + nom_x[15];
   out_7961072857689096202[16] = delta_x[15] + nom_x[16];
   out_7961072857689096202[17] = delta_x[16] + nom_x[17];
   out_7961072857689096202[18] = delta_x[17] + nom_x[18];
   out_7961072857689096202[19] = delta_x[18] + nom_x[19];
   out_7961072857689096202[20] = delta_x[19] + nom_x[20];
   out_7961072857689096202[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4526548343824011490) {
   out_4526548343824011490[0] = -nom_x[0] + true_x[0];
   out_4526548343824011490[1] = -nom_x[1] + true_x[1];
   out_4526548343824011490[2] = -nom_x[2] + true_x[2];
   out_4526548343824011490[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4526548343824011490[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4526548343824011490[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4526548343824011490[6] = -nom_x[7] + true_x[7];
   out_4526548343824011490[7] = -nom_x[8] + true_x[8];
   out_4526548343824011490[8] = -nom_x[9] + true_x[9];
   out_4526548343824011490[9] = -nom_x[10] + true_x[10];
   out_4526548343824011490[10] = -nom_x[11] + true_x[11];
   out_4526548343824011490[11] = -nom_x[12] + true_x[12];
   out_4526548343824011490[12] = -nom_x[13] + true_x[13];
   out_4526548343824011490[13] = -nom_x[14] + true_x[14];
   out_4526548343824011490[14] = -nom_x[15] + true_x[15];
   out_4526548343824011490[15] = -nom_x[16] + true_x[16];
   out_4526548343824011490[16] = -nom_x[17] + true_x[17];
   out_4526548343824011490[17] = -nom_x[18] + true_x[18];
   out_4526548343824011490[18] = -nom_x[19] + true_x[19];
   out_4526548343824011490[19] = -nom_x[20] + true_x[20];
   out_4526548343824011490[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8044105840918455214) {
   out_8044105840918455214[0] = 1.0;
   out_8044105840918455214[1] = 0;
   out_8044105840918455214[2] = 0;
   out_8044105840918455214[3] = 0;
   out_8044105840918455214[4] = 0;
   out_8044105840918455214[5] = 0;
   out_8044105840918455214[6] = 0;
   out_8044105840918455214[7] = 0;
   out_8044105840918455214[8] = 0;
   out_8044105840918455214[9] = 0;
   out_8044105840918455214[10] = 0;
   out_8044105840918455214[11] = 0;
   out_8044105840918455214[12] = 0;
   out_8044105840918455214[13] = 0;
   out_8044105840918455214[14] = 0;
   out_8044105840918455214[15] = 0;
   out_8044105840918455214[16] = 0;
   out_8044105840918455214[17] = 0;
   out_8044105840918455214[18] = 0;
   out_8044105840918455214[19] = 0;
   out_8044105840918455214[20] = 0;
   out_8044105840918455214[21] = 0;
   out_8044105840918455214[22] = 1.0;
   out_8044105840918455214[23] = 0;
   out_8044105840918455214[24] = 0;
   out_8044105840918455214[25] = 0;
   out_8044105840918455214[26] = 0;
   out_8044105840918455214[27] = 0;
   out_8044105840918455214[28] = 0;
   out_8044105840918455214[29] = 0;
   out_8044105840918455214[30] = 0;
   out_8044105840918455214[31] = 0;
   out_8044105840918455214[32] = 0;
   out_8044105840918455214[33] = 0;
   out_8044105840918455214[34] = 0;
   out_8044105840918455214[35] = 0;
   out_8044105840918455214[36] = 0;
   out_8044105840918455214[37] = 0;
   out_8044105840918455214[38] = 0;
   out_8044105840918455214[39] = 0;
   out_8044105840918455214[40] = 0;
   out_8044105840918455214[41] = 0;
   out_8044105840918455214[42] = 0;
   out_8044105840918455214[43] = 0;
   out_8044105840918455214[44] = 1.0;
   out_8044105840918455214[45] = 0;
   out_8044105840918455214[46] = 0;
   out_8044105840918455214[47] = 0;
   out_8044105840918455214[48] = 0;
   out_8044105840918455214[49] = 0;
   out_8044105840918455214[50] = 0;
   out_8044105840918455214[51] = 0;
   out_8044105840918455214[52] = 0;
   out_8044105840918455214[53] = 0;
   out_8044105840918455214[54] = 0;
   out_8044105840918455214[55] = 0;
   out_8044105840918455214[56] = 0;
   out_8044105840918455214[57] = 0;
   out_8044105840918455214[58] = 0;
   out_8044105840918455214[59] = 0;
   out_8044105840918455214[60] = 0;
   out_8044105840918455214[61] = 0;
   out_8044105840918455214[62] = 0;
   out_8044105840918455214[63] = 0;
   out_8044105840918455214[64] = 0;
   out_8044105840918455214[65] = 0;
   out_8044105840918455214[66] = -0.5*state[4];
   out_8044105840918455214[67] = -0.5*state[5];
   out_8044105840918455214[68] = -0.5*state[6];
   out_8044105840918455214[69] = 0;
   out_8044105840918455214[70] = 0;
   out_8044105840918455214[71] = 0;
   out_8044105840918455214[72] = 0;
   out_8044105840918455214[73] = 0;
   out_8044105840918455214[74] = 0;
   out_8044105840918455214[75] = 0;
   out_8044105840918455214[76] = 0;
   out_8044105840918455214[77] = 0;
   out_8044105840918455214[78] = 0;
   out_8044105840918455214[79] = 0;
   out_8044105840918455214[80] = 0;
   out_8044105840918455214[81] = 0;
   out_8044105840918455214[82] = 0;
   out_8044105840918455214[83] = 0;
   out_8044105840918455214[84] = 0;
   out_8044105840918455214[85] = 0;
   out_8044105840918455214[86] = 0;
   out_8044105840918455214[87] = 0.5*state[3];
   out_8044105840918455214[88] = 0.5*state[6];
   out_8044105840918455214[89] = -0.5*state[5];
   out_8044105840918455214[90] = 0;
   out_8044105840918455214[91] = 0;
   out_8044105840918455214[92] = 0;
   out_8044105840918455214[93] = 0;
   out_8044105840918455214[94] = 0;
   out_8044105840918455214[95] = 0;
   out_8044105840918455214[96] = 0;
   out_8044105840918455214[97] = 0;
   out_8044105840918455214[98] = 0;
   out_8044105840918455214[99] = 0;
   out_8044105840918455214[100] = 0;
   out_8044105840918455214[101] = 0;
   out_8044105840918455214[102] = 0;
   out_8044105840918455214[103] = 0;
   out_8044105840918455214[104] = 0;
   out_8044105840918455214[105] = 0;
   out_8044105840918455214[106] = 0;
   out_8044105840918455214[107] = 0;
   out_8044105840918455214[108] = -0.5*state[6];
   out_8044105840918455214[109] = 0.5*state[3];
   out_8044105840918455214[110] = 0.5*state[4];
   out_8044105840918455214[111] = 0;
   out_8044105840918455214[112] = 0;
   out_8044105840918455214[113] = 0;
   out_8044105840918455214[114] = 0;
   out_8044105840918455214[115] = 0;
   out_8044105840918455214[116] = 0;
   out_8044105840918455214[117] = 0;
   out_8044105840918455214[118] = 0;
   out_8044105840918455214[119] = 0;
   out_8044105840918455214[120] = 0;
   out_8044105840918455214[121] = 0;
   out_8044105840918455214[122] = 0;
   out_8044105840918455214[123] = 0;
   out_8044105840918455214[124] = 0;
   out_8044105840918455214[125] = 0;
   out_8044105840918455214[126] = 0;
   out_8044105840918455214[127] = 0;
   out_8044105840918455214[128] = 0;
   out_8044105840918455214[129] = 0.5*state[5];
   out_8044105840918455214[130] = -0.5*state[4];
   out_8044105840918455214[131] = 0.5*state[3];
   out_8044105840918455214[132] = 0;
   out_8044105840918455214[133] = 0;
   out_8044105840918455214[134] = 0;
   out_8044105840918455214[135] = 0;
   out_8044105840918455214[136] = 0;
   out_8044105840918455214[137] = 0;
   out_8044105840918455214[138] = 0;
   out_8044105840918455214[139] = 0;
   out_8044105840918455214[140] = 0;
   out_8044105840918455214[141] = 0;
   out_8044105840918455214[142] = 0;
   out_8044105840918455214[143] = 0;
   out_8044105840918455214[144] = 0;
   out_8044105840918455214[145] = 0;
   out_8044105840918455214[146] = 0;
   out_8044105840918455214[147] = 0;
   out_8044105840918455214[148] = 0;
   out_8044105840918455214[149] = 0;
   out_8044105840918455214[150] = 0;
   out_8044105840918455214[151] = 0;
   out_8044105840918455214[152] = 0;
   out_8044105840918455214[153] = 1.0;
   out_8044105840918455214[154] = 0;
   out_8044105840918455214[155] = 0;
   out_8044105840918455214[156] = 0;
   out_8044105840918455214[157] = 0;
   out_8044105840918455214[158] = 0;
   out_8044105840918455214[159] = 0;
   out_8044105840918455214[160] = 0;
   out_8044105840918455214[161] = 0;
   out_8044105840918455214[162] = 0;
   out_8044105840918455214[163] = 0;
   out_8044105840918455214[164] = 0;
   out_8044105840918455214[165] = 0;
   out_8044105840918455214[166] = 0;
   out_8044105840918455214[167] = 0;
   out_8044105840918455214[168] = 0;
   out_8044105840918455214[169] = 0;
   out_8044105840918455214[170] = 0;
   out_8044105840918455214[171] = 0;
   out_8044105840918455214[172] = 0;
   out_8044105840918455214[173] = 0;
   out_8044105840918455214[174] = 0;
   out_8044105840918455214[175] = 1.0;
   out_8044105840918455214[176] = 0;
   out_8044105840918455214[177] = 0;
   out_8044105840918455214[178] = 0;
   out_8044105840918455214[179] = 0;
   out_8044105840918455214[180] = 0;
   out_8044105840918455214[181] = 0;
   out_8044105840918455214[182] = 0;
   out_8044105840918455214[183] = 0;
   out_8044105840918455214[184] = 0;
   out_8044105840918455214[185] = 0;
   out_8044105840918455214[186] = 0;
   out_8044105840918455214[187] = 0;
   out_8044105840918455214[188] = 0;
   out_8044105840918455214[189] = 0;
   out_8044105840918455214[190] = 0;
   out_8044105840918455214[191] = 0;
   out_8044105840918455214[192] = 0;
   out_8044105840918455214[193] = 0;
   out_8044105840918455214[194] = 0;
   out_8044105840918455214[195] = 0;
   out_8044105840918455214[196] = 0;
   out_8044105840918455214[197] = 1.0;
   out_8044105840918455214[198] = 0;
   out_8044105840918455214[199] = 0;
   out_8044105840918455214[200] = 0;
   out_8044105840918455214[201] = 0;
   out_8044105840918455214[202] = 0;
   out_8044105840918455214[203] = 0;
   out_8044105840918455214[204] = 0;
   out_8044105840918455214[205] = 0;
   out_8044105840918455214[206] = 0;
   out_8044105840918455214[207] = 0;
   out_8044105840918455214[208] = 0;
   out_8044105840918455214[209] = 0;
   out_8044105840918455214[210] = 0;
   out_8044105840918455214[211] = 0;
   out_8044105840918455214[212] = 0;
   out_8044105840918455214[213] = 0;
   out_8044105840918455214[214] = 0;
   out_8044105840918455214[215] = 0;
   out_8044105840918455214[216] = 0;
   out_8044105840918455214[217] = 0;
   out_8044105840918455214[218] = 0;
   out_8044105840918455214[219] = 1.0;
   out_8044105840918455214[220] = 0;
   out_8044105840918455214[221] = 0;
   out_8044105840918455214[222] = 0;
   out_8044105840918455214[223] = 0;
   out_8044105840918455214[224] = 0;
   out_8044105840918455214[225] = 0;
   out_8044105840918455214[226] = 0;
   out_8044105840918455214[227] = 0;
   out_8044105840918455214[228] = 0;
   out_8044105840918455214[229] = 0;
   out_8044105840918455214[230] = 0;
   out_8044105840918455214[231] = 0;
   out_8044105840918455214[232] = 0;
   out_8044105840918455214[233] = 0;
   out_8044105840918455214[234] = 0;
   out_8044105840918455214[235] = 0;
   out_8044105840918455214[236] = 0;
   out_8044105840918455214[237] = 0;
   out_8044105840918455214[238] = 0;
   out_8044105840918455214[239] = 0;
   out_8044105840918455214[240] = 0;
   out_8044105840918455214[241] = 1.0;
   out_8044105840918455214[242] = 0;
   out_8044105840918455214[243] = 0;
   out_8044105840918455214[244] = 0;
   out_8044105840918455214[245] = 0;
   out_8044105840918455214[246] = 0;
   out_8044105840918455214[247] = 0;
   out_8044105840918455214[248] = 0;
   out_8044105840918455214[249] = 0;
   out_8044105840918455214[250] = 0;
   out_8044105840918455214[251] = 0;
   out_8044105840918455214[252] = 0;
   out_8044105840918455214[253] = 0;
   out_8044105840918455214[254] = 0;
   out_8044105840918455214[255] = 0;
   out_8044105840918455214[256] = 0;
   out_8044105840918455214[257] = 0;
   out_8044105840918455214[258] = 0;
   out_8044105840918455214[259] = 0;
   out_8044105840918455214[260] = 0;
   out_8044105840918455214[261] = 0;
   out_8044105840918455214[262] = 0;
   out_8044105840918455214[263] = 1.0;
   out_8044105840918455214[264] = 0;
   out_8044105840918455214[265] = 0;
   out_8044105840918455214[266] = 0;
   out_8044105840918455214[267] = 0;
   out_8044105840918455214[268] = 0;
   out_8044105840918455214[269] = 0;
   out_8044105840918455214[270] = 0;
   out_8044105840918455214[271] = 0;
   out_8044105840918455214[272] = 0;
   out_8044105840918455214[273] = 0;
   out_8044105840918455214[274] = 0;
   out_8044105840918455214[275] = 0;
   out_8044105840918455214[276] = 0;
   out_8044105840918455214[277] = 0;
   out_8044105840918455214[278] = 0;
   out_8044105840918455214[279] = 0;
   out_8044105840918455214[280] = 0;
   out_8044105840918455214[281] = 0;
   out_8044105840918455214[282] = 0;
   out_8044105840918455214[283] = 0;
   out_8044105840918455214[284] = 0;
   out_8044105840918455214[285] = 1.0;
   out_8044105840918455214[286] = 0;
   out_8044105840918455214[287] = 0;
   out_8044105840918455214[288] = 0;
   out_8044105840918455214[289] = 0;
   out_8044105840918455214[290] = 0;
   out_8044105840918455214[291] = 0;
   out_8044105840918455214[292] = 0;
   out_8044105840918455214[293] = 0;
   out_8044105840918455214[294] = 0;
   out_8044105840918455214[295] = 0;
   out_8044105840918455214[296] = 0;
   out_8044105840918455214[297] = 0;
   out_8044105840918455214[298] = 0;
   out_8044105840918455214[299] = 0;
   out_8044105840918455214[300] = 0;
   out_8044105840918455214[301] = 0;
   out_8044105840918455214[302] = 0;
   out_8044105840918455214[303] = 0;
   out_8044105840918455214[304] = 0;
   out_8044105840918455214[305] = 0;
   out_8044105840918455214[306] = 0;
   out_8044105840918455214[307] = 1.0;
   out_8044105840918455214[308] = 0;
   out_8044105840918455214[309] = 0;
   out_8044105840918455214[310] = 0;
   out_8044105840918455214[311] = 0;
   out_8044105840918455214[312] = 0;
   out_8044105840918455214[313] = 0;
   out_8044105840918455214[314] = 0;
   out_8044105840918455214[315] = 0;
   out_8044105840918455214[316] = 0;
   out_8044105840918455214[317] = 0;
   out_8044105840918455214[318] = 0;
   out_8044105840918455214[319] = 0;
   out_8044105840918455214[320] = 0;
   out_8044105840918455214[321] = 0;
   out_8044105840918455214[322] = 0;
   out_8044105840918455214[323] = 0;
   out_8044105840918455214[324] = 0;
   out_8044105840918455214[325] = 0;
   out_8044105840918455214[326] = 0;
   out_8044105840918455214[327] = 0;
   out_8044105840918455214[328] = 0;
   out_8044105840918455214[329] = 1.0;
   out_8044105840918455214[330] = 0;
   out_8044105840918455214[331] = 0;
   out_8044105840918455214[332] = 0;
   out_8044105840918455214[333] = 0;
   out_8044105840918455214[334] = 0;
   out_8044105840918455214[335] = 0;
   out_8044105840918455214[336] = 0;
   out_8044105840918455214[337] = 0;
   out_8044105840918455214[338] = 0;
   out_8044105840918455214[339] = 0;
   out_8044105840918455214[340] = 0;
   out_8044105840918455214[341] = 0;
   out_8044105840918455214[342] = 0;
   out_8044105840918455214[343] = 0;
   out_8044105840918455214[344] = 0;
   out_8044105840918455214[345] = 0;
   out_8044105840918455214[346] = 0;
   out_8044105840918455214[347] = 0;
   out_8044105840918455214[348] = 0;
   out_8044105840918455214[349] = 0;
   out_8044105840918455214[350] = 0;
   out_8044105840918455214[351] = 1.0;
   out_8044105840918455214[352] = 0;
   out_8044105840918455214[353] = 0;
   out_8044105840918455214[354] = 0;
   out_8044105840918455214[355] = 0;
   out_8044105840918455214[356] = 0;
   out_8044105840918455214[357] = 0;
   out_8044105840918455214[358] = 0;
   out_8044105840918455214[359] = 0;
   out_8044105840918455214[360] = 0;
   out_8044105840918455214[361] = 0;
   out_8044105840918455214[362] = 0;
   out_8044105840918455214[363] = 0;
   out_8044105840918455214[364] = 0;
   out_8044105840918455214[365] = 0;
   out_8044105840918455214[366] = 0;
   out_8044105840918455214[367] = 0;
   out_8044105840918455214[368] = 0;
   out_8044105840918455214[369] = 0;
   out_8044105840918455214[370] = 0;
   out_8044105840918455214[371] = 0;
   out_8044105840918455214[372] = 0;
   out_8044105840918455214[373] = 1.0;
   out_8044105840918455214[374] = 0;
   out_8044105840918455214[375] = 0;
   out_8044105840918455214[376] = 0;
   out_8044105840918455214[377] = 0;
   out_8044105840918455214[378] = 0;
   out_8044105840918455214[379] = 0;
   out_8044105840918455214[380] = 0;
   out_8044105840918455214[381] = 0;
   out_8044105840918455214[382] = 0;
   out_8044105840918455214[383] = 0;
   out_8044105840918455214[384] = 0;
   out_8044105840918455214[385] = 0;
   out_8044105840918455214[386] = 0;
   out_8044105840918455214[387] = 0;
   out_8044105840918455214[388] = 0;
   out_8044105840918455214[389] = 0;
   out_8044105840918455214[390] = 0;
   out_8044105840918455214[391] = 0;
   out_8044105840918455214[392] = 0;
   out_8044105840918455214[393] = 0;
   out_8044105840918455214[394] = 0;
   out_8044105840918455214[395] = 1.0;
   out_8044105840918455214[396] = 0;
   out_8044105840918455214[397] = 0;
   out_8044105840918455214[398] = 0;
   out_8044105840918455214[399] = 0;
   out_8044105840918455214[400] = 0;
   out_8044105840918455214[401] = 0;
   out_8044105840918455214[402] = 0;
   out_8044105840918455214[403] = 0;
   out_8044105840918455214[404] = 0;
   out_8044105840918455214[405] = 0;
   out_8044105840918455214[406] = 0;
   out_8044105840918455214[407] = 0;
   out_8044105840918455214[408] = 0;
   out_8044105840918455214[409] = 0;
   out_8044105840918455214[410] = 0;
   out_8044105840918455214[411] = 0;
   out_8044105840918455214[412] = 0;
   out_8044105840918455214[413] = 0;
   out_8044105840918455214[414] = 0;
   out_8044105840918455214[415] = 0;
   out_8044105840918455214[416] = 0;
   out_8044105840918455214[417] = 1.0;
   out_8044105840918455214[418] = 0;
   out_8044105840918455214[419] = 0;
   out_8044105840918455214[420] = 0;
   out_8044105840918455214[421] = 0;
   out_8044105840918455214[422] = 0;
   out_8044105840918455214[423] = 0;
   out_8044105840918455214[424] = 0;
   out_8044105840918455214[425] = 0;
   out_8044105840918455214[426] = 0;
   out_8044105840918455214[427] = 0;
   out_8044105840918455214[428] = 0;
   out_8044105840918455214[429] = 0;
   out_8044105840918455214[430] = 0;
   out_8044105840918455214[431] = 0;
   out_8044105840918455214[432] = 0;
   out_8044105840918455214[433] = 0;
   out_8044105840918455214[434] = 0;
   out_8044105840918455214[435] = 0;
   out_8044105840918455214[436] = 0;
   out_8044105840918455214[437] = 0;
   out_8044105840918455214[438] = 0;
   out_8044105840918455214[439] = 1.0;
   out_8044105840918455214[440] = 0;
   out_8044105840918455214[441] = 0;
   out_8044105840918455214[442] = 0;
   out_8044105840918455214[443] = 0;
   out_8044105840918455214[444] = 0;
   out_8044105840918455214[445] = 0;
   out_8044105840918455214[446] = 0;
   out_8044105840918455214[447] = 0;
   out_8044105840918455214[448] = 0;
   out_8044105840918455214[449] = 0;
   out_8044105840918455214[450] = 0;
   out_8044105840918455214[451] = 0;
   out_8044105840918455214[452] = 0;
   out_8044105840918455214[453] = 0;
   out_8044105840918455214[454] = 0;
   out_8044105840918455214[455] = 0;
   out_8044105840918455214[456] = 0;
   out_8044105840918455214[457] = 0;
   out_8044105840918455214[458] = 0;
   out_8044105840918455214[459] = 0;
   out_8044105840918455214[460] = 0;
   out_8044105840918455214[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7878857156988566531) {
   out_7878857156988566531[0] = dt*state[7] + state[0];
   out_7878857156988566531[1] = dt*state[8] + state[1];
   out_7878857156988566531[2] = dt*state[9] + state[2];
   out_7878857156988566531[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7878857156988566531[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7878857156988566531[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7878857156988566531[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7878857156988566531[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7878857156988566531[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7878857156988566531[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7878857156988566531[10] = state[10];
   out_7878857156988566531[11] = state[11];
   out_7878857156988566531[12] = state[12];
   out_7878857156988566531[13] = state[13];
   out_7878857156988566531[14] = state[14];
   out_7878857156988566531[15] = state[15];
   out_7878857156988566531[16] = state[16];
   out_7878857156988566531[17] = state[17];
   out_7878857156988566531[18] = state[18];
   out_7878857156988566531[19] = state[19];
   out_7878857156988566531[20] = state[20];
   out_7878857156988566531[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7860804367873125575) {
   out_7860804367873125575[0] = 1;
   out_7860804367873125575[1] = 0;
   out_7860804367873125575[2] = 0;
   out_7860804367873125575[3] = 0;
   out_7860804367873125575[4] = 0;
   out_7860804367873125575[5] = 0;
   out_7860804367873125575[6] = dt;
   out_7860804367873125575[7] = 0;
   out_7860804367873125575[8] = 0;
   out_7860804367873125575[9] = 0;
   out_7860804367873125575[10] = 0;
   out_7860804367873125575[11] = 0;
   out_7860804367873125575[12] = 0;
   out_7860804367873125575[13] = 0;
   out_7860804367873125575[14] = 0;
   out_7860804367873125575[15] = 0;
   out_7860804367873125575[16] = 0;
   out_7860804367873125575[17] = 0;
   out_7860804367873125575[18] = 0;
   out_7860804367873125575[19] = 0;
   out_7860804367873125575[20] = 0;
   out_7860804367873125575[21] = 0;
   out_7860804367873125575[22] = 1;
   out_7860804367873125575[23] = 0;
   out_7860804367873125575[24] = 0;
   out_7860804367873125575[25] = 0;
   out_7860804367873125575[26] = 0;
   out_7860804367873125575[27] = 0;
   out_7860804367873125575[28] = dt;
   out_7860804367873125575[29] = 0;
   out_7860804367873125575[30] = 0;
   out_7860804367873125575[31] = 0;
   out_7860804367873125575[32] = 0;
   out_7860804367873125575[33] = 0;
   out_7860804367873125575[34] = 0;
   out_7860804367873125575[35] = 0;
   out_7860804367873125575[36] = 0;
   out_7860804367873125575[37] = 0;
   out_7860804367873125575[38] = 0;
   out_7860804367873125575[39] = 0;
   out_7860804367873125575[40] = 0;
   out_7860804367873125575[41] = 0;
   out_7860804367873125575[42] = 0;
   out_7860804367873125575[43] = 0;
   out_7860804367873125575[44] = 1;
   out_7860804367873125575[45] = 0;
   out_7860804367873125575[46] = 0;
   out_7860804367873125575[47] = 0;
   out_7860804367873125575[48] = 0;
   out_7860804367873125575[49] = 0;
   out_7860804367873125575[50] = dt;
   out_7860804367873125575[51] = 0;
   out_7860804367873125575[52] = 0;
   out_7860804367873125575[53] = 0;
   out_7860804367873125575[54] = 0;
   out_7860804367873125575[55] = 0;
   out_7860804367873125575[56] = 0;
   out_7860804367873125575[57] = 0;
   out_7860804367873125575[58] = 0;
   out_7860804367873125575[59] = 0;
   out_7860804367873125575[60] = 0;
   out_7860804367873125575[61] = 0;
   out_7860804367873125575[62] = 0;
   out_7860804367873125575[63] = 0;
   out_7860804367873125575[64] = 0;
   out_7860804367873125575[65] = 0;
   out_7860804367873125575[66] = 1;
   out_7860804367873125575[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7860804367873125575[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7860804367873125575[69] = 0;
   out_7860804367873125575[70] = 0;
   out_7860804367873125575[71] = 0;
   out_7860804367873125575[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7860804367873125575[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7860804367873125575[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7860804367873125575[75] = 0;
   out_7860804367873125575[76] = 0;
   out_7860804367873125575[77] = 0;
   out_7860804367873125575[78] = 0;
   out_7860804367873125575[79] = 0;
   out_7860804367873125575[80] = 0;
   out_7860804367873125575[81] = 0;
   out_7860804367873125575[82] = 0;
   out_7860804367873125575[83] = 0;
   out_7860804367873125575[84] = 0;
   out_7860804367873125575[85] = 0;
   out_7860804367873125575[86] = 0;
   out_7860804367873125575[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7860804367873125575[88] = 1;
   out_7860804367873125575[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7860804367873125575[90] = 0;
   out_7860804367873125575[91] = 0;
   out_7860804367873125575[92] = 0;
   out_7860804367873125575[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7860804367873125575[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7860804367873125575[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7860804367873125575[96] = 0;
   out_7860804367873125575[97] = 0;
   out_7860804367873125575[98] = 0;
   out_7860804367873125575[99] = 0;
   out_7860804367873125575[100] = 0;
   out_7860804367873125575[101] = 0;
   out_7860804367873125575[102] = 0;
   out_7860804367873125575[103] = 0;
   out_7860804367873125575[104] = 0;
   out_7860804367873125575[105] = 0;
   out_7860804367873125575[106] = 0;
   out_7860804367873125575[107] = 0;
   out_7860804367873125575[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7860804367873125575[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7860804367873125575[110] = 1;
   out_7860804367873125575[111] = 0;
   out_7860804367873125575[112] = 0;
   out_7860804367873125575[113] = 0;
   out_7860804367873125575[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7860804367873125575[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7860804367873125575[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7860804367873125575[117] = 0;
   out_7860804367873125575[118] = 0;
   out_7860804367873125575[119] = 0;
   out_7860804367873125575[120] = 0;
   out_7860804367873125575[121] = 0;
   out_7860804367873125575[122] = 0;
   out_7860804367873125575[123] = 0;
   out_7860804367873125575[124] = 0;
   out_7860804367873125575[125] = 0;
   out_7860804367873125575[126] = 0;
   out_7860804367873125575[127] = 0;
   out_7860804367873125575[128] = 0;
   out_7860804367873125575[129] = 0;
   out_7860804367873125575[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7860804367873125575[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7860804367873125575[132] = 1;
   out_7860804367873125575[133] = 0;
   out_7860804367873125575[134] = 0;
   out_7860804367873125575[135] = 0;
   out_7860804367873125575[136] = 0;
   out_7860804367873125575[137] = 0;
   out_7860804367873125575[138] = 0;
   out_7860804367873125575[139] = 0;
   out_7860804367873125575[140] = 0;
   out_7860804367873125575[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7860804367873125575[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7860804367873125575[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7860804367873125575[144] = 0;
   out_7860804367873125575[145] = 0;
   out_7860804367873125575[146] = 0;
   out_7860804367873125575[147] = 0;
   out_7860804367873125575[148] = 0;
   out_7860804367873125575[149] = 0;
   out_7860804367873125575[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7860804367873125575[151] = 0;
   out_7860804367873125575[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7860804367873125575[153] = 0;
   out_7860804367873125575[154] = 1;
   out_7860804367873125575[155] = 0;
   out_7860804367873125575[156] = 0;
   out_7860804367873125575[157] = 0;
   out_7860804367873125575[158] = 0;
   out_7860804367873125575[159] = 0;
   out_7860804367873125575[160] = 0;
   out_7860804367873125575[161] = 0;
   out_7860804367873125575[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7860804367873125575[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7860804367873125575[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7860804367873125575[165] = 0;
   out_7860804367873125575[166] = 0;
   out_7860804367873125575[167] = 0;
   out_7860804367873125575[168] = 0;
   out_7860804367873125575[169] = 0;
   out_7860804367873125575[170] = 0;
   out_7860804367873125575[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7860804367873125575[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7860804367873125575[173] = 0;
   out_7860804367873125575[174] = 0;
   out_7860804367873125575[175] = 0;
   out_7860804367873125575[176] = 1;
   out_7860804367873125575[177] = 0;
   out_7860804367873125575[178] = 0;
   out_7860804367873125575[179] = 0;
   out_7860804367873125575[180] = 0;
   out_7860804367873125575[181] = 0;
   out_7860804367873125575[182] = 0;
   out_7860804367873125575[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7860804367873125575[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7860804367873125575[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7860804367873125575[186] = 0;
   out_7860804367873125575[187] = 0;
   out_7860804367873125575[188] = 0;
   out_7860804367873125575[189] = 0;
   out_7860804367873125575[190] = 0;
   out_7860804367873125575[191] = 0;
   out_7860804367873125575[192] = 0;
   out_7860804367873125575[193] = 0;
   out_7860804367873125575[194] = 0;
   out_7860804367873125575[195] = 0;
   out_7860804367873125575[196] = 0;
   out_7860804367873125575[197] = 0;
   out_7860804367873125575[198] = 1;
   out_7860804367873125575[199] = 0;
   out_7860804367873125575[200] = 0;
   out_7860804367873125575[201] = 0;
   out_7860804367873125575[202] = 0;
   out_7860804367873125575[203] = 0;
   out_7860804367873125575[204] = 0;
   out_7860804367873125575[205] = 0;
   out_7860804367873125575[206] = 0;
   out_7860804367873125575[207] = 0;
   out_7860804367873125575[208] = 0;
   out_7860804367873125575[209] = 0;
   out_7860804367873125575[210] = 0;
   out_7860804367873125575[211] = 0;
   out_7860804367873125575[212] = 0;
   out_7860804367873125575[213] = 0;
   out_7860804367873125575[214] = 0;
   out_7860804367873125575[215] = 0;
   out_7860804367873125575[216] = 0;
   out_7860804367873125575[217] = 0;
   out_7860804367873125575[218] = 0;
   out_7860804367873125575[219] = 0;
   out_7860804367873125575[220] = 1;
   out_7860804367873125575[221] = 0;
   out_7860804367873125575[222] = 0;
   out_7860804367873125575[223] = 0;
   out_7860804367873125575[224] = 0;
   out_7860804367873125575[225] = 0;
   out_7860804367873125575[226] = 0;
   out_7860804367873125575[227] = 0;
   out_7860804367873125575[228] = 0;
   out_7860804367873125575[229] = 0;
   out_7860804367873125575[230] = 0;
   out_7860804367873125575[231] = 0;
   out_7860804367873125575[232] = 0;
   out_7860804367873125575[233] = 0;
   out_7860804367873125575[234] = 0;
   out_7860804367873125575[235] = 0;
   out_7860804367873125575[236] = 0;
   out_7860804367873125575[237] = 0;
   out_7860804367873125575[238] = 0;
   out_7860804367873125575[239] = 0;
   out_7860804367873125575[240] = 0;
   out_7860804367873125575[241] = 0;
   out_7860804367873125575[242] = 1;
   out_7860804367873125575[243] = 0;
   out_7860804367873125575[244] = 0;
   out_7860804367873125575[245] = 0;
   out_7860804367873125575[246] = 0;
   out_7860804367873125575[247] = 0;
   out_7860804367873125575[248] = 0;
   out_7860804367873125575[249] = 0;
   out_7860804367873125575[250] = 0;
   out_7860804367873125575[251] = 0;
   out_7860804367873125575[252] = 0;
   out_7860804367873125575[253] = 0;
   out_7860804367873125575[254] = 0;
   out_7860804367873125575[255] = 0;
   out_7860804367873125575[256] = 0;
   out_7860804367873125575[257] = 0;
   out_7860804367873125575[258] = 0;
   out_7860804367873125575[259] = 0;
   out_7860804367873125575[260] = 0;
   out_7860804367873125575[261] = 0;
   out_7860804367873125575[262] = 0;
   out_7860804367873125575[263] = 0;
   out_7860804367873125575[264] = 1;
   out_7860804367873125575[265] = 0;
   out_7860804367873125575[266] = 0;
   out_7860804367873125575[267] = 0;
   out_7860804367873125575[268] = 0;
   out_7860804367873125575[269] = 0;
   out_7860804367873125575[270] = 0;
   out_7860804367873125575[271] = 0;
   out_7860804367873125575[272] = 0;
   out_7860804367873125575[273] = 0;
   out_7860804367873125575[274] = 0;
   out_7860804367873125575[275] = 0;
   out_7860804367873125575[276] = 0;
   out_7860804367873125575[277] = 0;
   out_7860804367873125575[278] = 0;
   out_7860804367873125575[279] = 0;
   out_7860804367873125575[280] = 0;
   out_7860804367873125575[281] = 0;
   out_7860804367873125575[282] = 0;
   out_7860804367873125575[283] = 0;
   out_7860804367873125575[284] = 0;
   out_7860804367873125575[285] = 0;
   out_7860804367873125575[286] = 1;
   out_7860804367873125575[287] = 0;
   out_7860804367873125575[288] = 0;
   out_7860804367873125575[289] = 0;
   out_7860804367873125575[290] = 0;
   out_7860804367873125575[291] = 0;
   out_7860804367873125575[292] = 0;
   out_7860804367873125575[293] = 0;
   out_7860804367873125575[294] = 0;
   out_7860804367873125575[295] = 0;
   out_7860804367873125575[296] = 0;
   out_7860804367873125575[297] = 0;
   out_7860804367873125575[298] = 0;
   out_7860804367873125575[299] = 0;
   out_7860804367873125575[300] = 0;
   out_7860804367873125575[301] = 0;
   out_7860804367873125575[302] = 0;
   out_7860804367873125575[303] = 0;
   out_7860804367873125575[304] = 0;
   out_7860804367873125575[305] = 0;
   out_7860804367873125575[306] = 0;
   out_7860804367873125575[307] = 0;
   out_7860804367873125575[308] = 1;
   out_7860804367873125575[309] = 0;
   out_7860804367873125575[310] = 0;
   out_7860804367873125575[311] = 0;
   out_7860804367873125575[312] = 0;
   out_7860804367873125575[313] = 0;
   out_7860804367873125575[314] = 0;
   out_7860804367873125575[315] = 0;
   out_7860804367873125575[316] = 0;
   out_7860804367873125575[317] = 0;
   out_7860804367873125575[318] = 0;
   out_7860804367873125575[319] = 0;
   out_7860804367873125575[320] = 0;
   out_7860804367873125575[321] = 0;
   out_7860804367873125575[322] = 0;
   out_7860804367873125575[323] = 0;
   out_7860804367873125575[324] = 0;
   out_7860804367873125575[325] = 0;
   out_7860804367873125575[326] = 0;
   out_7860804367873125575[327] = 0;
   out_7860804367873125575[328] = 0;
   out_7860804367873125575[329] = 0;
   out_7860804367873125575[330] = 1;
   out_7860804367873125575[331] = 0;
   out_7860804367873125575[332] = 0;
   out_7860804367873125575[333] = 0;
   out_7860804367873125575[334] = 0;
   out_7860804367873125575[335] = 0;
   out_7860804367873125575[336] = 0;
   out_7860804367873125575[337] = 0;
   out_7860804367873125575[338] = 0;
   out_7860804367873125575[339] = 0;
   out_7860804367873125575[340] = 0;
   out_7860804367873125575[341] = 0;
   out_7860804367873125575[342] = 0;
   out_7860804367873125575[343] = 0;
   out_7860804367873125575[344] = 0;
   out_7860804367873125575[345] = 0;
   out_7860804367873125575[346] = 0;
   out_7860804367873125575[347] = 0;
   out_7860804367873125575[348] = 0;
   out_7860804367873125575[349] = 0;
   out_7860804367873125575[350] = 0;
   out_7860804367873125575[351] = 0;
   out_7860804367873125575[352] = 1;
   out_7860804367873125575[353] = 0;
   out_7860804367873125575[354] = 0;
   out_7860804367873125575[355] = 0;
   out_7860804367873125575[356] = 0;
   out_7860804367873125575[357] = 0;
   out_7860804367873125575[358] = 0;
   out_7860804367873125575[359] = 0;
   out_7860804367873125575[360] = 0;
   out_7860804367873125575[361] = 0;
   out_7860804367873125575[362] = 0;
   out_7860804367873125575[363] = 0;
   out_7860804367873125575[364] = 0;
   out_7860804367873125575[365] = 0;
   out_7860804367873125575[366] = 0;
   out_7860804367873125575[367] = 0;
   out_7860804367873125575[368] = 0;
   out_7860804367873125575[369] = 0;
   out_7860804367873125575[370] = 0;
   out_7860804367873125575[371] = 0;
   out_7860804367873125575[372] = 0;
   out_7860804367873125575[373] = 0;
   out_7860804367873125575[374] = 1;
   out_7860804367873125575[375] = 0;
   out_7860804367873125575[376] = 0;
   out_7860804367873125575[377] = 0;
   out_7860804367873125575[378] = 0;
   out_7860804367873125575[379] = 0;
   out_7860804367873125575[380] = 0;
   out_7860804367873125575[381] = 0;
   out_7860804367873125575[382] = 0;
   out_7860804367873125575[383] = 0;
   out_7860804367873125575[384] = 0;
   out_7860804367873125575[385] = 0;
   out_7860804367873125575[386] = 0;
   out_7860804367873125575[387] = 0;
   out_7860804367873125575[388] = 0;
   out_7860804367873125575[389] = 0;
   out_7860804367873125575[390] = 0;
   out_7860804367873125575[391] = 0;
   out_7860804367873125575[392] = 0;
   out_7860804367873125575[393] = 0;
   out_7860804367873125575[394] = 0;
   out_7860804367873125575[395] = 0;
   out_7860804367873125575[396] = 1;
   out_7860804367873125575[397] = 0;
   out_7860804367873125575[398] = 0;
   out_7860804367873125575[399] = 0;
   out_7860804367873125575[400] = 0;
   out_7860804367873125575[401] = 0;
   out_7860804367873125575[402] = 0;
   out_7860804367873125575[403] = 0;
   out_7860804367873125575[404] = 0;
   out_7860804367873125575[405] = 0;
   out_7860804367873125575[406] = 0;
   out_7860804367873125575[407] = 0;
   out_7860804367873125575[408] = 0;
   out_7860804367873125575[409] = 0;
   out_7860804367873125575[410] = 0;
   out_7860804367873125575[411] = 0;
   out_7860804367873125575[412] = 0;
   out_7860804367873125575[413] = 0;
   out_7860804367873125575[414] = 0;
   out_7860804367873125575[415] = 0;
   out_7860804367873125575[416] = 0;
   out_7860804367873125575[417] = 0;
   out_7860804367873125575[418] = 1;
   out_7860804367873125575[419] = 0;
   out_7860804367873125575[420] = 0;
   out_7860804367873125575[421] = 0;
   out_7860804367873125575[422] = 0;
   out_7860804367873125575[423] = 0;
   out_7860804367873125575[424] = 0;
   out_7860804367873125575[425] = 0;
   out_7860804367873125575[426] = 0;
   out_7860804367873125575[427] = 0;
   out_7860804367873125575[428] = 0;
   out_7860804367873125575[429] = 0;
   out_7860804367873125575[430] = 0;
   out_7860804367873125575[431] = 0;
   out_7860804367873125575[432] = 0;
   out_7860804367873125575[433] = 0;
   out_7860804367873125575[434] = 0;
   out_7860804367873125575[435] = 0;
   out_7860804367873125575[436] = 0;
   out_7860804367873125575[437] = 0;
   out_7860804367873125575[438] = 0;
   out_7860804367873125575[439] = 0;
   out_7860804367873125575[440] = 1;
}
void h_4(double *state, double *unused, double *out_8110659987197455788) {
   out_8110659987197455788[0] = state[10] + state[13];
   out_8110659987197455788[1] = state[11] + state[14];
   out_8110659987197455788[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3962229937409009016) {
   out_3962229937409009016[0] = 0;
   out_3962229937409009016[1] = 0;
   out_3962229937409009016[2] = 0;
   out_3962229937409009016[3] = 0;
   out_3962229937409009016[4] = 0;
   out_3962229937409009016[5] = 0;
   out_3962229937409009016[6] = 0;
   out_3962229937409009016[7] = 0;
   out_3962229937409009016[8] = 0;
   out_3962229937409009016[9] = 0;
   out_3962229937409009016[10] = 1;
   out_3962229937409009016[11] = 0;
   out_3962229937409009016[12] = 0;
   out_3962229937409009016[13] = 1;
   out_3962229937409009016[14] = 0;
   out_3962229937409009016[15] = 0;
   out_3962229937409009016[16] = 0;
   out_3962229937409009016[17] = 0;
   out_3962229937409009016[18] = 0;
   out_3962229937409009016[19] = 0;
   out_3962229937409009016[20] = 0;
   out_3962229937409009016[21] = 0;
   out_3962229937409009016[22] = 0;
   out_3962229937409009016[23] = 0;
   out_3962229937409009016[24] = 0;
   out_3962229937409009016[25] = 0;
   out_3962229937409009016[26] = 0;
   out_3962229937409009016[27] = 0;
   out_3962229937409009016[28] = 0;
   out_3962229937409009016[29] = 0;
   out_3962229937409009016[30] = 0;
   out_3962229937409009016[31] = 0;
   out_3962229937409009016[32] = 0;
   out_3962229937409009016[33] = 1;
   out_3962229937409009016[34] = 0;
   out_3962229937409009016[35] = 0;
   out_3962229937409009016[36] = 1;
   out_3962229937409009016[37] = 0;
   out_3962229937409009016[38] = 0;
   out_3962229937409009016[39] = 0;
   out_3962229937409009016[40] = 0;
   out_3962229937409009016[41] = 0;
   out_3962229937409009016[42] = 0;
   out_3962229937409009016[43] = 0;
   out_3962229937409009016[44] = 0;
   out_3962229937409009016[45] = 0;
   out_3962229937409009016[46] = 0;
   out_3962229937409009016[47] = 0;
   out_3962229937409009016[48] = 0;
   out_3962229937409009016[49] = 0;
   out_3962229937409009016[50] = 0;
   out_3962229937409009016[51] = 0;
   out_3962229937409009016[52] = 0;
   out_3962229937409009016[53] = 0;
   out_3962229937409009016[54] = 0;
   out_3962229937409009016[55] = 0;
   out_3962229937409009016[56] = 1;
   out_3962229937409009016[57] = 0;
   out_3962229937409009016[58] = 0;
   out_3962229937409009016[59] = 1;
   out_3962229937409009016[60] = 0;
   out_3962229937409009016[61] = 0;
   out_3962229937409009016[62] = 0;
   out_3962229937409009016[63] = 0;
   out_3962229937409009016[64] = 0;
   out_3962229937409009016[65] = 0;
}
void h_9(double *state, double *unused, double *out_6611330330362697541) {
   out_6611330330362697541[0] = state[10];
   out_6611330330362697541[1] = state[11];
   out_6611330330362697541[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7197295201036095130) {
   out_7197295201036095130[0] = 0;
   out_7197295201036095130[1] = 0;
   out_7197295201036095130[2] = 0;
   out_7197295201036095130[3] = 0;
   out_7197295201036095130[4] = 0;
   out_7197295201036095130[5] = 0;
   out_7197295201036095130[6] = 0;
   out_7197295201036095130[7] = 0;
   out_7197295201036095130[8] = 0;
   out_7197295201036095130[9] = 0;
   out_7197295201036095130[10] = 1;
   out_7197295201036095130[11] = 0;
   out_7197295201036095130[12] = 0;
   out_7197295201036095130[13] = 0;
   out_7197295201036095130[14] = 0;
   out_7197295201036095130[15] = 0;
   out_7197295201036095130[16] = 0;
   out_7197295201036095130[17] = 0;
   out_7197295201036095130[18] = 0;
   out_7197295201036095130[19] = 0;
   out_7197295201036095130[20] = 0;
   out_7197295201036095130[21] = 0;
   out_7197295201036095130[22] = 0;
   out_7197295201036095130[23] = 0;
   out_7197295201036095130[24] = 0;
   out_7197295201036095130[25] = 0;
   out_7197295201036095130[26] = 0;
   out_7197295201036095130[27] = 0;
   out_7197295201036095130[28] = 0;
   out_7197295201036095130[29] = 0;
   out_7197295201036095130[30] = 0;
   out_7197295201036095130[31] = 0;
   out_7197295201036095130[32] = 0;
   out_7197295201036095130[33] = 1;
   out_7197295201036095130[34] = 0;
   out_7197295201036095130[35] = 0;
   out_7197295201036095130[36] = 0;
   out_7197295201036095130[37] = 0;
   out_7197295201036095130[38] = 0;
   out_7197295201036095130[39] = 0;
   out_7197295201036095130[40] = 0;
   out_7197295201036095130[41] = 0;
   out_7197295201036095130[42] = 0;
   out_7197295201036095130[43] = 0;
   out_7197295201036095130[44] = 0;
   out_7197295201036095130[45] = 0;
   out_7197295201036095130[46] = 0;
   out_7197295201036095130[47] = 0;
   out_7197295201036095130[48] = 0;
   out_7197295201036095130[49] = 0;
   out_7197295201036095130[50] = 0;
   out_7197295201036095130[51] = 0;
   out_7197295201036095130[52] = 0;
   out_7197295201036095130[53] = 0;
   out_7197295201036095130[54] = 0;
   out_7197295201036095130[55] = 0;
   out_7197295201036095130[56] = 1;
   out_7197295201036095130[57] = 0;
   out_7197295201036095130[58] = 0;
   out_7197295201036095130[59] = 0;
   out_7197295201036095130[60] = 0;
   out_7197295201036095130[61] = 0;
   out_7197295201036095130[62] = 0;
   out_7197295201036095130[63] = 0;
   out_7197295201036095130[64] = 0;
   out_7197295201036095130[65] = 0;
}
void h_10(double *state, double *unused, double *out_3405989874012051555) {
   out_3405989874012051555[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3405989874012051555[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3405989874012051555[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5691276471454773343) {
   out_5691276471454773343[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5691276471454773343[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5691276471454773343[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5691276471454773343[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5691276471454773343[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5691276471454773343[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5691276471454773343[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5691276471454773343[7] = 0;
   out_5691276471454773343[8] = 0;
   out_5691276471454773343[9] = 0;
   out_5691276471454773343[10] = 0;
   out_5691276471454773343[11] = 0;
   out_5691276471454773343[12] = 0;
   out_5691276471454773343[13] = 0;
   out_5691276471454773343[14] = 0;
   out_5691276471454773343[15] = 0;
   out_5691276471454773343[16] = 1;
   out_5691276471454773343[17] = 0;
   out_5691276471454773343[18] = 0;
   out_5691276471454773343[19] = 1;
   out_5691276471454773343[20] = 0;
   out_5691276471454773343[21] = 0;
   out_5691276471454773343[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5691276471454773343[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5691276471454773343[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5691276471454773343[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5691276471454773343[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5691276471454773343[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5691276471454773343[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5691276471454773343[29] = 0;
   out_5691276471454773343[30] = 0;
   out_5691276471454773343[31] = 0;
   out_5691276471454773343[32] = 0;
   out_5691276471454773343[33] = 0;
   out_5691276471454773343[34] = 0;
   out_5691276471454773343[35] = 0;
   out_5691276471454773343[36] = 0;
   out_5691276471454773343[37] = 0;
   out_5691276471454773343[38] = 0;
   out_5691276471454773343[39] = 1;
   out_5691276471454773343[40] = 0;
   out_5691276471454773343[41] = 0;
   out_5691276471454773343[42] = 1;
   out_5691276471454773343[43] = 0;
   out_5691276471454773343[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5691276471454773343[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5691276471454773343[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5691276471454773343[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5691276471454773343[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5691276471454773343[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5691276471454773343[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5691276471454773343[51] = 0;
   out_5691276471454773343[52] = 0;
   out_5691276471454773343[53] = 0;
   out_5691276471454773343[54] = 0;
   out_5691276471454773343[55] = 0;
   out_5691276471454773343[56] = 0;
   out_5691276471454773343[57] = 0;
   out_5691276471454773343[58] = 0;
   out_5691276471454773343[59] = 0;
   out_5691276471454773343[60] = 0;
   out_5691276471454773343[61] = 0;
   out_5691276471454773343[62] = 1;
   out_5691276471454773343[63] = 0;
   out_5691276471454773343[64] = 0;
   out_5691276471454773343[65] = 1;
}
void h_12(double *state, double *unused, double *out_1745573603744563952) {
   out_1745573603744563952[0] = state[0];
   out_1745573603744563952[1] = state[1];
   out_1745573603744563952[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2419028439633723980) {
   out_2419028439633723980[0] = 1;
   out_2419028439633723980[1] = 0;
   out_2419028439633723980[2] = 0;
   out_2419028439633723980[3] = 0;
   out_2419028439633723980[4] = 0;
   out_2419028439633723980[5] = 0;
   out_2419028439633723980[6] = 0;
   out_2419028439633723980[7] = 0;
   out_2419028439633723980[8] = 0;
   out_2419028439633723980[9] = 0;
   out_2419028439633723980[10] = 0;
   out_2419028439633723980[11] = 0;
   out_2419028439633723980[12] = 0;
   out_2419028439633723980[13] = 0;
   out_2419028439633723980[14] = 0;
   out_2419028439633723980[15] = 0;
   out_2419028439633723980[16] = 0;
   out_2419028439633723980[17] = 0;
   out_2419028439633723980[18] = 0;
   out_2419028439633723980[19] = 0;
   out_2419028439633723980[20] = 0;
   out_2419028439633723980[21] = 0;
   out_2419028439633723980[22] = 0;
   out_2419028439633723980[23] = 1;
   out_2419028439633723980[24] = 0;
   out_2419028439633723980[25] = 0;
   out_2419028439633723980[26] = 0;
   out_2419028439633723980[27] = 0;
   out_2419028439633723980[28] = 0;
   out_2419028439633723980[29] = 0;
   out_2419028439633723980[30] = 0;
   out_2419028439633723980[31] = 0;
   out_2419028439633723980[32] = 0;
   out_2419028439633723980[33] = 0;
   out_2419028439633723980[34] = 0;
   out_2419028439633723980[35] = 0;
   out_2419028439633723980[36] = 0;
   out_2419028439633723980[37] = 0;
   out_2419028439633723980[38] = 0;
   out_2419028439633723980[39] = 0;
   out_2419028439633723980[40] = 0;
   out_2419028439633723980[41] = 0;
   out_2419028439633723980[42] = 0;
   out_2419028439633723980[43] = 0;
   out_2419028439633723980[44] = 0;
   out_2419028439633723980[45] = 0;
   out_2419028439633723980[46] = 1;
   out_2419028439633723980[47] = 0;
   out_2419028439633723980[48] = 0;
   out_2419028439633723980[49] = 0;
   out_2419028439633723980[50] = 0;
   out_2419028439633723980[51] = 0;
   out_2419028439633723980[52] = 0;
   out_2419028439633723980[53] = 0;
   out_2419028439633723980[54] = 0;
   out_2419028439633723980[55] = 0;
   out_2419028439633723980[56] = 0;
   out_2419028439633723980[57] = 0;
   out_2419028439633723980[58] = 0;
   out_2419028439633723980[59] = 0;
   out_2419028439633723980[60] = 0;
   out_2419028439633723980[61] = 0;
   out_2419028439633723980[62] = 0;
   out_2419028439633723980[63] = 0;
   out_2419028439633723980[64] = 0;
   out_2419028439633723980[65] = 0;
}
void h_35(double *state, double *unused, double *out_2242375180930933540) {
   out_2242375180930933540[0] = state[7];
   out_2242375180930933540[1] = state[8];
   out_2242375180930933540[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4071822790293078399) {
   out_4071822790293078399[0] = 0;
   out_4071822790293078399[1] = 0;
   out_4071822790293078399[2] = 0;
   out_4071822790293078399[3] = 0;
   out_4071822790293078399[4] = 0;
   out_4071822790293078399[5] = 0;
   out_4071822790293078399[6] = 0;
   out_4071822790293078399[7] = 1;
   out_4071822790293078399[8] = 0;
   out_4071822790293078399[9] = 0;
   out_4071822790293078399[10] = 0;
   out_4071822790293078399[11] = 0;
   out_4071822790293078399[12] = 0;
   out_4071822790293078399[13] = 0;
   out_4071822790293078399[14] = 0;
   out_4071822790293078399[15] = 0;
   out_4071822790293078399[16] = 0;
   out_4071822790293078399[17] = 0;
   out_4071822790293078399[18] = 0;
   out_4071822790293078399[19] = 0;
   out_4071822790293078399[20] = 0;
   out_4071822790293078399[21] = 0;
   out_4071822790293078399[22] = 0;
   out_4071822790293078399[23] = 0;
   out_4071822790293078399[24] = 0;
   out_4071822790293078399[25] = 0;
   out_4071822790293078399[26] = 0;
   out_4071822790293078399[27] = 0;
   out_4071822790293078399[28] = 0;
   out_4071822790293078399[29] = 0;
   out_4071822790293078399[30] = 1;
   out_4071822790293078399[31] = 0;
   out_4071822790293078399[32] = 0;
   out_4071822790293078399[33] = 0;
   out_4071822790293078399[34] = 0;
   out_4071822790293078399[35] = 0;
   out_4071822790293078399[36] = 0;
   out_4071822790293078399[37] = 0;
   out_4071822790293078399[38] = 0;
   out_4071822790293078399[39] = 0;
   out_4071822790293078399[40] = 0;
   out_4071822790293078399[41] = 0;
   out_4071822790293078399[42] = 0;
   out_4071822790293078399[43] = 0;
   out_4071822790293078399[44] = 0;
   out_4071822790293078399[45] = 0;
   out_4071822790293078399[46] = 0;
   out_4071822790293078399[47] = 0;
   out_4071822790293078399[48] = 0;
   out_4071822790293078399[49] = 0;
   out_4071822790293078399[50] = 0;
   out_4071822790293078399[51] = 0;
   out_4071822790293078399[52] = 0;
   out_4071822790293078399[53] = 1;
   out_4071822790293078399[54] = 0;
   out_4071822790293078399[55] = 0;
   out_4071822790293078399[56] = 0;
   out_4071822790293078399[57] = 0;
   out_4071822790293078399[58] = 0;
   out_4071822790293078399[59] = 0;
   out_4071822790293078399[60] = 0;
   out_4071822790293078399[61] = 0;
   out_4071822790293078399[62] = 0;
   out_4071822790293078399[63] = 0;
   out_4071822790293078399[64] = 0;
   out_4071822790293078399[65] = 0;
}
void h_32(double *state, double *unused, double *out_6989707278751510539) {
   out_6989707278751510539[0] = state[3];
   out_6989707278751510539[1] = state[4];
   out_6989707278751510539[2] = state[5];
   out_6989707278751510539[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5684052485070716790) {
   out_5684052485070716790[0] = 0;
   out_5684052485070716790[1] = 0;
   out_5684052485070716790[2] = 0;
   out_5684052485070716790[3] = 1;
   out_5684052485070716790[4] = 0;
   out_5684052485070716790[5] = 0;
   out_5684052485070716790[6] = 0;
   out_5684052485070716790[7] = 0;
   out_5684052485070716790[8] = 0;
   out_5684052485070716790[9] = 0;
   out_5684052485070716790[10] = 0;
   out_5684052485070716790[11] = 0;
   out_5684052485070716790[12] = 0;
   out_5684052485070716790[13] = 0;
   out_5684052485070716790[14] = 0;
   out_5684052485070716790[15] = 0;
   out_5684052485070716790[16] = 0;
   out_5684052485070716790[17] = 0;
   out_5684052485070716790[18] = 0;
   out_5684052485070716790[19] = 0;
   out_5684052485070716790[20] = 0;
   out_5684052485070716790[21] = 0;
   out_5684052485070716790[22] = 0;
   out_5684052485070716790[23] = 0;
   out_5684052485070716790[24] = 0;
   out_5684052485070716790[25] = 0;
   out_5684052485070716790[26] = 1;
   out_5684052485070716790[27] = 0;
   out_5684052485070716790[28] = 0;
   out_5684052485070716790[29] = 0;
   out_5684052485070716790[30] = 0;
   out_5684052485070716790[31] = 0;
   out_5684052485070716790[32] = 0;
   out_5684052485070716790[33] = 0;
   out_5684052485070716790[34] = 0;
   out_5684052485070716790[35] = 0;
   out_5684052485070716790[36] = 0;
   out_5684052485070716790[37] = 0;
   out_5684052485070716790[38] = 0;
   out_5684052485070716790[39] = 0;
   out_5684052485070716790[40] = 0;
   out_5684052485070716790[41] = 0;
   out_5684052485070716790[42] = 0;
   out_5684052485070716790[43] = 0;
   out_5684052485070716790[44] = 0;
   out_5684052485070716790[45] = 0;
   out_5684052485070716790[46] = 0;
   out_5684052485070716790[47] = 0;
   out_5684052485070716790[48] = 0;
   out_5684052485070716790[49] = 1;
   out_5684052485070716790[50] = 0;
   out_5684052485070716790[51] = 0;
   out_5684052485070716790[52] = 0;
   out_5684052485070716790[53] = 0;
   out_5684052485070716790[54] = 0;
   out_5684052485070716790[55] = 0;
   out_5684052485070716790[56] = 0;
   out_5684052485070716790[57] = 0;
   out_5684052485070716790[58] = 0;
   out_5684052485070716790[59] = 0;
   out_5684052485070716790[60] = 0;
   out_5684052485070716790[61] = 0;
   out_5684052485070716790[62] = 0;
   out_5684052485070716790[63] = 0;
   out_5684052485070716790[64] = 0;
   out_5684052485070716790[65] = 0;
   out_5684052485070716790[66] = 0;
   out_5684052485070716790[67] = 0;
   out_5684052485070716790[68] = 0;
   out_5684052485070716790[69] = 0;
   out_5684052485070716790[70] = 0;
   out_5684052485070716790[71] = 0;
   out_5684052485070716790[72] = 1;
   out_5684052485070716790[73] = 0;
   out_5684052485070716790[74] = 0;
   out_5684052485070716790[75] = 0;
   out_5684052485070716790[76] = 0;
   out_5684052485070716790[77] = 0;
   out_5684052485070716790[78] = 0;
   out_5684052485070716790[79] = 0;
   out_5684052485070716790[80] = 0;
   out_5684052485070716790[81] = 0;
   out_5684052485070716790[82] = 0;
   out_5684052485070716790[83] = 0;
   out_5684052485070716790[84] = 0;
   out_5684052485070716790[85] = 0;
   out_5684052485070716790[86] = 0;
   out_5684052485070716790[87] = 0;
}
void h_13(double *state, double *unused, double *out_9008445801239303650) {
   out_9008445801239303650[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9008445801239303650[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9008445801239303650[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4693524989663708846) {
   out_4693524989663708846[0] = 0;
   out_4693524989663708846[1] = 0;
   out_4693524989663708846[2] = 0;
   out_4693524989663708846[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4693524989663708846[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4693524989663708846[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4693524989663708846[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4693524989663708846[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4693524989663708846[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4693524989663708846[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4693524989663708846[10] = 0;
   out_4693524989663708846[11] = 0;
   out_4693524989663708846[12] = 0;
   out_4693524989663708846[13] = 0;
   out_4693524989663708846[14] = 0;
   out_4693524989663708846[15] = 0;
   out_4693524989663708846[16] = 0;
   out_4693524989663708846[17] = 0;
   out_4693524989663708846[18] = 0;
   out_4693524989663708846[19] = 0;
   out_4693524989663708846[20] = 0;
   out_4693524989663708846[21] = 0;
   out_4693524989663708846[22] = 0;
   out_4693524989663708846[23] = 0;
   out_4693524989663708846[24] = 0;
   out_4693524989663708846[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4693524989663708846[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4693524989663708846[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4693524989663708846[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4693524989663708846[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4693524989663708846[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4693524989663708846[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4693524989663708846[32] = 0;
   out_4693524989663708846[33] = 0;
   out_4693524989663708846[34] = 0;
   out_4693524989663708846[35] = 0;
   out_4693524989663708846[36] = 0;
   out_4693524989663708846[37] = 0;
   out_4693524989663708846[38] = 0;
   out_4693524989663708846[39] = 0;
   out_4693524989663708846[40] = 0;
   out_4693524989663708846[41] = 0;
   out_4693524989663708846[42] = 0;
   out_4693524989663708846[43] = 0;
   out_4693524989663708846[44] = 0;
   out_4693524989663708846[45] = 0;
   out_4693524989663708846[46] = 0;
   out_4693524989663708846[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4693524989663708846[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4693524989663708846[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4693524989663708846[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4693524989663708846[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4693524989663708846[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4693524989663708846[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4693524989663708846[54] = 0;
   out_4693524989663708846[55] = 0;
   out_4693524989663708846[56] = 0;
   out_4693524989663708846[57] = 0;
   out_4693524989663708846[58] = 0;
   out_4693524989663708846[59] = 0;
   out_4693524989663708846[60] = 0;
   out_4693524989663708846[61] = 0;
   out_4693524989663708846[62] = 0;
   out_4693524989663708846[63] = 0;
   out_4693524989663708846[64] = 0;
   out_4693524989663708846[65] = 0;
}
void h_14(double *state, double *unused, double *out_6611330330362697541) {
   out_6611330330362697541[0] = state[10];
   out_6611330330362697541[1] = state[11];
   out_6611330330362697541[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7197295201036095130) {
   out_7197295201036095130[0] = 0;
   out_7197295201036095130[1] = 0;
   out_7197295201036095130[2] = 0;
   out_7197295201036095130[3] = 0;
   out_7197295201036095130[4] = 0;
   out_7197295201036095130[5] = 0;
   out_7197295201036095130[6] = 0;
   out_7197295201036095130[7] = 0;
   out_7197295201036095130[8] = 0;
   out_7197295201036095130[9] = 0;
   out_7197295201036095130[10] = 1;
   out_7197295201036095130[11] = 0;
   out_7197295201036095130[12] = 0;
   out_7197295201036095130[13] = 0;
   out_7197295201036095130[14] = 0;
   out_7197295201036095130[15] = 0;
   out_7197295201036095130[16] = 0;
   out_7197295201036095130[17] = 0;
   out_7197295201036095130[18] = 0;
   out_7197295201036095130[19] = 0;
   out_7197295201036095130[20] = 0;
   out_7197295201036095130[21] = 0;
   out_7197295201036095130[22] = 0;
   out_7197295201036095130[23] = 0;
   out_7197295201036095130[24] = 0;
   out_7197295201036095130[25] = 0;
   out_7197295201036095130[26] = 0;
   out_7197295201036095130[27] = 0;
   out_7197295201036095130[28] = 0;
   out_7197295201036095130[29] = 0;
   out_7197295201036095130[30] = 0;
   out_7197295201036095130[31] = 0;
   out_7197295201036095130[32] = 0;
   out_7197295201036095130[33] = 1;
   out_7197295201036095130[34] = 0;
   out_7197295201036095130[35] = 0;
   out_7197295201036095130[36] = 0;
   out_7197295201036095130[37] = 0;
   out_7197295201036095130[38] = 0;
   out_7197295201036095130[39] = 0;
   out_7197295201036095130[40] = 0;
   out_7197295201036095130[41] = 0;
   out_7197295201036095130[42] = 0;
   out_7197295201036095130[43] = 0;
   out_7197295201036095130[44] = 0;
   out_7197295201036095130[45] = 0;
   out_7197295201036095130[46] = 0;
   out_7197295201036095130[47] = 0;
   out_7197295201036095130[48] = 0;
   out_7197295201036095130[49] = 0;
   out_7197295201036095130[50] = 0;
   out_7197295201036095130[51] = 0;
   out_7197295201036095130[52] = 0;
   out_7197295201036095130[53] = 0;
   out_7197295201036095130[54] = 0;
   out_7197295201036095130[55] = 0;
   out_7197295201036095130[56] = 1;
   out_7197295201036095130[57] = 0;
   out_7197295201036095130[58] = 0;
   out_7197295201036095130[59] = 0;
   out_7197295201036095130[60] = 0;
   out_7197295201036095130[61] = 0;
   out_7197295201036095130[62] = 0;
   out_7197295201036095130[63] = 0;
   out_7197295201036095130[64] = 0;
   out_7197295201036095130[65] = 0;
}
void h_33(double *state, double *unused, double *out_168842592932288984) {
   out_168842592932288984[0] = state[16];
   out_168842592932288984[1] = state[17];
   out_168842592932288984[2] = state[18];
}
void H_33(double *state, double *unused, double *out_921265785654220795) {
   out_921265785654220795[0] = 0;
   out_921265785654220795[1] = 0;
   out_921265785654220795[2] = 0;
   out_921265785654220795[3] = 0;
   out_921265785654220795[4] = 0;
   out_921265785654220795[5] = 0;
   out_921265785654220795[6] = 0;
   out_921265785654220795[7] = 0;
   out_921265785654220795[8] = 0;
   out_921265785654220795[9] = 0;
   out_921265785654220795[10] = 0;
   out_921265785654220795[11] = 0;
   out_921265785654220795[12] = 0;
   out_921265785654220795[13] = 0;
   out_921265785654220795[14] = 0;
   out_921265785654220795[15] = 0;
   out_921265785654220795[16] = 1;
   out_921265785654220795[17] = 0;
   out_921265785654220795[18] = 0;
   out_921265785654220795[19] = 0;
   out_921265785654220795[20] = 0;
   out_921265785654220795[21] = 0;
   out_921265785654220795[22] = 0;
   out_921265785654220795[23] = 0;
   out_921265785654220795[24] = 0;
   out_921265785654220795[25] = 0;
   out_921265785654220795[26] = 0;
   out_921265785654220795[27] = 0;
   out_921265785654220795[28] = 0;
   out_921265785654220795[29] = 0;
   out_921265785654220795[30] = 0;
   out_921265785654220795[31] = 0;
   out_921265785654220795[32] = 0;
   out_921265785654220795[33] = 0;
   out_921265785654220795[34] = 0;
   out_921265785654220795[35] = 0;
   out_921265785654220795[36] = 0;
   out_921265785654220795[37] = 0;
   out_921265785654220795[38] = 0;
   out_921265785654220795[39] = 1;
   out_921265785654220795[40] = 0;
   out_921265785654220795[41] = 0;
   out_921265785654220795[42] = 0;
   out_921265785654220795[43] = 0;
   out_921265785654220795[44] = 0;
   out_921265785654220795[45] = 0;
   out_921265785654220795[46] = 0;
   out_921265785654220795[47] = 0;
   out_921265785654220795[48] = 0;
   out_921265785654220795[49] = 0;
   out_921265785654220795[50] = 0;
   out_921265785654220795[51] = 0;
   out_921265785654220795[52] = 0;
   out_921265785654220795[53] = 0;
   out_921265785654220795[54] = 0;
   out_921265785654220795[55] = 0;
   out_921265785654220795[56] = 0;
   out_921265785654220795[57] = 0;
   out_921265785654220795[58] = 0;
   out_921265785654220795[59] = 0;
   out_921265785654220795[60] = 0;
   out_921265785654220795[61] = 0;
   out_921265785654220795[62] = 1;
   out_921265785654220795[63] = 0;
   out_921265785654220795[64] = 0;
   out_921265785654220795[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2822599319381688270) {
  H(in_vec, out_2822599319381688270);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7961072857689096202) {
  err_fun(nom_x, delta_x, out_7961072857689096202);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4526548343824011490) {
  inv_err_fun(nom_x, true_x, out_4526548343824011490);
}
void live_H_mod_fun(double *state, double *out_8044105840918455214) {
  H_mod_fun(state, out_8044105840918455214);
}
void live_f_fun(double *state, double dt, double *out_7878857156988566531) {
  f_fun(state,  dt, out_7878857156988566531);
}
void live_F_fun(double *state, double dt, double *out_7860804367873125575) {
  F_fun(state,  dt, out_7860804367873125575);
}
void live_h_4(double *state, double *unused, double *out_8110659987197455788) {
  h_4(state, unused, out_8110659987197455788);
}
void live_H_4(double *state, double *unused, double *out_3962229937409009016) {
  H_4(state, unused, out_3962229937409009016);
}
void live_h_9(double *state, double *unused, double *out_6611330330362697541) {
  h_9(state, unused, out_6611330330362697541);
}
void live_H_9(double *state, double *unused, double *out_7197295201036095130) {
  H_9(state, unused, out_7197295201036095130);
}
void live_h_10(double *state, double *unused, double *out_3405989874012051555) {
  h_10(state, unused, out_3405989874012051555);
}
void live_H_10(double *state, double *unused, double *out_5691276471454773343) {
  H_10(state, unused, out_5691276471454773343);
}
void live_h_12(double *state, double *unused, double *out_1745573603744563952) {
  h_12(state, unused, out_1745573603744563952);
}
void live_H_12(double *state, double *unused, double *out_2419028439633723980) {
  H_12(state, unused, out_2419028439633723980);
}
void live_h_35(double *state, double *unused, double *out_2242375180930933540) {
  h_35(state, unused, out_2242375180930933540);
}
void live_H_35(double *state, double *unused, double *out_4071822790293078399) {
  H_35(state, unused, out_4071822790293078399);
}
void live_h_32(double *state, double *unused, double *out_6989707278751510539) {
  h_32(state, unused, out_6989707278751510539);
}
void live_H_32(double *state, double *unused, double *out_5684052485070716790) {
  H_32(state, unused, out_5684052485070716790);
}
void live_h_13(double *state, double *unused, double *out_9008445801239303650) {
  h_13(state, unused, out_9008445801239303650);
}
void live_H_13(double *state, double *unused, double *out_4693524989663708846) {
  H_13(state, unused, out_4693524989663708846);
}
void live_h_14(double *state, double *unused, double *out_6611330330362697541) {
  h_14(state, unused, out_6611330330362697541);
}
void live_H_14(double *state, double *unused, double *out_7197295201036095130) {
  H_14(state, unused, out_7197295201036095130);
}
void live_h_33(double *state, double *unused, double *out_168842592932288984) {
  h_33(state, unused, out_168842592932288984);
}
void live_H_33(double *state, double *unused, double *out_921265785654220795) {
  H_33(state, unused, out_921265785654220795);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
